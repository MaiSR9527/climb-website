<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
<meta name="author" content="slene, Unknown" />

<title>发布版本 - beego: 简约 &amp; 强大并存的 Go 应用框架</title>

<link rel="shortcut icon" href="/static/img/favicon.png" />


<script>/* Beego Compress group `lib` begin */</script>
	<link rel="stylesheet" href="/static_source/css/bootstrap.css?ver=1409586500" />
	<link rel="stylesheet" href="/static_source/css/bootstrap-theme.css?ver=1409586500" />
	<link rel="stylesheet" href="/static_source/css/font-awesome.min.css?ver=1409586500" />
	<link rel="stylesheet" href="/static_source/css/prettify.css?ver=1409586500" />
	<link rel="stylesheet" href="/static_source/css/select2.css?ver=1409586500" />
	<script>/* end */</script>
<!--[if IE 7]>
<script>/* Beego Compress group `ie7` begin */</script>
	<link rel="stylesheet" href="/static_source/css/font-awesome-ie7.min.css?ver=1409586500" />
	<script>/* end */</script>
<![endif]-->
<script>/* Beego Compress group `app` begin */</script>
	<link rel="stylesheet" href="/static_source/css/base.css?ver=1409586500" />
	<link rel="stylesheet" href="/static_source/css/markdown.css?ver=1409586500" />
	<link rel="stylesheet" href="/static_source/css/main.css?ver=1409586500" />
	<script>/* end */</script>

<!--[if lt IE 9]>
	<script>/* Beego Compress group `ie9` begin */</script>
	<script type="text/javascript" src="/static_source/js/html5shiv.js?ver=1409586500"></script>
	<script type="text/javascript" src="/static_source/js/respond.min.js?ver=1409586500"></script>
	<script>/* end */</script>
<![endif]-->
		
	</head>
	<body id="front">
		<noscript>请启用您浏览器的 JavaScript 选项！</noscript>
		<div id="wrapper">
			<nav class="navbar navbar-default navbar-fixed-top">
    <div class="container" data-toggle="clingify">
        <div class="row">
            <div class="navbar-header">
                
                <span class="visible-xs">
                    <a id="docs-collapse-btn" class="navbar-btn" data-toggle="jpanel-menu" data-target="#docs-collapse">
                        <span class="sr-only">Toggle docs menu</span>
                        <i class="icon icon-angle-right"></i>
                    </a>
                </span>
                
                <a type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar-collapse">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </a>
                <a class="hidden-xs logo" href="/">
                    <img style="height:32px;width:102px;" src="/static/img/beego_purple.png">
                </a>
                <div class="visible-xs text-center">
                    <a class="navbar-brand" href="/">
                        Beego
                    </a>
                    
                    <span class="nav-github">
                        <span rel="show-github" data-user="astaxie" data-repo="beego"></span>
                    </span>
                    
                </div>
            </div>
            <div class="collapse navbar-collapse" role="navigation" id="navbar-collapse">
                <ul class="nav navbar-nav">
                    <li ><a href="/">首页</a></li>
                    <li ><a href="/quickstart">快速入门</a></li>
                    <li ><a href="/community">开发者社区</a></li>
                    <li class="active"><a href="/docs/intro/">开发文档</a></li>
                    <li ><a href="/video">视频教程</a></li>
                    <li ><a href="/products">产品案例</a></li>
                    <li ><a href="/blog">官方博客</a></li>
                </ul>
                <div class="hidden-sm hidden-xs nav-lang pull-right">
                    <div class="btn-group">
                        <button type="button" class="btn btn-xs btn-default btn-md dropdown-toggle" data-toggle="dropdown">当前语言:简体中文 <i class="caret"></i></button>
                        <ul class="dropdown-menu">
                            
                                <li><a href="javascript::" data-lang="en-US" class="lang-changed">English</a></li>
                            
                                <li><a href="javascript::" data-lang="ru-RU" class="lang-changed">Russian</a></li>
                            
                        </ul>
                    </div>
                </div>
                <div class="hidden-sm hidden-xs nav-github pull-right">
                    <span rel="show-github" data-user="astaxie" data-repo="beego"></span>
                    <span rel="show-github" data-user="astaxie" data-repo="beego" data-type="fork"></span>
                </div>
            </div>
        </div>
    </div>
</nav>
			<div id="main">
				
<div class="container main-container">
    <div class="row">
        <div class="col-md-2 col-sm-3">
            <div id="docs-collapse" class="collapse navbar-collapse docs-sidenav">
                
                    
                    
    
        
            <ul class="list-unstyled">
                
                    
                        <li class="group">
                            <div class="section">
                            
                                <a class=" item" href="/docs/intro/">beego 简介</a>
                            
                            </div>
                            
    
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/intro/contributing.md">为 beego 贡献</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class="active item" href="/docs/intro/releases.md">发布版本</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/intro/upgrade.md">升级指南</a></li>
                    
                
            </ul>
        
    

                        </li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li class="group">
                            <div class="section">
                            
                                <a class=" item" href="/docs/install/">beego 安装升级</a>
                            
                            </div>
                            
    
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/install/bee.md">Bee 工具的使用</a></li>
                    
                
            </ul>
        
    

                        </li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li class="group">
                            <div class="section">
                            
                                <a class=" item" href="/docs/quickstart/">快速入门</a>
                            
                            </div>
                            
    
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/quickstart/new.md">新建项目</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/quickstart/router.md">路由设置</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/quickstart/controller.md">Controller 运行机制</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/quickstart/model.md">model 逻辑</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/quickstart/view.md">view 编写</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/quickstart/static.md">静态文件处理</a></li>
                    
                
            </ul>
        
    

                        </li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li class="group">
                            <div class="section">
                            
                                <a class=" item" href="/docs/mvc/">beego 的 MVC 架构</a>
                            
                            </div>
                            
    
        
            <ul class="list-unstyled">
                
                    
                        <li class="group">
                            <div class="section">
                            
                                controller 设计
                            
                            </div>
                            
    
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/mvc/controller/config.md">参数配置</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/mvc/controller/router.md">路由设置</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/mvc/controller/controller.md">控制器函数</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/mvc/controller/xsrf.md">XSRF 过滤</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/mvc/controller/params.md">请求数据处理</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/mvc/controller/session.md">session 控制</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/mvc/controller/filter.md">过滤器</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/mvc/controller/flash.md">flash 数据</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/mvc/controller/urlbuilding.md">URL构建</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/mvc/controller/jsonxml.md">多种格式数据输出</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/mvc/controller/validation.md">表单数据验证</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/mvc/controller/errors.md">错误处理</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/mvc/controller/logs.md">日志处理</a></li>
                    
                
            </ul>
        
    

                        </li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li class="group">
                            <div class="section">
                            
                                model 设计
                            
                            </div>
                            
    
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/mvc/model/overview.md">概述</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/mvc/model/orm.md">ORM 使用</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/mvc/model/object.md">CRUD 操作</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/mvc/model/query.md">高级查询</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/mvc/model/rawsql.md">原生 SQL 查询</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/mvc/model/querybuilder.md">构造查询</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/mvc/model/transaction.md">事务处理</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/mvc/model/models.md">模型定义</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/mvc/model/cmd.md">命令模式</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/mvc/model/test.md">测试用例</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/mvc/model/custom_fields.md">自定义字段</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/mvc/model/faq.md">FAQ</a></li>
                    
                
            </ul>
        
    

                        </li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li class="group">
                            <div class="section">
                            
                                view 设计
                            
                            </div>
                            
    
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/mvc/view/tutorial.md">模板语法指南</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/mvc/view/view.md">模板处理</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/mvc/view/template.md">模板函数</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/mvc/view/static.md">静态文件处理</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/mvc/view/page.md">模板分页处理</a></li>
                    
                
            </ul>
        
    

                        </li>
                    
                
            </ul>
        
    

                        </li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li class="group">
                            <div class="section">
                            
                                <a class=" item" href="/docs/module/">beego 的模块设计</a>
                            
                            </div>
                            
    
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/module/session.md">session 模块</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/module/grace.md">grace 模块</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/module/cache.md">cache 模块</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/module/logs.md">logs 模块</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/module/httplib.md">httplib 模块</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/module/context.md">context 模块</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/module/toolbox.md">toolbox 模块</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/module/config.md">config 模块</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/module/i18n.md">i18n 模块</a></li>
                    
                
            </ul>
        
    

                        </li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li class="group">
                            <div class="section">
                            
                                <a class=" item" href="/docs/advantage/">beego 高级编程</a>
                            
                            </div>
                            
    
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/advantage/monitor.md">进程内监控</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/advantage/docs.md">API 自动化文档</a></li>
                    
                
            </ul>
        
    

                        </li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li class="group">
                            <div class="section">
                            
                                <a class=" item" href="/docs/deploy/">应用部署</a>
                            
                            </div>
                            
    
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/deploy/beego.md">独立部署</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/deploy/supervisor.md">supervisor 部署</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/deploy/nginx.md">Nginx 部署</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/deploy/apache.md">apache 部署</a></li>
                    
                
            </ul>
        
    

                        </li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li class="group">
                            <div class="section">
                            
                                <a class=" item" href="/docs/contributed/">beego 第三方库</a>
                            
                            </div>
                            
    
        
    

                        </li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li class="group">
                            <div class="section">
                            
                                <a class=" item" href="/docs/examples/">应用例子</a>
                            
                            </div>
                            
    
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/examples/chat.md">在线聊天室</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/examples/shorturl.md">短域名服务</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/examples/todo.md">Todo 列表</a></li>
                    
                
            </ul>
        
    

                        </li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li class="group">
                            <div class="section">
                            
                                beego实用库
                            
                            </div>
                            
    
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/utils/captcha.md">验证码</a></li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li><a class=" item" href="/docs/utils/page.md">分页</a></li>
                    
                
            </ul>
        
    

                        </li>
                    
                
            </ul>
        
            <ul class="list-unstyled">
                
                    
                        <li class="group">
                            <div class="section">
                            
                                <a class=" item" href="/docs/faq/">FAQ</a>
                            
                            </div>
                            
    
        
    

                        </li>
                    
                
            </ul>
        
    

                
            </div>
        </div>
        <div class="col-md-10 col-sm-9">
            <div class="box">
				<div>
					<script>
					  (function() {
					    var cx = '014389342508982455625:6zv6mwcpcck';
					    var gcse = document.createElement('script');
					    gcse.type = 'text/javascript';
					    gcse.async = true;
					    gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
					        '//www.google.com/cse/cse.js?cx=' + cx;
					    var s = document.getElementsByTagName('script')[0];
					    s.parentNode.insertBefore(gcse, s);
					  })();
					</script>
					<gcse:search></gcse:search>
				</div>
                <div class="cell slim page-box">
                    <p>
                        <a href="https://github.com/beego/beedoc/blob/master/zh-CN/intro/releases.md" class="pull-right btn btn-info" target="_blank">到 GitHub 上改进本页面</a>
                        <span class="clearfix"></span>
                    </p>
                    <div class="markdown docs-markdown">
                        <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title></title>
  <meta name="GENERATOR" content="Blackfriday Markdown Processor v1.1" />
  <meta charset="utf-8" />
</head>
<body>

<h1>beego 1.12.2</h1>

<ol>
<li>Fix: 热更新老进程未能退出问题 <a href="https://github.com/astaxie/beego/pull/4005">#4005</a><br /></li>
<li>Enhance: ORM异常退出时打印堆栈 <a href="https://github.com/astaxie/beego/pull/3743">#3743</a><br /></li>
<li>Enhance: GetMapData使用读锁 <a href="https://github.com/astaxie/beego/pull/3803">#3803</a><br /></li>
<li>Fix: 正确读取符号路径目录下的文件 <a href="https://github.com/astaxie/beego/pull/3818">#3818</a><br /></li>
<li>Fix: Cache, context, session使用锁来保护变量 <a href="https://github.com/astaxie/beego/pull/3922">#3922</a><br /></li>
<li>Fix: URL编码的路径被错误解码导致匹配路径错误 <a href="https://github.com/astaxie/beego/pull/3943">#3943</a><br /></li>
<li>Fix: genRouterCode生成错误代码 <a href="https://github.com/astaxie/beego/pull/3981">#3981</a><br /></li>
<li>Enhance: 静态文件缓存使用LRU算法，并且限制文件数量和文件大小 <a href="https://github.com/astaxie/beego/pull/3984">#3984</a><br /></li>
<li>Fix: 设置最大连接数失效问题 <a href="https://github.com/astaxie/beego/pull/3985">#3985</a><br /></li>
<li>Fix: SQLite 不支持SELECT &hellip; FOR UPDATE <a href="https://github.com/astaxie/beego/pull/3992">#3992</a><br /></li>
<li>Enhance: 为<code>httplib</code>的<code>PostFile</code>方法添加<code>Transfer-Encoding</code> <a href="https://github.com/astaxie/beego/pull/3993">#3993</a><br /></li>
<li>Enhance: ORM支持位操作 <a href="https://github.com/astaxie/beego/pull/3994">#3994</a><br /></li>
<li>Fix: <code>BConfig.Listen.Graceful</code>为<code>true</code>的时候<code>RunWithMiddleware</code>,<code>App.Run(middleware)</code>不起效 <a href="https://github.com/astaxie/beego/pull/3995">#3995</a><br /></li>
<li>Fix: 错误信息中带上<code>label</code> <a href="https://github.com/astaxie/beego/pull/4001">#4001</a><br /></li>
<li>Fix: 关闭<code>logger</code>之后依旧发送关闭信号，造成 panic <a href="https://github.com/astaxie/beego/pull/4004">#4004</a><br /></li>
<li>Enhance: 在<code>beforeFilter</code>执行之前设置好<code>RouterPattern</code> <a href="https://github.com/astaxie/beego/pull/4007">#4007</a><br /></li>
<li>Fix: 使用<code>HTMLEscapeString</code>以避免 XSS 攻击 <a href="https://github.com/astaxie/beego/pull/4018">#4018</a><br /></li>
<li>Fix: 进程未能退出 <a href="https://github.com/astaxie/beego/pull/4005">#4005</a><br /></li>
<li>Enhance: 使用<code>scan</code>指令取代<code>keys</code> <a href="https://github.com/astaxie/beego/pull/4016">#4016</a><br /></li>
<li>Feature: 支持<code>prometheus</code> <a href="https://github.com/astaxie/beego/pull/4021">#4021</a><br /></li>
<li>Fix: <code>Prepare Statement</code>数量超出数据库上限 <a href="https://github.com/astaxie/beego/pull/4025">#4025</a><br /></li>
<li>Enhance: 支持全网段手机号码校验 <a href="https://github.com/astaxie/beego/pull/4027">#4027</a><br /></li>
<li>Fix: 无法设置<code>section</code>的名字 <a href="https://github.com/astaxie/beego/pull/4027">#4027</a><br /></li>
<li>Fix: 当<code>multi</code>为 0 时<code>orm/db.go</code>中<code>strings.Repeat</code>会 panic  <a href="https://github.com/astaxie/beego/pull/4032">#4032</a><br /></li>
<li>Enhance: <code>redis</code>的 <code>idle timeout</code>可配置化 <a href="https://github.com/astaxie/beego/pull/4033">#4033</a><br /></li>
</ol>

<h1>beego 1.10.0</h1>

<ol>
<li>Update log.go add GetLevel Function to Log <a href="https://github.com/astaxie/beego/pull/2970">#2970</a><br /></li>
<li>Fix a typo &ldquo;conflict&rdquo; <a href="https://github.com/astaxie/beego/pull/2971">#2971</a><br /></li>
<li>Bug on private fields <a href="https://github.com/astaxie/beego/pull/2978">#2978</a><br /></li>
<li>Fix access log console unexpected &lsquo;\n&rsquo; at end of each log. <a href="https://github.com/astaxie/beego/pull/2976">#2976</a><br /></li>
<li>Fix Documentation for HTTP status codes descriptions. <a href="https://github.com/astaxie/beego/pull/2992">#2992</a><br /></li>
<li>Redis cache: make MaxIdle configurable <a href="https://github.com/astaxie/beego/pull/3004">#3004</a><br /></li>
<li>Update: Fix migration generate SQL <a href="https://github.com/astaxie/beego/pull/3017">#3017</a><br /></li>
<li>Handle pointer validation <a href="https://github.com/astaxie/beego/pull/3046">#3046</a><br /></li>
<li>Fix the issue TaseCase TestFormatHeader_0 is failed <a href="https://github.com/astaxie/beego/pull/3066">#3066</a><br /></li>
<li>Fix BEEGO_RUNMODE <a href="https://github.com/astaxie/beego/pull/3064">#3064</a><br /></li>
<li>Swagger: Allow example values with different types, allow example for enum. <a href="https://github.com/astaxie/beego/pull/3085">#3085</a><br /></li>
<li>Fix the bug: unable to add column with ALTER TABLE <a href="https://github.com/astaxie/beego/pull/2999">#2999</a><br /></li>
<li>Set default Beego RunMode to production <a href="https://github.com/astaxie/beego/pull/3076">#3076</a><br /></li>
<li>Fix typo <a href="https://github.com/astaxie/beego/pull/3103">#3103</a><br /></li>
<li>In dev mode, template parse error cause program lock <a href="https://github.com/astaxie/beego/pull/3126">#3126</a><br /></li>
<li>Amend a very minor typo in a variable name <a href="https://github.com/astaxie/beego/pull/3115">#3115</a><br /></li>
<li>When log maxSize set big int，FileWrite Init fail <a href="https://github.com/astaxie/beego/pull/3109">#3109</a><br /></li>
<li>Change github.com/garyburd/redigo to newest branch github.com/gomodul… <a href="https://github.com/astaxie/beego/pull/3100">#3100</a><br /></li>
<li>ExecElem.FieldByName as local variable <a href="https://github.com/astaxie/beego/pull/3039">#3039</a><br /></li>
<li>Allow log prefix <a href="https://github.com/astaxie/beego/pull/3145">#3145</a><br /></li>
<li>Refactor yaml config for support multilevel <a href="https://github.com/astaxie/beego/pull/3127">#3127</a><br /></li>
<li>Create redis_cluster.go <a href="https://github.com/astaxie/beego/pull/3175">#3175</a><br /></li>
<li>Add field comment on create table <a href="https://github.com/astaxie/beego/pull/3190">#3190</a><br /></li>
<li>Update: use PathEscape replace QueryEscape <a href="https://github.com/astaxie/beego/pull/3200">#3200</a><br /></li>
<li>Update gofmt <a href="https://github.com/astaxie/beego/pull/3206">#3206</a><br /></li>
<li>Update: Htmlquote Htmlunquote <a href="https://github.com/astaxie/beego/pull/3202">#3202</a><br /></li>
<li>Add &lsquo;FOR UPDATE&rsquo; support for querySet <a href="https://github.com/astaxie/beego/pull/3208">#3208</a><br /></li>
<li>Debug stringsToJSON <a href="https://github.com/astaxie/beego/pull/3171">#3171</a><br /></li>
<li>Fix defaut value bug, and add config for maxfiles <a href="https://github.com/astaxie/beego/pull/3185">#3185</a><br /></li>
<li>Fix: correct MaxIdleConnsPerHost value to net/http default 100. <a href="https://github.com/astaxie/beego/pull/3230">#3230</a><br /></li>
<li>Fix: When multiply comment routers on one func <a href="https://github.com/astaxie/beego/pull/3217">#3217</a><br /></li>
<li>Send ErrNoRows if the query returns zero rows &hellip; in method orm_query… <a href="https://github.com/astaxie/beego/pull/3247">#3247</a><br /></li>
<li>Fix typo <a href="https://github.com/astaxie/beego/pull/3245">#3245</a><br /></li>
<li>Add session redis IdleTimeout config <a href="https://github.com/astaxie/beego/pull/3239">#3239</a><br /></li>
<li>Fix the wrong status code in prod <a href="https://github.com/astaxie/beego/pull/3226">#3226</a><br /></li>
<li>Add method to set the data depending on the accepted <a href="https://github.com/astaxie/beego/pull/3182">#3182</a><br /></li>
<li>Fix Unexpected EOF bug in staticfile <a href="https://github.com/astaxie/beego/pull/3152">#3152</a><br /></li>
<li>Add code style for logs README <a href="https://github.com/astaxie/beego/pull/3146">#3146</a><br /></li>
<li>Fix response http code <a href="https://github.com/astaxie/beego/pull/3142">#3142</a><br /></li>
<li>Improve access log <a href="https://github.com/astaxie/beego/pull/3141">#3141</a><br /></li>
<li>Auto create log dir <a href="https://github.com/astaxie/beego/pull/3105">#3105</a><br /></li>
<li>Html escape before display path, avoid xss <a href="https://github.com/astaxie/beego/pull/3022">#3022</a><br /></li>
<li>Acquire lock when access config data <a href="https://github.com/astaxie/beego/pull/3250">#3250</a><br /></li>
<li>Fix orm fields SetRaw function error judge problem <a href="https://github.com/astaxie/beego/pull/2985">#2985</a><br /></li>
<li>Fix template rendering with automatic mapped parameters (see #2979) <a href="https://github.com/astaxie/beego/pull/2981">#2981</a><br /></li>
<li>Fix the model can not be registered correctly on Ubuntu 32bit <a href="https://github.com/astaxie/beego/pull/2997">#2997</a><br /></li>
<li>Feature/yaml <a href="https://github.com/astaxie/beego/pull/3181">#3181</a><br /></li>
<li>Feature/autocert <a href="https://github.com/astaxie/beego/pull/3249">#3249</a><br /></li>
</ol>

<h1>beego 1.9.0</h1>

<ol>
<li>Fix the new repo address for casbin <a href="https://github.com/astaxie/beego/pull/2654">#2654</a><br /></li>
<li>Fix cache/memory fatal error: concurrent map iteration and map write <a href="https://github.com/astaxie/beego/pull/2726">#2726</a><br /></li>
<li>AddAPPStartHook func modify <a href="https://github.com/astaxie/beego/pull/2724">#2724</a><br /></li>
<li>Fix panic: sync: negative WaitGroup counter <a href="https://github.com/astaxie/beego/pull/2717">#2717</a><br /></li>
<li>incorrect error rendering (wrong status) <a href="https://github.com/astaxie/beego/pull/2712">#2712</a><br /></li>
<li>validation: support int64 int32 int16 and int8 type <a href="https://github.com/astaxie/beego/pull/2728">#2728</a><br /></li>
<li>validation: support required option for some struct tag valids <a href="https://github.com/astaxie/beego/pull/2741">#2741</a><br /></li>
<li>Fix big form parse issue <a href="https://github.com/astaxie/beego/pull/2725">#2725</a><br /></li>
<li>File log add RotatePerm <a href="https://github.com/astaxie/beego/pull/2683">#2683</a><br /></li>
<li>Fix Oracle placehold <a href="https://github.com/astaxie/beego/pull/2749">#2749</a><br /></li>
<li>Supported gzip for req.Header has Content-Encoding: gzip <a href="https://github.com/astaxie/beego/pull/2754">#2754</a><br /></li>
<li>Add new Database Migrations <a href="https://github.com/astaxie/beego/pull/2744">#2744</a><br /></li>
<li>Beego auto generate sort ControllerComments <a href="https://github.com/astaxie/beego/pull/2766">#2766</a><br /></li>
<li>added statusCode and pattern to FilterMonitorFunc <a href="https://github.com/astaxie/beego/pull/2692">#2692</a><br /></li>
<li>fix the bugs in the &ldquo;ParseBool&rdquo; function in the file of config.go <a href="https://github.com/astaxie/beego/pull/2740">#2740</a><br /></li>
</ol>

<h2>bee 1.9.0</h2>

<ol>
<li>Added MySQL year data type <a href="https://github.com/astaxie/beego/pull/443">#443</a><br /></li>
<li>support multiple http methods <a href="https://github.com/astaxie/beego/pull/445">#445</a><br /></li>
<li>The DDL migration can now be generated by adding a -ddl and a proper &ldquo;alter&rdquo; or &ldquo;create&rdquo; as argument value. <a href="https://github.com/astaxie/beego/pull/455">#455</a><br /></li>
<li>Fix: docs generator skips everything containing &lsquo;vendor&rsquo; <a href="https://github.com/astaxie/beego/pull/454">#454</a><br /></li>
<li>get these tables information in custom the option <a href="https://github.com/astaxie/beego/pull/441">#441</a><br /></li>
<li>read ref(pk) <a href="https://github.com/astaxie/beego/pull/444">#444</a><br /></li>
<li>Add command bee server to server static folder.<br /></li>
</ol>

<h1>beego 1.7.1</h1>

<p>新增功能:</p>

<ol>
<li>access log 增加 IP <a href="https://github.com/astaxie/beego/pull/2156">#2156</a><br /></li>
<li>orm 增加新接口 ReadForUpdate <a href="https://github.com/astaxie/beego/pull/2158">#2158</a><br /></li>
<li>参数 bind 支持数组 form，columns[0].Data=foo&amp;columns[1].Data=bar&amp;columns[2].Data=baz <a href="https://github.com/astaxie/beego/pull/2111">#2111</a><br /></li>
<li>自定义 recover 函数，增加配置 <code>beego.BConfig.RecoverFunc</code>，默认和原来保持一致，但是用户可以自己定义 <a href="https://github.com/astaxie/beego/issues/2004">#2004</a><br /></li>
<li>memcache cache 同时支持 byte 和 string 的存储，这样就可以通过 gob 保存 struct <a href="https://github.com/astaxie/beego/issues/1521">#1521</a><br /></li>
<li>ORM delete 支持按照指定条件删除 <a href="https://github.com/astaxie/beego/issues/1802">#1802</a><br /></li>
<li>swagger 的支持输出 yaml <a href="https://github.com/astaxie/beego/pull/2162">#2162</a><br /></li>
<li>增加 RunController 和 RunMethod,让用户自定义路由规则 <a href="https://github.com/astaxie/beego/issues/2017">#2017</a><br /></li>
</ol>

<p>修复 bug:</p>

<ol>
<li>静态目录如果已经存在 index.html,当访问目录的时候不会自动添加 /, 例如访问 /swagger 不会跳转到 /swagger/，这样会导致相对的 css 和 js 访问不存在 <a href="https://github.com/astaxie/beego/issues/2142">#2142</a><br /></li>
<li>beego admin ui 里面访问时间排序没有按照 us, ms 排序，而是按照字符排序 <a href="https://github.com/astaxie/beego/issues/1877">#1877</a><br /></li>
<li>captcha 生产图片的时候，自定义 height 和 width crash <a href="https://github.com/astaxie/beego/issues/2161">#2161</a><br /></li>
<li>DELETE 请求下开启了 CopyBody 情况下，如果 body 为空 panic <a href="https://github.com/astaxie/beego/issues/1656">#1656</a><br /></li>
</ol>

<h1>beego 1.7.0</h1>

<p>新增改进功能：</p>

<ol>
<li>Filter 访问速度提升 7.5 倍以上 <a href="https://github.com/astaxie/beego/pull/1799">#1799</a><br /></li>
<li>Gzip 压缩的时候支持不同的 level <a href="https://github.com/astaxie/beego/pull/1808">#1808</a><br /></li>
<li>ORM PK 支持负数 <a href="https://github.com/astaxie/beego/pull/1810">#1810</a><br /></li>
<li>ORM 支持自定义自增 ID 的值 <a href="https://github.com/astaxie/beego/pull/1826">#1826</a><br /></li>
<li>Context 下载文件函数改进：下载文件之前先检查是否存在 <a href="https://github.com/astaxie/beego/pull/1827">#1827</a><br /></li>
<li>log增加 <code>GetLogger</code> 函数，可以增加相应的前缀 <a href="https://github.com/astaxie/beego/pull/1832">#1832</a><br /></li>
</ol>

<pre><code>package main

import &quot;github.com/astaxie/beego/logs&quot;

func main() {
    logs.Warn(&quot;this is a warn message&quot;)

    l := logs.GetLogger(&quot;HTTP&quot;)
    l.Println(&quot;this is a message of http&quot;)

    logs.GetLogger(&quot;orm&quot;).Println(&quot;this is a message of orm&quot;)

    logs.Debug(&quot;my book is bought in the year of &quot;, 2016)
    logs.Info(&quot;this %s cat is %v years old&quot;, &quot;yellow&quot;, 3)
    logs.Error(1024, &quot;is a very&quot;, &quot;good&quot;, 2.5, map[string]int{&quot;id&quot;: 1})
    logs.Critical(&quot;oh my god&quot;)
}
</code></pre>

<p><img src="https://cloud.githubusercontent.com/assets/707691/14017109/f608b658-f1ff-11e5-8d57-72030cfe4f5d.png" alt="" />
</p>

<ol>
<li>session 增加 Log，一旦错误发生可以记录日志. <a href="https://github.com/astaxie/beego/pull/1833">#1833</a><br /></li>
<li>logs 包添加两个 public 函数,<code>EnableFuncCallDepth</code> 和 <code>SetLogFuncCallDepth</code>, 用来设置函数的调用层级. <a href="https://github.com/astaxie/beego/pull/1837">#1837</a><br /></li>
<li>支持 <code>go run</code> 运行 beego 的项目代码 <a href="https://github.com/astaxie/beego/pull/1840">#1840</a><br /></li>
<li>添加 <code>ExecuteTemplate</code> 函数，这样用户就可以通过这种方式访问 template，而不是直接访问 map，因为 map 有并发读写问题 <a href="https://github.com/astaxie/beego/pull/1848">#1848</a><br /></li>
<li>ORM 字段支持 <code>time</code> 类型 <a href="https://github.com/astaxie/beego/pull/1856">#1856</a><br /></li>
<li>ORM One 接口只获取一条 <a href="https://github.com/astaxie/beego/pull/1874">#1874</a><br /></li>
<li>ORM 支持 json jsonb 类型   <a href="https://github.com/astaxie/beego/pull/1875">#1875</a><br /></li>
<li>ORM 默认使用 text 类型 <a href="https://github.com/astaxie/beego/pull/1879">#1879</a><br /></li>
<li>session 配置三个配置，<code>EnableSidInHttpHeader</code> <code>EnableSidInUrlQuery</code> <code>SessionNameInHttpHeader</code>,<br />
允许用户可以在 http 头和 URL 中带 sid <a href="https://github.com/astaxie/beego/pull/1897">#1897</a><br /></li>
<li>自动化路由改进生成的文件名，之前太长了 <a href="https://github.com/astaxie/beego/pull/1924">#1924</a><br /></li>

<li><p>支持复杂的模板引擎. ace jade <a href="https://github.com/astaxie/beego/pull/1940">#1940</a><br />
```<br />
beego.AddTemplateEngine(&ldquo;ace&rdquo;, func(root, path string, funcs template.FuncMap) (*template.Template, error) {</p>

<pre><code>aceOptions := &amp;ace.Options{DynamicReload: true, FuncMap: funcs}
aceBasePath := filepath.Join(root, &quot;base/base&quot;)
aceInnerPath := filepath.Join(root, strings.TrimSuffix(path, &quot;.ace&quot;))


tpl, err := ace.Load(aceBasePath, aceInnerPath, aceOptions)
if err != nil {
    return nil, fmt.Errorf(&quot;error loading ace template: %v&quot;, err)
}


return tpl, nil
</code></pre>

<p>})<br />
```<br />
<a href="https://github.com/astaxie/beego/pull/1940">#1940</a></p></li>

<li><p>session 引擎支持 ssdb <a href="https://github.com/astaxie/beego/pull/1953">#1953</a></p></li>

<li><p>RenderForm 支持输出 required <a href="https://github.com/astaxie/beego/pull/1993">#1993</a></p></li>

<li><p>让打印的 beego 日志更加美观 <a href="https://github.com/astaxie/beego/pull/1997">#1997</a><br />
<img src="https://cloud.githubusercontent.com/assets/1248967/16153054/f654b08e-34a4-11e6-894d-24f16ab847a7.png" alt="" />
</p></li>

<li><p>ORM 支持 struct 中带有 <code>time.Time</code> 指针 <a href="https://github.com/astaxie/beego/pull/2006">#2006</a></p></li>

<li><p>Controller 中增加 <code>TplPrefix</code> 这样就可以在 baseController 制定读取模板的前缀目录 <a href="https://github.com/astaxie/beego/pull/2030">#2030</a></p></li>

<li><p>jsonb 函数中增加 js 函数的判断，避免函数不存在时候出错.  <a href="https://github.com/astaxie/beego/pull/2045">#2045</a></p></li>

<li><p>ORM 增加 <code>InsertOrUpdate</code> 函数 <a href="https://github.com/astaxie/beego/pull/2053">#2053</a></p></li>

<li><p>Filter 函数增加重置参数的参数. 因为 <code>beego.InsertFilter(&quot;*&quot;, beego.BeforeStatic, RedirectHTTP)</code><br />
的时候，参数会赋值给 <code>:splat</code>,从而影响后续如果路由里面也有想用的路由，<br />
那么就会引起冲突，因此增加这样的函数以方便用户重置。 <a href="https://github.com/astaxie/beego/pull/2085">#2085</a></p></li>

<li><p>session 包配置采用对象初始化，而抛弃传递 json 的方式. 如果独立使用session包的可能会引起兼容性问题 <a href="https://github.com/astaxie/beego/pull/2096">#2096</a></p></li>

<li><p>Swagger 迁移到2.0版本，现在生产的代码无需依赖 API，直接生产 swagger.json</p></li>
</ol>

<p>bugfix:</p>

<ol>
<li>静态路由中 <code>/m</code> 自动跳转到 <code>/m/</code> <a href="https://github.com/astaxie/beego/pull/1792">#1792</a><br /></li>
<li>test 的时候解析配置文件出错 <a href="https://github.com/astaxie/beego/pull/1794">#1794</a><br /></li>
<li>文件 rotato 的时候产生 race condition <a href="https://github.com/astaxie/beego/pull/1803">#1803</a><br /></li>
<li>修复 multiple response.WriteHeader calls 的错误 <a href="https://github.com/astaxie/beego/pull/1805">#1805</a><br /></li>
<li>ORM 如果主键是 uint 的时候 panic <a href="https://github.com/astaxie/beego/pull/1828">#1828</a><br /></li>
<li>日志 rotate 的时候如果当前时间小于 2000 panic [#]()<br /></li>
<li>context 重用导致 XSRF 重用<a href="https://github.com/astaxie/beego/pull/1863">#1863</a><br /></li>
<li>ORM InsertMulti 的时候当是 * 类型时 panic <a href="https://github.com/astaxie/beego/pull/1882">#1882</a><br /></li>
<li>task 中任务在很微小的时间内可能存在执行多次的情况 <a href="https://github.com/astaxie/beego/pull/1909">#1909</a><br /></li>
<li>IE 浏览器下载文件名混乱 <a href="https://github.com/astaxie/beego/pull/1912">#1912</a><br /></li>
<li>ORM DISTINCT 实现 <a href="https://github.com/astaxie/beego/pull/1938">#1938</a><br /></li>
<li>Logs 包里面设置文件的 permit 时候，int 无法设置. <a href="https://github.com/astaxie/beego/pull/1948">#1948</a> <a href="https://github.com/astaxie/beego/pull/2003">#2003</a><br /></li>
<li>QueryRow 和 QueryRows 查询获取数据后外键字段不填充值 <a href="https://github.com/astaxie/beego/pull/1964">#1964</a><br /></li>
<li>当 beego 应用跑在代理之后的时候，scheme 通过 <code>X-Forwarded-Proto</code> 获取 <a href="https://github.com/astaxie/beego/pull/2050">#2050</a><br /></li>
<li>静态文件访问目录时候跳转到 <code>目录/</code> 的时候自动带上参数 <a href="https://github.com/astaxie/beego/pull/2064">#2064</a><br /></li>
</ol>

<h1>beego 1.6.1</h1>

<p>新增功能：</p>

<ol>
<li>ORM 支持 Oracle 驱动<br /></li>
<li>ORM 的 Model 支持 inline<br /></li>
<li>Cache 支持 ssdb引擎<br /></li>
<li>console 支持颜色输出配置<br /></li>
<li>添加 travis 的自动化集成测试<br /></li>
<li>日志新增 mulitfile 引擎，支持不同级别的输出到不同的文件<br /></li>
</ol>

<p>bugfix：</p>

<ol>
<li>cookie 时间设置<br /></li>
<li>路由规则里面的匹配 <a href="https://github.com/astaxie/beego/issues/1580">#1580</a><br /></li>
<li>在 beego.Run() 之前没有 log 输出<br /></li>
<li>config 获取 []string 为空的时候返回为空，应该返回 nil<br /></li>
<li>ini 接口保存的时候需要注释不正确<br /></li>
<li>异步存储日志的时候时间可能延迟的问题<br /></li>
<li>配置文件解析两次，导致部署 key 获取失败<br /></li>
<li>正则路由无法解析本身带有 <code>()</code> 的问题<br /></li>
<li>mail发送中文附件和 title 乱码的问题<br /></li>
<li>ORM 里面缺少 Distinct 的接口定义<br /></li>
<li>Layout 编译失败<br /></li>
<li>logrotate 的时候文件名不正确<br /></li>
<li>CORS 插件失败的时候不生效<br /></li>
<li>filters 的路径参数和路由参数冲突<br /></li>
<li>静态文件找不到返回 200，应该返回 404<br /></li>
<li>添加 GroupBy 的 interface 支持<br /></li>
<li>Go1.6 的并发访问 map 引起静态文件换成崩溃<br /></li>
<li>httplib JSONBody 输出的时候采用 json.Encoder 会输出一个额外的换行符<br /></li>
<li>异步模式下，log 调用 flush，Close 的时候日志丢失<br /></li>
</ol>

<h1>beego 1.6.0</h1>

<p>新功能：</p>

<ol>
<li>文件 log 支持 rotate 支持类似 <code>xx.2013-01-01.2.log</code> 这样的输出 <a href="https://github.com/astaxie/beego/pull/1265">#1265</a><br /></li>
<li>context.response 支持了原生的 Flush，Hijack，CloseNotify<br /></li>
<li>ORM 支持 Distinct 操作 <a href="https://github.com/astaxie/beego/pull/1276">#1276</a><br /></li>
<li>新增加模板函数 map_get <a href="https://github.com/astaxie/beego/pull/1305">#1305</a><br /></li>
<li>ORM 支持 tidb 引擎 <a href="https://github.com/astaxie/beego/pull/1366">#1366</a><br /></li>
<li>httplib 请求参数支持 []string <a href="https://github.com/astaxie/beego/pull/1308">#1308</a><br /></li>
<li>ORM querySeter 添加 GroupBy 方法 <a href="https://github.com/astaxie/beego/pull/1345">#1345</a><br /></li>
<li>Session 的 MySQL 引擎支持自定义表名 <a href="https://github.com/astaxie/beego/pull/1348">#1348</a><br /></li>
<li>log 的 file 引擎性能提升 30%，同时支持自定义创建的文件权限 <a href="https://github.com/astaxie/beego/pull/1560">#1560</a><br /></li>
<li>session 支持通过 query 获取 <a href="https://github.com/astaxie/beego/pull/1507">#1507</a><br /></li>
<li>Cache 模块支持多个 Cache 对象，之前调用 NewCache 获取的是同一个 Cache，现在会初始化不同的 Cache 对象。<br /></li>
<li>validation 支持自定义验证函数<br /></li>
</ol>

<p>bugfix:</p>

<ol>
<li>context 里面 bind 函数如果参数为空 crash <a href="https://github.com/astaxie/beego/issues/1245">#1245</a><br /></li>
<li>ORM 中 manytomany 获取 reverse 的时候出错。<a href="https://github.com/astaxie/beego/issues/671">#671</a><br /></li>
<li>http: multiple response.WriteHeader calls <a href="https://github.com/astaxie/beego/pull/1329">#1329</a><br /></li>
<li>ParseForm 解析日期使用当前的 timezone <a href="https://github.com/astaxie/beego/pull/1343">#1343</a><br /></li>
<li>log 引擎里面 Smtp 发送邮件无法认证<br /></li>
<li>修复路由规则的一些 issue: <code>/topic/:id/?:auth</code>, <code>/topic/:id/?:auth:int</code> <a href="https://github.com/astaxie/beego/pull/1349">#1349</a><br /></li>
<li>修复注释文档解析的时候 nil 引起 crash <a href="https://github.com/astaxie/beego/pull/1367">#1367</a><br /></li>
<li>static 目录下的 index.html 无法读取<a href="https://github.com/astaxie/beego/pull/1508">#1508</a><br /></li>
<li>dbBase.Update 失败不返回 err <a href="https://github.com/astaxie/beego/pull/1384">#1384</a><br /></li>
<li>validation 里面设置的 Required 只对 int 有效，int64 无效<br /></li>
<li>ORM 创建外键是 string 类型的主键时创建 varchar(0) 的字符问题 <a href="https://github.com/astaxie/beego/pull/1379">#1379</a><br /></li>
<li>graceful 同时开启 http 和 https 的时候出错 <a href="https://github.com/astaxie/beego/pull/1414">#1414</a><br /></li>
<li>ListenTCP4 开启之后如果 httpaddr 为空还是监控 TCP6<br /></li>
<li>migration 不支持 postgres <a href="https://github.com/astaxie/beego/pull/1434">#1434</a><br /></li>
<li>ORM text、bool 等默认值问题导致创建表出错<br /></li>
<li>graceful 导致 panic 问题 negative WaitGroup counter<br /></li>
</ol>

<p>优化:</p>

<ol>
<li>example 移到了 <a href="https://github.com/beego/samples">samples</a><br /></li>
<li>所有代码符合 golint 规范<br /></li>
<li>重写路由树底层，性能提升三倍左右<br /></li>
<li>每次请求的 context 采用 sync.Pool 复用，内存和性能提升<br /></li>
<li>模板编译优化速度，按需编译 <a href="https://github.com/astaxie/beego/pull/1298">#1298</a><br /></li>
<li>优化了 beego 的配置管理，采用统一的 BConfig，更易读易管理<br /></li>
<li>优化了 beego 的整体结构代码，使得代码更易读维护<br /></li>
<li>所有初始化的信息统一到 AddAPPStartHook 函数中去，易于管理<br /></li>
<li>移除了 middleware，之后全部采用 plugins 来管理插件<br /></li>
<li>重构 Error 处理，使得 Error 更加易懂<br /></li>
</ol>

<h1>beego 1.5.0</h1>

<p>新功能:</p>

<ol>
<li>优雅重启模块：grace<br /></li>
<li>httplib 增加 JsonBody 函数，支持 raw body 以 Json 格式发送<br /></li>
<li>context input 增加 AcceptsHtml AcceptsXml AcceptsJson 函数<br /></li>
<li>配置文件优先从 Runmode 中获取<br /></li>
<li>httplib 支持 gzip<br /></li>
<li>Log 模块默认不采用异步方式<br /></li>
<li>validation 增加循环嵌套验证<br /></li>
<li>增加 apk mime<br /></li>
<li>ORM 支持 eq 和 ne<br /></li>
</ol>

<p>bugfix:</p>

<ol>
<li>ledis 驱动的参数错误<br /></li>
<li>当页面放置一段时间，验证码将从缓存中失效。当用户再来刷新验证码将出现验证码 404。对于 reload 操作应该直接生成验证码。<br /></li>
<li>Controller 定义 Error 异常<br /></li>
<li>修复 cookie 无法在 window 下的 IE 正常工作<br /></li>
<li>GetInt 函数当获取不存在的变量是返回 nil 错误<br /></li>
<li>增加更多的手机验证码方式<br /></li>
<li>修复路由的匹配问题<br /></li>
<li>panic 返回 http 200<br /></li>
<li>redis session 引起数据库设置错误<br /></li>
<li>https 和 http 直接的 session 无法共享<br /></li>
<li>memcache session 引擎当没有数据的时候返回错误<br /></li>
</ol>

<h1>beego 1.4.3</h1>

<p>新功能:</p>

<ol>
<li>ORM 数据库创建和修改的时候支持 default 设置<br /></li>
<li>改进日志文件行数统计<br /></li>
<li>session ledis 支持选择数据库<br /></li>
<li>session redis 支持选择数据库<br /></li>
<li>cache redis 支持选择数据库<br /></li>
<li>UrlFor 支持任意类型的参数<br /></li>
<li>controller 中 GetInt/GetString 等 Get 系列函数支持默认值, 例如：GetInt(&ldquo;a&rdquo;,12)<br /></li>
<li>增加 CompareNot/NotNil 模板函数<br /></li>
<li>支持 Controller 定义错误处理，更多请参考 <a href="http://beego.me/docs/mvc/controller/errors.md#controller%E5%AE%9A%E4%B9%89error">controller Error</a><br /></li>
<li>ParseForm 增加支持 slices<br /></li>
<li>改进 ORM interface，可以模拟 interface<br /></li>
</ol>

<p>bugfix:</p>

<ol>
<li>context subdomain 获取的子域名不正确<br /></li>
<li>beego.AppConfig.Strings 当数据为空时判定不正确<br /></li>
<li>utils/pagination 修复不能修改分页属性<br /></li>
<li>路由处理中如果请求的 URL 是空导致 crash 的问题<br /></li>
<li>adminui 中 task 点击无法执行<br /></li>
<li>CGI 模式退出进程后 Socket 文件没有删除<br /></li>
</ol>

<h1>beego 1.4.2</h1>

<p>新功能：</p>

<ol>
<li>增加了 SQL 构造器，参考了 ZEND 框架的 ORM<br /></li>
<li>Controller 获取参数增加了 GetInt(), GetInt8(), GetInt16(), GetInt32(), GetInt64()<br /></li>
<li>优化日志提示，增加日志输出过滤设置 FilterHandler，默认静态文件不输出匹配日志<br /></li>
<li>静态目录支持 index.html 输出，静态目录自动增加 /<br /></li>
<li>flash 支持 success 和 set 函数，支持各种一次性的数据<br /></li>
<li>路由支持大小写忽略设置，RouterCaseSensitive，默认是大小写敏感的 URL，根据用户注册的URL进行匹配<br /></li>

<li><p>配置文件支持自定义的变量获取，beego.AppConfig.String(&ldquo;myvar&rdquo;) 在 dev 模式下返回456，在其他模式下返回 123</p>

<blockquote>
<p>runmode = dev<br />
myvar = 123<br />
[dev]<br />
myvar = 456</p>
</blockquote></li>

<li><p>ini 配置文件支持 include 语法，在配置文件中允许 include 其他配置文件：</p>

<blockquote>
<p>appname = btest<br />
include b.conf</p>
</blockquote></li>

<li><p>utils 下增加分页组件，可以方便用户编写分页相关的应用。</p></li>

<li><p>增加 BEEGO_RUNMODE 环境变量，用户在部署的时候只要通过改变量方便切换应用的不同模式</p></li>

<li><p>toolbox 增加获取 statistic 的 Json 函数</p></li>

<li><p>utils 下的 mail 发送内嵌附件发送</p></li>

<li><p>允许用户通过标准 IO 开启 fastcgi</p></li>

<li><p>redis Session 引擎，采用 SETEX 命令兼容老版本的 redis</p></li>

<li><p>RenderForm 支持 html id 和 class，使用 id 和 class tag</p></li>

<li><p>ini 配置文件支持 BOM 头</p></li>

<li><p>Session 增加新的引擎 ledis</p></li>

<li><p>改进 httplib 文件上传，采用了 io.Pipe 支持超大文件上传</p></li>

<li><p>支持应用启动直接绑定到 TCP4 地址上，Go 默认是绑定到 ipv6，增加配置参数 ListenTCP4</p></li>

<li><p>表单数据渲染支持 off/on/yes/no/<sup>1</sup>&frasl;<sub>0</sub> 解析到 bool，支持 time 格式的解析</p></li>

<li><p>简化了 SessionID 的生成，不再采用 hmac_sha1 算法，直接通过 golang 内置的 rand 获取</p></li>
</ol>

<p>bugfix:</p>

<ol>
<li>模拟 PUT 和 DELETE 时，_method 的值没有大写，导致 XSRF 验证失败<br /></li>
<li>cache 如果在 StartAndGC 初始化失败时，没有返回错误信息<br /></li>
<li>httplib 修复 User-Agent 设置不起作用<br /></li>
<li>DelStaticPath 优化/处理<br /></li>
<li>静态目录多个的时候，文件只会在第一个静态目录找<br /></li>
<li>Filter 函数在 AfterExec 和 FinishRouter 之后多个 Filter 不能执行的问题<br /></li>
<li>修复在请求方法是模拟的 _method 是 PUT 或者 DELETE 的时候无法正确路由<br /></li>
<li>修复了 mime 没有初始化的问题<br /></li>
<li>log 输出文件以及行号不正确<br /></li>
<li>httplib 修复了当只有一个文件上传一个参数是不能发送的问题<br /></li>
<li>改进了 Abort 的输出信息，之前如果是没有定义的错误信息不会输出<br /></li>
<li>修复 namespace 循环嵌套中，如果外层没有 Filter 的情况下内层 Filter 无法添加的问题<br /></li>
<li>路由包含多层参数时，路由匹配出错 #824<br /></li>
<li>注释路由，如果存在多个 namespace 的时候，一个更新，另一个信息丢失 #770<br /></li>
<li>urlfor函数调用多余 {{placeholder}} 问题 #759<br /></li>
</ol>

<h1>beego 1.4.1</h1>

<p>主要更新：</p>

<ol>
<li>context.Input.Url 获取 path 信息，去除了域名，scheme 等信息<br /></li>
<li>增加插件 apiauth，模拟 AWS 的加密请求<br /></li>
<li>精简 debug 输出的路由信息<br /></li>
<li>orm 字段支持指针类型<br /></li>
<li>改进了 httplib 功能，增加了 BasicAuth，多次请求缓存等功能<br /></li>
</ol>

<p>bugfix:</p>

<ol>
<li>_method 模拟请求 put 和 delete，参数大小写不统一<br /></li>
<li>路由 <em>.</em> 和其他路由正则混用情况下无法解析<br /></li>
</ol>

<h1>beego 1.4.0</h1>

<p>这个版本整整憋了两个月时间，主要是我们真的做了好多功能性上面的改进，这里要感谢所有给 beego 贡献的用户，也感谢给 beego 持续提各种改进意见的用户，下面是我们这次改进的特性</p>

<ol>
<li><p>bee 工具的完整性改进，bee 现在支持了如下功能：</p>

<p>bee api 直接从数据库读取数据库表，一键生成 API 应用带文档，详细介绍看视频：<a href="http://www.tudou.com/programs/view/aM7iKLlBlrU/">http://www.tudou.com/programs/view/aM7iKLlBlrU/</a></p>

<ul>
<li><p>bee generate 命令，这个是新增加的命令，可以用来自动化生成代码，主要有如下子命令：</p>

<ul>
<li><p>scaffold 类似其他框架的脚手架功能，生成 controller、model、view、migration</p></li>

<li><p>model 生成 CRUD 的 model</p></li>

<li><p>controller 生成 CRUD 的 controller</p></li>

<li><p>view 生成 CRUD 的 view 文件，内容为空，需要用户自己做 UI 界面</p></li>

<li><p>migration 生成 migration 文件</p></li>

<li><p>appcode 从数据库根据表结构生成 model、controller、router</p></li>

<li><p>docs 从 controller 注释自动化生成 swagger 文档</p></li>
</ul></li>

<li><p>bee migrate 命令，执行 migration，支持如下子命令</p>

<ul>
<li><p>migrate 执行所有新的 migration</p></li>

<li><p>rollback 回滚最后一次执行的 migration</p></li>

<li><p>reset 回滚所有的 migration</p></li>

<li><p>refresh 回滚所有的 migration 并从头执行全部的 migration</p></li>
</ul></li>

<li><p>bee run改进，默认支持了 watchall 功能，增加了两个参数 gendoc 和 downdoc</p></li>
</ul></li>

<li><p>config 模块增加新的接口，现在 config 模块支持如下接口，支持直接保存文件：</p>

<pre><code>type ConfigContainer interface {
    Set(key, val string) error   // support section::key type in given key when using ini type.
    String(key string) string    // support section::key type in key string when using ini and json type; Int,Int64,Bool,Float,DIY are same.
    Strings(key string) []string //get string slice
    Int(key string) (int, error)
    Int64(key string) (int64, error)
    Bool(key string) (bool, error)
    Float(key string) (float64, error)
    DefaultString(key string, defaultval string) string      // support section::key type in key string when using ini and json type; Int,Int64,Bool,Float,DIY are same.
    DefaultStrings(key string, defaultval []string) []string //get string slice
    DefaultInt(key string, defaultval int) int
    DefaultInt64(key string, defaultval int64) int64
    DefaultBool(key string, defaultval bool) bool
    DefaultFloat(key string, defaultval float64) float64
    DIY(key string) (interface{}, error)
    GetSection(section string) (map[string]string, error)
    SaveConfigFile(filename string) error
}
</code></pre></li>

<li><p>middleware中支持另一种 i18n 的支持：</p>

<pre><code>I18N = middleware.NewLocale(&quot;conf/i18n.conf&quot;, beego.AppConfig.String(&quot;language&quot;))
</code></pre>

<p>配置文件如下：</p>

<pre><code>{
  &quot;E-mail Address&quot;: {
    &quot;en&quot;: &quot;E-mail Address&quot;,
    &quot;zh&quot;: &quot;邮箱地址&quot;,
    &quot;vn&quot;: &quot;อีเมล&quot;
  },
  &quot;Username&quot;: {
    &quot;en&quot;: &quot;Ussername&quot;,
    &quot;zh&quot;: &quot;用户名&quot;,
    &quot;vn&quot;: &quot;t&amp;ecirc;n truy nhập&quot;
  }
}
</code></pre>

<p>使用如下：</p>

<p><code>I18N.Translate(&quot;username&quot;, &quot;vn&quot;)</code></p></li>

<li><p>namespace前缀支持正则：</p>

<pre><code>beego.NewNamespace(&quot;/v1/:uid&quot;,
    beego.NSNamespace(&quot;/customer&quot;,
        beego.NSInclude(
            &amp;controllers.CustomerController{},
            &amp;controllers.CustomerCookieCheckerController{},
        ),
    ),
)
</code></pre></li>

<li><p>cache 和 session 模块的 memcache、redis 引擎修改到最新版本的驱动</p></li>

<li><p>增加开发打印路由调试功能:</p>

<pre><code>2014/08/22 09:55:40 [I] | GET | /          | 7.660221504s     | match      | / |
2014/08/22 09:55:40 [I] | GET | /          | 13.421869836s    | match      | / |
2014/08/22 09:55:40 [I] | GET | /          | 1.726185752s     | match      | / |
2014/08/22 09:55:40 [I] | GET | /user/login| 7.494079ms       | match      | /user/login |
</code></pre></li>

<li><p>log 的等级符合 RFC5424 规范</p></li>

<li><p>静态文件处理支持 robots.txt，用户放在 static 目录下即可</p></li>

<li><p>增加和简化 plugins 功能：</p>

<p>auth 支持 basicauth，详细使用请看 <a href="https://godoc.org/github.com/astaxie/beego/plugins/auth">https://godoc.org/github.com/astaxie/beego/plugins/auth</a><br />
cors 支持跨站调用，详细使用请看 <a href="https://godoc.org/github.com/astaxie/beego/plugins/cors">https://godoc.org/github.com/astaxie/beego/plugins/cors</a></p></li>

<li><p>新增了 AdminUI，用户在 EnableAdmin 的情况下，可以通过界面简单地获取当前应用的各种状态，同时可以很容易的调试性能，监控系统，执行任务，获取配置等</p>

<p><img src="../images/adminui.png" alt="" />
</p></li>

<li><p>session 配置现在支持设置 cookie domain</p></li>

<li><p>新增 migration 包，支持 migration 的功能</p></li>

<li><p>getconfg 方法改为 public 方法，用户就可以通过改方法获取相应 runmode 下的配置文件</p></li>

<li><p>改进 httplib 的方法支持 SetAgent 和 BasicAuth 的请求，httplib 支持请求一次，读取多次</p></li>
</ol>

<p>修复 bug：</p>

<ol>
<li>file session 在部分情况下内容消失问题<br /></li>
<li>docs 自动化生成，文件不更新<br /></li>
<li>路由 namespace 的前缀不支持<br /></li>
<li>orm 修正 detect engine<br /></li>
<li>修复 captcha 里面当用户验证码输入长度不对时不进行更新<br /></li>
<li>调用 setstatus 之后后面调用的 setHeader 全部无效的问题<br /></li>
<li>修复 smtp 发送邮件需要验证的情况<br /></li>
<li>修复 utils 下 safemap 的 items 问题<br /></li>
<li>修复 geturl 函数当参数多个时不带?的问题<br /></li>
</ol>

<h1>beego 1.3.0</h1>

<p>经过了一个多月的开发，我们很高兴的宣布，beego 1.3.0来了，这个版本我们做了非常多好玩并且有用的功能，升级请看<a href="http://beego.me/docs/intro/upgrade.md">升级指南</a></p>

<h2>路由重写</h2>

<p>这一次路由进行了全部改造，从之前的三个路由模式，改成了 tree 路由，第一性能得到了提升，第二路由支持的格式更加丰富，第三路由更加符合我们的思考方式，</p>

<p>例如现在注册如下路由规则：</p>

<pre><code>/user/astaxie
/user/:username
</code></pre>

<p>如果你的访问地址是 <code>/user/astaxie</code>，那么优先匹配固定的路由，也就是第一条，如果访问是 <code>/user/slene</code>，那么就匹配第二个，和你注册的路由的先后顺序无关</p>

<h2>namespace 更优雅</h2>

<p>设计 namespace 主要是为了大家模块化设计的，之前是采用了类似 jQuery 的链式方式，当然新版本也是支持的，但是由于 gofmt 的格式无法很直观的看出来整个路由的目录结构，所以我采用了多参数注册方式，现在看上去就更加的优雅：</p>

<pre><code>ns :=
beego.NewNamespace(&quot;/v1&quot;,
    beego.NSNamespace(&quot;/shop&quot;,
        beego.NSGet(&quot;/:id&quot;, func(ctx *context.Context) {
            ctx.Output.Body([]byte(&quot;shopinfo&quot;))
        }),
    ),
    beego.NSNamespace(&quot;/order&quot;,
        beego.NSGet(&quot;/:id&quot;, func(ctx *context.Context) {
            ctx.Output.Body([]byte(&quot;orderinfo&quot;))
        }),
    ),
    beego.NSNamespace(&quot;/crm&quot;,
        beego.NSGet(&quot;/:id&quot;, func(ctx *context.Context) {
            ctx.Output.Body([]byte(&quot;crminfo&quot;))
        }),
    ),
)
</code></pre>

<p>更多详细信息请参考文档：<a href="http://beego.me/docs/mvc/controller/router.md#namespace">namespace</a></p>

<h2>注解路由</h2>

<pre><code>// CMS API
type CMSController struct {
    beego.Controller
}

func (c *CMSController) URLMapping() {
    c.Mapping(&quot;StaticBlock&quot;, c.StaticBlock)
    c.Mapping(&quot;AllBlock&quot;, c.AllBlock)
}

// @router /staticblock/:key [get]
func (this *CMSController) StaticBlock() {

}

// @router /all/:key [get]
func (this *CMSController) AllBlock() {
}
</code></pre>

<p>更多请参考文档：<a href="http://beego.me/docs/mvc/controller/router.md#%E6%B3%A8%E8%A7%A3%E8%B7%AF%E7%94%B1">注解路由</a></p>

<h2>自动化文档</h2>

<p>自动化文档一直是我梦想中的一个功能，这次借着公司的项目终于实现了出来，我说过 beego 不仅仅要让开发 API 快，而且让使用 API 的用户也能快速的使用我们开发的 API，这个就是我开发这个项目的初衷。</p>

<p>可以通过注释自动化的生成文档，并且在线测试，详细的请看下面的截图</p>

<p><img src="../images/docs.png" alt="" />
</p>

<p>而且可以通过文档进行 API 的测试：</p>

<p><img src="../images/doc_test.png" alt="" />
</p>

<p>更多请参考文档：<a href="http://beego.me/docs/advantage/docs.md">自动化文档</a></p>

<h2>config 支持不同模式的配置</h2>

<p>在配置文件里面支持 section，可以有不同的 Runmode 的配置，默认优先读取 runmode 下的配置信息，例如下面的配置文件：</p>

<pre><code>appname = beepkg
httpaddr = &quot;127.0.0.1&quot;
httpport = 9090
runmode =&quot;dev&quot;
autorender = false
autorecover = false
viewspath = &quot;myview&quot;

[dev]
httpport = 8080
[prod]
httpport = 8088
[test]
httpport = 8888
</code></pre>

<p>上面的配置文件就是在不同的 runmode 下解析不同的配置，例如在 dev 模式下，httpport 是 8080，在 prod 模式下是 8088，在 test 模式下是 8888。其他配置文件同理。解析的时候优先解析 runmode 模式的配置，然后解析默认的配置。</p>

<h2>支持双向的 SSL 认证</h2>

<pre><code>config := tls.Config{
    ClientAuth: tls.RequireAndVerifyClientCert,
    Certificates: []tls.Certificate{cert},
    ClientCAs: pool,
}
config.Rand = rand.Reader

beego.BeeApp.Server.TLSConfig = &amp;config
</code></pre>

<h2>beego.Run支持带参数</h2>

<p>beego.Run() 默认执行HttpPort</p>

<p>beego.Run(&rdquo;:8089&rdquo;)</p>

<p>beego.Run(&ldquo;127.0.0.1:8089&rdquo;)</p>

<h2>XSRFKEY 的 token 从 15 个字符增加到 32 个字符，增强安全性</h2>

<h2>删除热更新</h2>

<h2>模板函数增加 Config，可以方便的在模板中获取配置信息</h2>

<pre><code>{{config returnType key defaultValue}}

{{config &quot;int&quot; &quot;httpport&quot; 8080}}
</code></pre>

<h2>httplib 支持 cookiejar 功能，感谢 curvesft</h2>

<h2>orm 时间格式，如果为空就设置为 nil，感谢 JessonChan</h2>

<h2>config 模块支持 json 解析就一个 array 格式，感谢 chrisport</h2>

<h2>bug fix</h2>

<ul>
<li>静态文件目录循环跳转<br /></li>
<li>fix typo<br /></li>
</ul>

<h1>beego 1.2.0</h1>

<p>大家好,经过我们一个多月的努力,今天我们发布一个很帅的版本,之前性能测试框架出来 beego 已经跃居 Go 框架第一了,虽然这不是我们的目标,我们的目标是做最好用,最易用的框架. <a href="http://www.techempower.com/benchmarks/#section=data-r9&amp;hw=i7&amp;test=json">http://www.techempower.com/benchmarks/#section=data-r9&amp;hw=i7&amp;test=json</a> 但是这个版本我们还是在性能和易用性上面做了很多改进.应该说性能更加的接近 Go 原生应用.</p>

<h3>新特性:</h3>

<h4>1. namespace 支持</h4>

<pre><code>    beego.NewNamespace(&quot;/v1&quot;).
        Filter(&quot;before&quot;, auth).
        Get(&quot;/notallowed&quot;, func(ctx *context.Context) {
        ctx.Output.Body([]byte(&quot;notAllowed&quot;))
    }).
        Router(&quot;/version&quot;, &amp;AdminController{}, &quot;get:ShowAPIVersion&quot;).
        Router(&quot;/changepassword&quot;, &amp;UserController{}).
        Namespace(
        beego.NewNamespace(&quot;/shop&quot;).
            Filter(&quot;before&quot;, sentry).
            Get(&quot;/:id&quot;, func(ctx *context.Context) {
            ctx.Output.Body([]byte(&quot;notAllowed&quot;))
        }))
</code></pre>

<p>上面这个代码支持了如下这样的请求URL</p>

<ul>
<li>GET       /v1/notallowed<br /></li>
<li>GET       /v1/version<br /></li>
<li>GET       /v1/changepassword<br /></li>
<li>POST     /v1/changepassword<br /></li>
<li>GET       /v1/shop/123<br /></li>
</ul>

<p>而且还支持前置过滤,条件判断,无限嵌套 namespace</p>

<h4>2. beego 支持更加自由化的路由方式</h4>

<p>RESTful的自定义函数</p>

<ul>
<li>beego.Get(router, beego.FilterFunc)<br /></li>
<li>beego.Post(router, beego.FilterFunc)<br /></li>
<li>beego.Put(router, beego.FilterFunc)<br /></li>
<li>beego.Head(router, beego.FilterFunc)<br /></li>
<li>beego.Options(router, beego.FilterFunc)<br /></li>
<li>beego.Delete(router, beego.FilterFunc)<br /></li>
</ul>

<pre><code>beego.Get(&quot;/user&quot;, func(ctx *context.Context) {
    ctx.Output.Body([]byte(&quot;Get userlist&quot;))
})
</code></pre>

<p>更加自由度的 Handler</p>

<ul>
<li>beego.Handler(router, http.Handler)<br /></li>
</ul>

<p>可以很容易的集成其他服务</p>

<pre><code>import (
    &quot;http&quot;
    &quot;github.com/gorilla/rpc&quot;
    &quot;github.com/gorilla/rpc/json&quot;
)

func init() {
    s := rpc.NewServer()
    s.RegisterCodec(json.NewCodec(), &quot;application/json&quot;)
    s.RegisterService(new(HelloService), &quot;&quot;)
    beego.Handler(&quot;/rpc&quot;, s)
}
</code></pre>

<h4>3. 支持从用户请求中直接数据 bind 到指定的对象</h4>

<p>例如请求地址如下</p>

<pre><code>?id=123&amp;isok=true&amp;ft=1.2&amp;ol[0]=1&amp;ol[1]=2&amp;ul[]=str&amp;ul[]=array&amp;user.Name=astaxie
</code></pre>

<pre><code>var id int
ctx.Input.Bind(&amp;id, &quot;id&quot;)  //id ==123

var isok bool
ctx.Input.Bind(&amp;isok, &quot;isok&quot;)  //isok ==true

var ft float64
ctx.Input.Bind(&amp;ft, &quot;ft&quot;)  //ft ==1.2

ol := make([]int, 0, 2)
ctx.Input.Bind(&amp;ol, &quot;ol&quot;)  //ol ==[1 2]

ul := make([]string, 0, 2)
ctx.Input.Bind(&amp;ul, &quot;ul&quot;)  //ul ==[str array]

user struct{Name}
ctx.Input.Bind(&amp;user, &quot;user&quot;)  //user =={Name:&quot;astaxie&quot;}
</code></pre>

<h4>4. 优化解析 form 的流程,让性能更加提升</h4>

<h4>5. 增加更多地 testcase 进行自动化测试</h4>

<h4>6. admin 管理模块所有的增加可点击的链接,方便直接查询</h4>

<h4>7. session 的除了 memory 之外的引擎支持 struct 存储</h4>

<h4>8. httplib 支持文件直接上传接口</h4>

<pre><code>b:=httplib.Post(&quot;http://beego.me/&quot;)
b.Param(&quot;username&quot;,&quot;astaxie&quot;)
b.Param(&quot;password&quot;,&quot;123456&quot;)
b.PostFile(&quot;uploadfile1&quot;, &quot;httplib.pdf&quot;)
b.PostFile(&quot;uploadfile2&quot;, &quot;httplib.txt&quot;)
str, err := b.String()
if err != nil {
    t.Fatal(err)
}
</code></pre>

<p>httplib 支持自定义协议版本</p>

<h4>9. ORM 支持 struct 中有 unexport 的字段</h4>

<h4>10. XSRF 支持 controller 级别控制是否启用, 之前 XSRF 是全局设置只要开启了就会影响所有的 POST PUT DELET 请求,但是项目中可能 API 和页面共存的情况,页面可能不需要类似的 XSRF,因此支持在 Prepare 函数中设置值来控制 controller 是否启用 XSRF. 默认是 true,也就是根据全局的来执行.用户可以在 prepare 中设置是否关闭.</h4>

<pre><code>func (a *AdminController) Prepare(){
       a.EnableXSRF = false
}
</code></pre>

<h4>11. controller 支持 ServeFormatted 函数,支持根据请求 Accept 来判断是调用 ServeJson 还是 ServeXML</h4>

<h4>12. session 提供 memcache 引擎</h4>

<h4>13. Context 中的 Download 函数支持自定义文件名提供下载</h4>

<h2>bug 修复</h2>

<ol>
<li>session 的 Cookie 引擎修复无法设置过期的 bug<br /></li>
<li>修复 flash 数据的存储和解析问题<br /></li>
<li>修复所有 go vet 出现的问题<br /></li>
<li>修复 ParseFormOrMulitForm 问题<br /></li>
<li>修复只有 POST 才能解析 raw body,现在支持除了 GET 和 HEAD 之外的其他请求<br /></li>
<li>config 模块修复 xml 和 yaml 无法解析的问题<br /></li>
</ol>

<h1>beego 1.1.4</h1>

<p>发布一个紧急的版本, beego 存在一个严重的安全漏洞,请大家更新到最新版本. 顺便把最近做的一起发布了</p>

<ol>
<li><p>紧急修复一个安全漏洞,稍后会在 beego/SECURITY.md 公布详细的情况</p></li>

<li><p>静态文件处理独立到文件</p></li>

<li><p>第三方依赖库移除,目前如果你使用 session/cache/config,使用的是依赖第三方库的,那么现在都移到了子目录,如果你想使用这些就需要在使用的地方采用 mysql 类似的方式引入</p>

<pre><code>import (
     &quot;github.com/astaxie/beego&quot;
   _ &quot;github.com/astaxie/beego/session/mysql&quot;
)
</code></pre></li>

<li><p>修改部分导出的函数为 private,因为外部不需要调用</p></li>

<li><p>优化 formparse 的过程,根据不同的 content-type 进行解析</p></li>
</ol>

<p>发布时间: 2014-04-08</p>

<h1>beego 1.1.3</h1>

<p>这是一个 hotfix 的版本,主要是修复了以下 bug</p>

<ol>
<li><p>console 日志输出,如果不设置配置文件,不能正常输出</p></li>

<li><p>支持了 go run main.go,但是 main.go 没有遵循 beego 的目录结构,自定义了配置文件或者不存在配置文件,就会 panic 找不到 app.conf.</p></li>

<li><p>支持了在 go test 中解析配置,但是实际上调用 TestBeegoInit 无法解析配置文件</p></li>
</ol>

<p>发布时间: 2014-04-04</p>

<h1>beego 1.1.2</h1>

<p>beego 1.1.2 版本发布,这个版本主要是一些改进:</p>

<ol>
<li><p>增加 ExceptMethodAppend 函数,支持 autorouter 的时候过滤一些函数</p></li>

<li><p>支持自定义 FlashName,FlashSeperator</p></li>

<li><p>ORM 支持自定义的类型，例如 type MyInt int 这种</p></li>

<li><p>修复验证模块返回自定义验证信息</p></li>

<li><p>改进 logs 模块, 增加 Init 处理 error,设置一些不必要的 public 函数为 private</p></li>

<li><p>增加 PostgreSQL 的 session 引擎</p></li>

<li><p>logs 模块,支持输出调用的文件名和行号,增加设置函数 EnableFuncCallDepth,默认关闭</p></li>

<li><p>修改 session 模块中 Cookie 引擎的一个隐藏 bug</p></li>

<li><p>模板解析错误的时候,提示语进行了改进</p></li>

<li><p>允许用户通过 Filter 修改 Context,跳过 beego 的路由查找方法,直接使用自己的路由规则.增加参数 RunController 和 RunMethod</p></li>

<li><p>支持 go run main.go 执行 beego 的应用</p></li>

<li><p>支持 go test 执行测试用例,无法读取配置文件,模板的问题,增加 TestBeegoInit 函数调用.</p></li>
</ol>

<p>发布时间: 2014-04-03</p>

<h1>beego 1.1.1</h1>

<p>这个版本主要是一些 bug 的修复和增加新功能</p>

<ol>
<li><p>session 模块 file 引擎无法删除文件,不断刷新引起的文件读取失败问题</p></li>

<li><p>文件缓存无法读取 struct,改进 gob 自动化注册</p></li>

<li><p>session 模块增加新引擎 couchbase</p></li>

<li><p>httplib 支持设置 transport 和 proxy</p></li>

<li><p>改进 context 中 Cookie 函数,默认支持 httponly,以及其他一些默认参数行为</p></li>

<li><p>验证模块的改进,支持更多地手机号码</p></li>

<li><p>getstrings 函数行为也改成 getstring 一样,不需要自己 parseform</p></li>

<li><p>session 模块 redis 引擎,在连接失败的情况下返回错误</p></li>

<li><p>修复无法添加 GroupRouters 的 bug 问题</p></li>

<li><p>改进多个静态文件的一些潜在 bug,路径匹配问题,以及自动跳转静态目录显示.</p></li>

<li><p>ORM 增加 GetDB 获取已连接的 *sql.DB</p></li>

<li><p>ORM 增加 ResetModelCache 重置已注册缓存的模型 struct，方便写测试</p></li>

<li><p>ORM 支持 between</p></li>

<li><p>ORM 支持 sql.Null* 类型</p></li>

<li><p>修改 auto_now_add，用户有自定义值时跳过自动设置时间</p></li>
</ol>

<p>发布时间: 2014-03-12</p>

<h1>beego 1.1.0</h1>

<p>这个版本增加了一些新特性，修复了一些 bug</p>

<p>新特性</p>

<ol>
<li>支持 AddAPPStartHook 函数<br /></li>
<li>支持插件模式，支持 AddGroupRouter，用于插件路由设置<br /></li>
<li>response 支持 HiJacker接口<br /></li>
<li>AddFilter 支持批量匹配<br /></li>
<li>session 重构，支持 Cookie 引擎<br /></li>
<li>主流 ORM 性能测试<br /></li>
<li>config 增加 strings 接口，允许设置<br /></li>
<li>支持 controller 级别的模板渲染控制<br /></li>
<li>增加插件 basicauth，可以方便的使用该插件实现认证<br /></li>
<li>#436 一次插入多个对象<br /></li>
<li>#384 query map to struct<br /></li>
</ol>

<p>bugfix</p>

<ol>
<li>修复 FileCache的bug<br /></li>
<li>websocket 的例子修正引用库<br /></li>
<li>当发生程序内部错误时。http 的 status 默认修改为 500 而不是 200<br /></li>
<li>gmfim map in memzipfile.go file should use some synchronization mechanism (for example sync.RWMutex) otherwise it errors sometimes.<br /></li>
<li>#440 on_delete 不自动删除的问题<br /></li>
<li>#441 时区问题<br /></li>
</ol>

<p>发布时间: 2014-02-10</p>

<h1>beego 1.0.0</h1>

<p>经过了四个多月的重构开发，beego 终于发布了第一个正式稳定版本。这个版本我们进行了重构，同时针对很多细节进行了改进。下面列一些主要的改进功能：</p>

<ol>
<li><p>模块化的设计，现在基本上 beego 做成一个轻量的组装框架，重模块的设计，目前实现了cache、config、logs、sessions、httplibs、toolbox、orm、context 等八个模块，以后可能会更多。用户可以直接引用这些模块应用于自己的应用中，不仅仅局限于Web应用，beego 用户中有应用 logs、config、cache 这些模块到页游、手游中。</p></li>

<li><p>工程化的设计，部署项目之后，经常需要进行对线上程序进行各种信息的统计和分析，统计包括 QPS，分析包括 GC、内存使用量、CPU，如果出现问题的时候我们还希望通过 profile 来调试，那么 beego 都为你考虑到了这些，集成了监控模块，默认是关闭的，用户可以开启，并在另一个端口监听，通过 <a href="http://127.0.0.1:8088/">http://127.0.0.1:8088/</a> 访问。</p></li>

<li><p>详细的文档，这个版本的文档全部是新写的，在之前文档用户的各方面反馈之后，进行了很多细节上面的改进，目前文档中英文版本都已经完成，中英文文档的评论分离，针对不同的用户群交流。</p></li>

<li><p>丰富的示例，这一次更新我们开发组写了三个例子，聊天室、短域名、todo 任务三个比较有典型意义的例子。让用户在熟悉 beego 之前有一个更深入的了解。</p></li>

<li><p>全新设计的官方网站，这一次我们通过社区获得了很多人的帮助，logo 设计，网站 UI 的改进。</p></li>

<li><p>越来越多的用户，官方网站列举了一些典型的用户，都是一些比较大的公司，他们内部都在使用beego开发对外的 API 应用，说明 beego 是得到了线上项目验证的框架。</p></li>

<li><p>越来越活跃的社区，在 github 上面目前已经差不多有 390 个的 issue，贡献者超过 36 个，commit 超过了 700 个，Google groups 目前还在稳步发展中。</p></li>

<li><p>周边产品越来越多，基于beego的开源产品也越来越多，例如 cms 系统，<a href="https://github.com/insionng/toropress">https://github.com/insionng/toropress</a>  例如管理后台系统，<a href="https://github.com/beego/admin">https://github.com/beego/admin</a></p></li>

<li><p>beego 的辅助工具越来越强大，bee 工具是专门辅助用户开发 beego 应用的，可以快速的创建应用，动态编译，打包部署等</p></li>
</ol>

<p>发布时间: 2013-12-19</p>

</body>
</html>

                    </div>
                </div>
            </div>
            <script type="text/javascript">
                var disqus_url = 'http://beego.me/docs/' + 'intro\/releases.md?lang=zh-CN';
            </script>
            <div id="disqus_thread"></div>
<script type="text/javascript">
     
    var disqus_shortname = 'beego'; 

     
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>
        </div>
    </div>
</div>

		    </div>
		    <div class="wrapper-push"></div>
		</div>
		<footer id="footer">
    <div class="container">
        <div class="row footer-wrap">
            <div class="col-md-12 desc">
                <div class="pull-right">
                    <div class="btn-group dropup">
                        <button type="button" class="btn btn-default btn-md dropdown-toggle" data-toggle="dropdown">当前语言:简体中文 <i class="caret"></i></button>
                        <ul class="dropdown-menu">
                            
                                <li><a href="javascript::" data-lang="en-US" class="lang-changed">English</a></li>
                            
                                <li><a href="javascript::" data-lang="ru-RU" class="lang-changed">Russian</a></li>
                            
                        </ul>
                    </div>
                    
                        <a class="btn btn-success" href="/donate"><i class="icon-dollar"></i> 捐赠我们</a>
                    
                    
                </div>
                
                <p>
                    <a href="/about"><strong>关于</strong></a>
                    |
                    <a href="/team"><strong>团队</strong></a>
                    |
                    <a target="_blank" href="https://github.com/astaxie/beego" target="_blank"><strong><i class="icon-github-sign"></i> Github</strong></a>
                    - 44ms.
                </p>

                <p>
                    版权所有 © 2012-2014 Beego 授权许可遵循 <a href="http://www.apache.org/licenses/LICENSE-2.0.html">apache 2.0 licence</a> Logo由 <a target="_blank" href="http://mdong.org">Tengfei</a> 设计
                </p>

            </div>
        </div>
    </div>
</footer>

<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-39123845-1', 'beego.me');
  ga('send', 'pageview');

</script>

<script>/* Beego Compress group `lib` begin */</script>
	<script type="text/javascript" src="/static_source/js/jquery.min.js?ver=1409586500"></script>
	<script type="text/javascript" src="/static_source/js/jquery.extend.js?ver=1409586500"></script>
	<script type="text/javascript" src="/static_source/js/bootstrap.js?ver=1409586500"></script>
	<script type="text/javascript" src="/static_source/js/lib.min.js?ver=1409586500"></script>
	<script type="text/javascript" src="/static_source/js/prettify.js?ver=1409586500"></script>
	<script type="text/javascript" src="/static_source/js/jStorage.js?ver=1409586500"></script>
	<script type="text/javascript" src="/static_source/js/jquery.jpanelmenu.min.js?ver=1409586500"></script>
	<script type="text/javascript" src="/static_source/js/jRespond.min.js?ver=1409586500"></script>
	<script type="text/javascript" src="/static_source/js/jquery.clingify.min.js?ver=1409586500"></script>
	<script type="text/javascript" src="/static_source/js/imagesloaded.pkgd.min.js?ver=1409586500"></script>
	<script type="text/javascript" src="/static_source/js/masonry.pkgd.min.js?ver=1409586500"></script>
	<script>/* end */</script>
<script>/* Beego Compress group `app` begin */</script>
	<script type="text/javascript" src="/static_source/js/main.js?ver=1409586500"></script>
	<script>/* end */</script>
	</body>
</html>



