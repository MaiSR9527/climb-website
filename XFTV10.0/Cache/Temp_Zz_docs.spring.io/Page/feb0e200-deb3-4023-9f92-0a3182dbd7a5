<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">

<html lang="en">
<head>

<title>HttpSecurity (spring-security-docs-manual 5.3.4.RELEASE API)</title>
<link rel="stylesheet" type="text/css" href="../../../../../../../stylesheet.css" title="Style">
<script type="text/javascript" src="../../../../../../../script.js"></script>
</head>
<body>
<script type="text/javascript">try{if(location.href.indexOf('is-external=true')==-1){parent.document.title="HttpSecurity (spring-security-docs-manual 5.3.4.RELEASE API)";}}catch(err){}var methods={"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10,"i15":10,"i16":10,"i17":10,"i18":10,"i19":10,"i20":10,"i21":10,"i22":10,"i23":10,"i24":10,"i25":10,"i26":10,"i27":10,"i28":10,"i29":10,"i30":10,"i31":10,"i32":10,"i33":10,"i34":10,"i35":10,"i36":10,"i37":10,"i38":10,"i39":10,"i40":10,"i41":10,"i42":10,"i43":10,"i44":10,"i45":10,"i46":10,"i47":10,"i48":10,"i49":10,"i50":10,"i51":10,"i52":10,"i53":10,"i54":10,"i55":10,"i56":10,"i57":10,"i58":10,"i59":10,"i60":10};var tabs={65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};var altColor="altColor";var rowColor="rowColor";var tableTab="tableTab";var activeTableTab="activeTableTab";</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>

<div class="topNav"><a name="navbar.top">

</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">

</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../../../../index-all.html">Index</a></li>
<li><a href="../../../../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev&nbsp;Class</li>
<li><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.MvcMatchersRequestMatcherConfigurer.html" title="class in org.springframework.security.config.annotation.web.builders"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../../../../../index.html?org/springframework/security/config/annotation/web/builders/HttpSecurity.html" target="_top">Frames</a></li>
<li><a href="HttpSecurity.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript">allClassesLink=document.getElementById("allclasses_navbar_top");if(window==top){allClassesLink.style.display="block";}else{allClassesLink.style.display="none";}</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">

</a></div>


<div class="header">
<div class="subTitle">org.springframework.security.config.annotation.web.builders</div>
<h2 title="Class HttpSecurity" class="title">Class HttpSecurity</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li><a href="../../../../../../../org/springframework/security/config/annotation/AbstractSecurityBuilder.html" title="class in org.springframework.security.config.annotation">org.springframework.security.config.annotation.AbstractSecurityBuilder</a>&lt;O&gt;</li>
<li>
<ul class="inheritance">
<li><a href="../../../../../../../org/springframework/security/config/annotation/AbstractConfiguredSecurityBuilder.html" title="class in org.springframework.security.config.annotation">org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder</a>&lt;<a href="../../../../../../../org/springframework/security/web/DefaultSecurityFilterChain.html" title="class in org.springframework.security.web">DefaultSecurityFilterChain</a>,<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</li>
<li>
<ul class="inheritance">
<li>org.springframework.security.config.annotation.web.builders.HttpSecurity</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd><a href="../../../../../../../org/springframework/security/config/annotation/SecurityBuilder.html" title="interface in org.springframework.security.config.annotation">SecurityBuilder</a>&lt;<a href="../../../../../../../org/springframework/security/web/DefaultSecurityFilterChain.html" title="class in org.springframework.security.web">DefaultSecurityFilterChain</a>&gt;, <a href="../../../../../../../org/springframework/security/config/annotation/web/HttpSecurityBuilder.html" title="interface in org.springframework.security.config.annotation.web">HttpSecurityBuilder</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</dd>
</dl>
<hr>
<br>
<pre>public final class <span class="typeNameLabel">HttpSecurity</span>
extends <a href="../../../../../../../org/springframework/security/config/annotation/AbstractConfiguredSecurityBuilder.html" title="class in org.springframework.security.config.annotation">AbstractConfiguredSecurityBuilder</a>&lt;<a href="../../../../../../../org/springframework/security/web/DefaultSecurityFilterChain.html" title="class in org.springframework.security.web">DefaultSecurityFilterChain</a>,<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;
implements <a href="../../../../../../../org/springframework/security/config/annotation/SecurityBuilder.html" title="interface in org.springframework.security.config.annotation">SecurityBuilder</a>&lt;<a href="../../../../../../../org/springframework/security/web/DefaultSecurityFilterChain.html" title="class in org.springframework.security.web">DefaultSecurityFilterChain</a>&gt;, <a href="../../../../../../../org/springframework/security/config/annotation/web/HttpSecurityBuilder.html" title="interface in org.springframework.security.config.annotation.web">HttpSecurityBuilder</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</pre>
<div class="block">A <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> is similar to Spring Security's XML &lt;http&gt; element in the
namespace configuration. It allows configuring web based security for specific http
requests. By default it will be applied to all requests, but can be restricted using
<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestMatcher-org.springframework.security.web.util.matcher.RequestMatcher-"><code>requestMatcher(RequestMatcher)</code></a> or other similar methods.
<h2>Example Usage</h2>
The most basic form based configuration can be seen below. The configuration will
require that any URL that is requested will require a User with the role "ROLE_USER".
It also defines an in memory authentication scheme with a user that has the username
"user", the password "password", and the role "ROLE_USER". For additional examples,
refer to the Java Doc of individual methods on <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a>.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class FormLoginSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http.authorizeRequests().antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;).and().formLogin();
        }

        &#064;Override
        protected void configure(AuthenticationManagerBuilder auth) throws Exception {
                auth.inMemoryAuthentication().withUser(&quot;user&quot;).password(&quot;password&quot;).roles(&quot;USER&quot;);
        }
 }
 </pre></div>
<dl>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>3.2</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../../../../org/springframework/security/config/annotation/web/configuration/EnableWebSecurity.html" title="annotation in org.springframework.security.config.annotation.web.configuration"><code>EnableWebSecurity</code></a></dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">

<ul class="blockList">
<li class="blockList"><a name="nested.class.summary">

</a>
<h3>Nested Class Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Nested Class Summary table, listing nested classes, and an explanation">
<caption><span>Nested Classes</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Class and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>class&nbsp;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.MvcMatchersRequestMatcherConfigurer.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity.MvcMatchersRequestMatcherConfigurer</a></span></code>
<div class="block">An extension to <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.RequestMatcherConfigurer.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity.RequestMatcherConfigurer</code></a> that allows optionally configuring
the servlet path.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>class&nbsp;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.RequestMatcherConfigurer.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity.RequestMatcherConfigurer</a></span></code>
<div class="block">Allows mapping HTTP requests that this <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> will be used for</div>
</td>
</tr>
</table>
</li>
</ul>

<ul class="blockList">
<li class="blockList"><a name="constructor.summary">

</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#HttpSecurity-org.springframework.security.config.annotation.ObjectPostProcessor-org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder-java.util.Map-">HttpSecurity</a></span>(<a href="../../../../../../../org/springframework/security/config/annotation/ObjectPostProcessor.html" title="interface in org.springframework.security.config.annotation">ObjectPostProcessor</a>&lt;java.lang.Object&gt;&nbsp;objectPostProcessor,
<a href="../../../../../../../org/springframework/security/config/annotation/authentication/builders/AuthenticationManagerBuilder.html" title="class in org.springframework.security.config.annotation.authentication.builders">AuthenticationManagerBuilder</a>&nbsp;authenticationBuilder,
java.util.Map&lt;java.lang.Class&lt;?&gt;,java.lang.Object&gt;&nbsp;sharedObjects)</code>
<div class="block">Creates a new instance</div>
</td>
</tr>
</table>
</li>
</ul>

<ul class="blockList">
<li class="blockList"><a name="method.summary">

</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#addFilter-javax.servlet.Filter-">addFilter</a></span>(javax.servlet.Filter&nbsp;filter)</code>
<div class="block">Adds a <code>Filter</code> that must be an instance of or extend one of the Filters
provided within the Security framework.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#addFilterAfter-javax.servlet.Filter-java.lang.Class-">addFilterAfter</a></span>(javax.servlet.Filter&nbsp;filter,
java.lang.Class&lt;? extends javax.servlet.Filter&gt;&nbsp;afterFilter)</code>
<div class="block">Allows adding a <code>Filter</code> after one of the known <code>Filter</code> classes.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#addFilterAt-javax.servlet.Filter-java.lang.Class-">addFilterAt</a></span>(javax.servlet.Filter&nbsp;filter,
java.lang.Class&lt;? extends javax.servlet.Filter&gt;&nbsp;atFilter)</code>
<div class="block">Adds the Filter at the location of the specified Filter class.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#addFilterBefore-javax.servlet.Filter-java.lang.Class-">addFilterBefore</a></span>(javax.servlet.Filter&nbsp;filter,
java.lang.Class&lt;? extends javax.servlet.Filter&gt;&nbsp;beforeFilter)</code>
<div class="block">Allows adding a <code>Filter</code> before one of the known <code>Filter</code> classes.</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/AnonymousConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">AnonymousConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#anonymous--">anonymous</a></span>()</code>
<div class="block">Allows configuring how an anonymous user is represented.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#anonymous-org.springframework.security.config.Customizer-">anonymous</a></span>(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/AnonymousConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">AnonymousConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;anonymousCustomizer)</code>
<div class="block">Allows configuring how an anonymous user is represented.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#antMatcher-java.lang.String-">antMatcher</a></span>(java.lang.String&nbsp;antPattern)</code>
<div class="block">Allows configuring the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> to only be invoked when matching the
provided ant pattern.</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#authenticationProvider-org.springframework.security.authentication.AuthenticationProvider-">authenticationProvider</a></span>(<a href="../../../../../../../org/springframework/security/authentication/AuthenticationProvider.html" title="interface in org.springframework.security.authentication">AuthenticationProvider</a>&nbsp;authenticationProvider)</code>
<div class="block">Allows adding an additional <a href="../../../../../../../org/springframework/security/authentication/AuthenticationProvider.html" title="interface in org.springframework.security.authentication"><code>AuthenticationProvider</code></a> to be used</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer.ExpressionInterceptUrlRegistry.html" title="class in org.springframework.security.config.annotation.web.configurers">ExpressionUrlAuthorizationConfigurer.ExpressionInterceptUrlRegistry</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#authorizeRequests--">authorizeRequests</a></span>()</code>
<div class="block">Allows restricting access based upon the <code>HttpServletRequest</code> using
<a href="../../../../../../../org/springframework/security/web/util/matcher/RequestMatcher.html" title="interface in org.springframework.security.web.util.matcher"><code>RequestMatcher</code></a> implementations (i.e.</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#authorizeRequests-org.springframework.security.config.Customizer-">authorizeRequests</a></span>(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer.ExpressionInterceptUrlRegistry.html" title="class in org.springframework.security.config.annotation.web.configurers">ExpressionUrlAuthorizationConfigurer.ExpressionInterceptUrlRegistry</a>&gt;&nbsp;authorizeRequestsCustomizer)</code>
<div class="block">Allows restricting access based upon the <code>HttpServletRequest</code> using
<a href="../../../../../../../org/springframework/security/web/util/matcher/RequestMatcher.html" title="interface in org.springframework.security.web.util.matcher"><code>RequestMatcher</code></a> implementations (i.e.</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>protected void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#beforeConfigure--">beforeConfigure</a></span>()</code>
<div class="block">Invoked prior to invoking each
<a href="../../../../../../../org/springframework/security/config/annotation/SecurityConfigurer.html#configure-B-"><code>SecurityConfigurer.configure(SecurityBuilder)</code></a> method.</div>
</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/CorsConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">CorsConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#cors--">cors</a></span>()</code>
<div class="block">Adds a <code>CorsFilter</code> to be used.</div>
</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#cors-org.springframework.security.config.Customizer-">cors</a></span>(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/CorsConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">CorsConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;corsCustomizer)</code>
<div class="block">Adds a <code>CorsFilter</code> to be used.</div>
</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/CsrfConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">CsrfConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#csrf--">csrf</a></span>()</code>
<div class="block">Adds CSRF support.</div>
</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#csrf-org.springframework.security.config.Customizer-">csrf</a></span>(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/CsrfConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">CsrfConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;csrfCustomizer)</code>
<div class="block">Adds CSRF support.</div>
</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/ExceptionHandlingConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">ExceptionHandlingConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#exceptionHandling--">exceptionHandling</a></span>()</code>
<div class="block">Allows configuring exception handling.</div>
</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#exceptionHandling-org.springframework.security.config.Customizer-">exceptionHandling</a></span>(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/ExceptionHandlingConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">ExceptionHandlingConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;exceptionHandlingCustomizer)</code>
<div class="block">Allows configuring exception handling.</div>
</td>
</tr>
<tr id="i17" class="rowColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/FormLoginConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">FormLoginConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#formLogin--">formLogin</a></span>()</code>
<div class="block">Specifies to support form based authentication.</div>
</td>
</tr>
<tr id="i18" class="altColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#formLogin-org.springframework.security.config.Customizer-">formLogin</a></span>(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/FormLoginConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">FormLoginConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;formLoginCustomizer)</code>
<div class="block">Specifies to support form based authentication.</div>
</td>
</tr>
<tr id="i19" class="rowColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/HeadersConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">HeadersConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#headers--">headers</a></span>()</code>
<div class="block">Adds the Security headers to the response.</div>
</td>
</tr>
<tr id="i20" class="altColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#headers-org.springframework.security.config.Customizer-">headers</a></span>(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/HeadersConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">HeadersConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;headersCustomizer)</code>
<div class="block">Adds the Security headers to the response.</div>
</td>
</tr>
<tr id="i21" class="rowColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/HttpBasicConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">HttpBasicConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#httpBasic--">httpBasic</a></span>()</code>
<div class="block">Configures HTTP Basic authentication.</div>
</td>
</tr>
<tr id="i22" class="altColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#httpBasic-org.springframework.security.config.Customizer-">httpBasic</a></span>(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/HttpBasicConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">HttpBasicConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;httpBasicCustomizer)</code>
<div class="block">Configures HTTP Basic authentication.</div>
</td>
</tr>
<tr id="i23" class="rowColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/JeeConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">JeeConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#jee--">jee</a></span>()</code>
<div class="block">Configures container based pre authentication.</div>
</td>
</tr>
<tr id="i24" class="altColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#jee-org.springframework.security.config.Customizer-">jee</a></span>(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/JeeConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">JeeConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;jeeCustomizer)</code>
<div class="block">Configures container based pre authentication.</div>
</td>
</tr>
<tr id="i25" class="rowColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/LogoutConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">LogoutConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#logout--">logout</a></span>()</code>
<div class="block">Provides logout support.</div>
</td>
</tr>
<tr id="i26" class="altColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#logout-org.springframework.security.config.Customizer-">logout</a></span>(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/LogoutConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">LogoutConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;logoutCustomizer)</code>
<div class="block">Provides logout support.</div>
</td>
</tr>
<tr id="i27" class="rowColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#mvcMatcher-java.lang.String-">mvcMatcher</a></span>(java.lang.String&nbsp;mvcPattern)</code>
<div class="block">Allows configuring the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> to only be invoked when matching the
provided Spring MVC pattern.</div>
</td>
</tr>
<tr id="i28" class="altColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2ClientConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.oauth2.client">OAuth2ClientConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#oauth2Client--">oauth2Client</a></span>()</code>
<div class="block">Configures OAuth 2.0 Client support.</div>
</td>
</tr>
<tr id="i29" class="rowColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#oauth2Client-org.springframework.security.config.Customizer-">oauth2Client</a></span>(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2ClientConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.oauth2.client">OAuth2ClientConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;oauth2ClientCustomizer)</code>
<div class="block">Configures OAuth 2.0 Client support.</div>
</td>
</tr>
<tr id="i30" class="altColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.oauth2.client">OAuth2LoginConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#oauth2Login--">oauth2Login</a></span>()</code>
<div class="block">Configures authentication support using an OAuth 2.0 and/or OpenID Connect 1.0 Provider.</div>
</td>
</tr>
<tr id="i31" class="rowColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#oauth2Login-org.springframework.security.config.Customizer-">oauth2Login</a></span>(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.oauth2.client">OAuth2LoginConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;oauth2LoginCustomizer)</code>
<div class="block">Configures authentication support using an OAuth 2.0 and/or OpenID Connect 1.0 Provider.</div>
</td>
</tr>
<tr id="i32" class="altColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.oauth2.server.resource">OAuth2ResourceServerConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#oauth2ResourceServer--">oauth2ResourceServer</a></span>()</code>
<div class="block">Configures OAuth 2.0 Resource Server support.</div>
</td>
</tr>
<tr id="i33" class="rowColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#oauth2ResourceServer-org.springframework.security.config.Customizer-">oauth2ResourceServer</a></span>(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.oauth2.server.resource">OAuth2ResourceServerConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;oauth2ResourceServerCustomizer)</code>
<div class="block">Configures OAuth 2.0 Resource Server support.</div>
</td>
</tr>
<tr id="i34" class="altColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.openid">OpenIDLoginConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#openidLogin--">openidLogin</a></span>()</code>
<div class="block">Allows configuring OpenID based authentication.</div>
</td>
</tr>
<tr id="i35" class="rowColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#openidLogin-org.springframework.security.config.Customizer-">openidLogin</a></span>(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.openid">OpenIDLoginConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;openidLoginCustomizer)</code>
<div class="block">Allows configuring OpenID based authentication.</div>
</td>
</tr>
<tr id="i36" class="altColor">
<td class="colFirst"><code>protected <a href="../../../../../../../org/springframework/security/web/DefaultSecurityFilterChain.html" title="class in org.springframework.security.web">DefaultSecurityFilterChain</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#performBuild--">performBuild</a></span>()</code>
<div class="block">Subclasses must implement this method to build the object that is being returned.</div>
</td>
</tr>
<tr id="i37" class="rowColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/PortMapperConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">PortMapperConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#portMapper--">portMapper</a></span>()</code>
<div class="block">Allows configuring a <a href="../../../../../../../org/springframework/security/web/PortMapper.html" title="interface in org.springframework.security.web"><code>PortMapper</code></a> that is available from
<a href="../../../../../../../org/springframework/security/config/annotation/AbstractConfiguredSecurityBuilder.html#getSharedObject-java.lang.Class-"><code>AbstractConfiguredSecurityBuilder.getSharedObject(Class)</code></a>.</div>
</td>
</tr>
<tr id="i38" class="altColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#portMapper-org.springframework.security.config.Customizer-">portMapper</a></span>(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/PortMapperConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">PortMapperConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;portMapperCustomizer)</code>
<div class="block">Allows configuring a <a href="../../../../../../../org/springframework/security/web/PortMapper.html" title="interface in org.springframework.security.web"><code>PortMapper</code></a> that is available from
<a href="../../../../../../../org/springframework/security/config/annotation/AbstractConfiguredSecurityBuilder.html#getSharedObject-java.lang.Class-"><code>AbstractConfiguredSecurityBuilder.getSharedObject(Class)</code></a>.</div>
</td>
</tr>
<tr id="i39" class="rowColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#regexMatcher-java.lang.String-">regexMatcher</a></span>(java.lang.String&nbsp;pattern)</code>
<div class="block">Allows configuring the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> to only be invoked when matching the
provided regex pattern.</div>
</td>
</tr>
<tr id="i40" class="altColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/RememberMeConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">RememberMeConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#rememberMe--">rememberMe</a></span>()</code>
<div class="block">Allows configuring of Remember Me authentication.</div>
</td>
</tr>
<tr id="i41" class="rowColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#rememberMe-org.springframework.security.config.Customizer-">rememberMe</a></span>(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/RememberMeConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">RememberMeConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;rememberMeCustomizer)</code>
<div class="block">Allows configuring of Remember Me authentication.</div>
</td>
</tr>
<tr id="i42" class="altColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/RequestCacheConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">RequestCacheConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestCache--">requestCache</a></span>()</code>
<div class="block">Allows configuring the Request Cache.</div>
</td>
</tr>
<tr id="i43" class="rowColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestCache-org.springframework.security.config.Customizer-">requestCache</a></span>(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/RequestCacheConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">RequestCacheConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;requestCacheCustomizer)</code>
<div class="block">Allows configuring the Request Cache.</div>
</td>
</tr>
<tr id="i44" class="altColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestMatcher-org.springframework.security.web.util.matcher.RequestMatcher-">requestMatcher</a></span>(<a href="../../../../../../../org/springframework/security/web/util/matcher/RequestMatcher.html" title="interface in org.springframework.security.web.util.matcher">RequestMatcher</a>&nbsp;requestMatcher)</code>
<div class="block">Allows configuring the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> to only be invoked when matching the
provided <a href="../../../../../../../org/springframework/security/web/util/matcher/RequestMatcher.html" title="interface in org.springframework.security.web.util.matcher"><code>RequestMatcher</code></a>.</div>
</td>
</tr>
<tr id="i45" class="rowColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.RequestMatcherConfigurer.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity.RequestMatcherConfigurer</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestMatchers--">requestMatchers</a></span>()</code>
<div class="block">Allows specifying which <code>HttpServletRequest</code> instances this
<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> will be invoked on.</div>
</td>
</tr>
<tr id="i46" class="altColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestMatchers-org.springframework.security.config.Customizer-">requestMatchers</a></span>(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.RequestMatcherConfigurer.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity.RequestMatcherConfigurer</a>&gt;&nbsp;requestMatcherCustomizer)</code>
<div class="block">Allows specifying which <code>HttpServletRequest</code> instances this
<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> will be invoked on.</div>
</td>
</tr>
<tr id="i47" class="rowColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer.ChannelRequestMatcherRegistry.html" title="class in org.springframework.security.config.annotation.web.configurers">ChannelSecurityConfigurer.ChannelRequestMatcherRegistry</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requiresChannel--">requiresChannel</a></span>()</code>
<div class="block">Configures channel security.</div>
</td>
</tr>
<tr id="i48" class="altColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requiresChannel-org.springframework.security.config.Customizer-">requiresChannel</a></span>(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer.ChannelRequestMatcherRegistry.html" title="class in org.springframework.security.config.annotation.web.configurers">ChannelSecurityConfigurer.ChannelRequestMatcherRegistry</a>&gt;&nbsp;requiresChannelCustomizer)</code>
<div class="block">Configures channel security.</div>
</td>
</tr>
<tr id="i49" class="rowColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/saml2/Saml2LoginConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.saml2">Saml2LoginConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#saml2Login--">saml2Login</a></span>()</code>
<div class="block">Configures authentication support using an SAML 2.0 Service Provider.</div>
</td>
</tr>
<tr id="i50" class="altColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#saml2Login-org.springframework.security.config.Customizer-">saml2Login</a></span>(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/saml2/Saml2LoginConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.saml2">Saml2LoginConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;saml2LoginCustomizer)</code>
<div class="block">Configures authentication support using an SAML 2.0 Service Provider.</div>
</td>
</tr>
<tr id="i51" class="rowColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/SecurityContextConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">SecurityContextConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#securityContext--">securityContext</a></span>()</code>
<div class="block">Sets up management of the <a href="../../../../../../../org/springframework/security/core/context/SecurityContext.html" title="interface in org.springframework.security.core.context"><code>SecurityContext</code></a> on the
<a href="../../../../../../../org/springframework/security/core/context/SecurityContextHolder.html" title="class in org.springframework.security.core.context"><code>SecurityContextHolder</code></a> between <code>HttpServletRequest</code>'s.</div>
</td>
</tr>
<tr id="i52" class="altColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#securityContext-org.springframework.security.config.Customizer-">securityContext</a></span>(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/SecurityContextConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">SecurityContextConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;securityContextCustomizer)</code>
<div class="block">Sets up management of the <a href="../../../../../../../org/springframework/security/core/context/SecurityContext.html" title="interface in org.springframework.security.core.context"><code>SecurityContext</code></a> on the
<a href="../../../../../../../org/springframework/security/core/context/SecurityContextHolder.html" title="class in org.springframework.security.core.context"><code>SecurityContextHolder</code></a> between <code>HttpServletRequest</code>'s.</div>
</td>
</tr>
<tr id="i53" class="rowColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/ServletApiConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">ServletApiConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#servletApi--">servletApi</a></span>()</code>
<div class="block">Integrates the <code>HttpServletRequest</code> methods with the values found on the
<a href="../../../../../../../org/springframework/security/core/context/SecurityContext.html" title="interface in org.springframework.security.core.context"><code>SecurityContext</code></a>.</div>
</td>
</tr>
<tr id="i54" class="altColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#servletApi-org.springframework.security.config.Customizer-">servletApi</a></span>(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/ServletApiConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">ServletApiConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;servletApiCustomizer)</code>
<div class="block">Integrates the <code>HttpServletRequest</code> methods with the values found on the
<a href="../../../../../../../org/springframework/security/core/context/SecurityContext.html" title="interface in org.springframework.security.core.context"><code>SecurityContext</code></a>.</div>
</td>
</tr>
<tr id="i55" class="rowColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">SessionManagementConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#sessionManagement--">sessionManagement</a></span>()</code>
<div class="block">Allows configuring of Session Management.</div>
</td>
</tr>
<tr id="i56" class="altColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#sessionManagement-org.springframework.security.config.Customizer-">sessionManagement</a></span>(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">SessionManagementConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;sessionManagementCustomizer)</code>
<div class="block">Allows configuring of Session Management.</div>
</td>
</tr>
<tr id="i57" class="rowColor">
<td class="colFirst"><code>&lt;C&gt;&nbsp;void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#setSharedObject-java.lang.Class-C-">setSharedObject</a></span>(java.lang.Class&lt;C&gt;&nbsp;sharedType,
C&nbsp;object)</code>
<div class="block">Sets an object that is shared by multiple <a href="../../../../../../../org/springframework/security/config/annotation/SecurityConfigurer.html" title="interface in org.springframework.security.config.annotation"><code>SecurityConfigurer</code></a>.</div>
</td>
</tr>
<tr id="i58" class="altColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#userDetailsService-org.springframework.security.core.userdetails.UserDetailsService-">userDetailsService</a></span>(<a href="../../../../../../../org/springframework/security/core/userdetails/UserDetailsService.html" title="interface in org.springframework.security.core.userdetails">UserDetailsService</a>&nbsp;userDetailsService)</code>
<div class="block">Allows adding an additional <a href="../../../../../../../org/springframework/security/core/userdetails/UserDetailsService.html" title="interface in org.springframework.security.core.userdetails"><code>UserDetailsService</code></a> to be used</div>
</td>
</tr>
<tr id="i59" class="rowColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/X509Configurer.html" title="class in org.springframework.security.config.annotation.web.configurers">X509Configurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#x509--">x509</a></span>()</code>
<div class="block">Configures X509 based pre authentication.</div>
</td>
</tr>
<tr id="i60" class="altColor">
<td class="colFirst"><code><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#x509-org.springframework.security.config.Customizer-">x509</a></span>(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/X509Configurer.html" title="class in org.springframework.security.config.annotation.web.configurers">X509Configurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;x509Customizer)</code>
<div class="block">Configures X509 based pre authentication.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder">

</a>
<h3>Methods inherited from class&nbsp;org.springframework.security.config.annotation.<a href="../../../../../../../org/springframework/security/config/annotation/AbstractConfiguredSecurityBuilder.html" title="class in org.springframework.security.config.annotation">AbstractConfiguredSecurityBuilder</a></h3>
<code><a href="../../../../../../../org/springframework/security/config/annotation/AbstractConfiguredSecurityBuilder.html#apply-C-">apply</a>, <a href="../../../../../../../org/springframework/security/config/annotation/AbstractConfiguredSecurityBuilder.html#apply-C-">apply</a>, <a href="../../../../../../../org/springframework/security/config/annotation/AbstractConfiguredSecurityBuilder.html#beforeInit--">beforeInit</a>, <a href="../../../../../../../org/springframework/security/config/annotation/AbstractConfiguredSecurityBuilder.html#doBuild--">doBuild</a>, <a href="../../../../../../../org/springframework/security/config/annotation/AbstractConfiguredSecurityBuilder.html#getConfigurer-java.lang.Class-">getConfigurer</a>, <a href="../../../../../../../org/springframework/security/config/annotation/AbstractConfiguredSecurityBuilder.html#getConfigurers-java.lang.Class-">getConfigurers</a>, <a href="../../../../../../../org/springframework/security/config/annotation/AbstractConfiguredSecurityBuilder.html#getOrBuild--">getOrBuild</a>, <a href="../../../../../../../org/springframework/security/config/annotation/AbstractConfiguredSecurityBuilder.html#getSharedObject-java.lang.Class-">getSharedObject</a>, <a href="../../../../../../../org/springframework/security/config/annotation/AbstractConfiguredSecurityBuilder.html#getSharedObjects--">getSharedObjects</a>, <a href="../../../../../../../org/springframework/security/config/annotation/AbstractConfiguredSecurityBuilder.html#objectPostProcessor-org.springframework.security.config.annotation.ObjectPostProcessor-">objectPostProcessor</a>, <a href="../../../../../../../org/springframework/security/config/annotation/AbstractConfiguredSecurityBuilder.html#postProcess-P-">postProcess</a>, <a href="../../../../../../../org/springframework/security/config/annotation/AbstractConfiguredSecurityBuilder.html#removeConfigurer-java.lang.Class-">removeConfigurer</a>, <a href="../../../../../../../org/springframework/security/config/annotation/AbstractConfiguredSecurityBuilder.html#removeConfigurers-java.lang.Class-">removeConfigurers</a></code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.org.springframework.security.config.annotation.AbstractSecurityBuilder">

</a>
<h3>Methods inherited from class&nbsp;org.springframework.security.config.annotation.<a href="../../../../../../../org/springframework/security/config/annotation/AbstractSecurityBuilder.html" title="class in org.springframework.security.config.annotation">AbstractSecurityBuilder</a></h3>
<code><a href="../../../../../../../org/springframework/security/config/annotation/AbstractSecurityBuilder.html#build--">build</a>, <a href="../../../../../../../org/springframework/security/config/annotation/AbstractSecurityBuilder.html#getObject--">getObject</a></code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">

</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.org.springframework.security.config.annotation.web.HttpSecurityBuilder">

</a>
<h3>Methods inherited from interface&nbsp;org.springframework.security.config.annotation.web.<a href="../../../../../../../org/springframework/security/config/annotation/web/HttpSecurityBuilder.html" title="interface in org.springframework.security.config.annotation.web">HttpSecurityBuilder</a></h3>
<code><a href="../../../../../../../org/springframework/security/config/annotation/web/HttpSecurityBuilder.html#getConfigurer-java.lang.Class-">getConfigurer</a>, <a href="../../../../../../../org/springframework/security/config/annotation/web/HttpSecurityBuilder.html#getSharedObject-java.lang.Class-">getSharedObject</a>, <a href="../../../../../../../org/springframework/security/config/annotation/web/HttpSecurityBuilder.html#removeConfigurer-java.lang.Class-">removeConfigurer</a></code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.org.springframework.security.config.annotation.SecurityBuilder">

</a>
<h3>Methods inherited from interface&nbsp;org.springframework.security.config.annotation.<a href="../../../../../../../org/springframework/security/config/annotation/SecurityBuilder.html" title="interface in org.springframework.security.config.annotation">SecurityBuilder</a></h3>
<code><a href="../../../../../../../org/springframework/security/config/annotation/SecurityBuilder.html#build--">build</a></code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">

<ul class="blockList">
<li class="blockList"><a name="constructor.detail">

</a>
<h3>Constructor Detail</h3>
<a name="HttpSecurity-org.springframework.security.config.annotation.ObjectPostProcessor-org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder-java.util.Map-">

</a>
<ul class="blockListLast">
<li class="blockList">
<h4>HttpSecurity</h4>
<pre>public&nbsp;HttpSecurity(<a href="../../../../../../../org/springframework/security/config/annotation/ObjectPostProcessor.html" title="interface in org.springframework.security.config.annotation">ObjectPostProcessor</a>&lt;java.lang.Object&gt;&nbsp;objectPostProcessor,
                    <a href="../../../../../../../org/springframework/security/config/annotation/authentication/builders/AuthenticationManagerBuilder.html" title="class in org.springframework.security.config.annotation.authentication.builders">AuthenticationManagerBuilder</a>&nbsp;authenticationBuilder,
                    java.util.Map&lt;java.lang.Class&lt;?&gt;,java.lang.Object&gt;&nbsp;sharedObjects)</pre>
<div class="block">Creates a new instance</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>objectPostProcessor</code> - the <a href="../../../../../../../org/springframework/security/config/annotation/ObjectPostProcessor.html" title="interface in org.springframework.security.config.annotation"><code>ObjectPostProcessor</code></a> that should be used</dd>
<dd><code>authenticationBuilder</code> - the <a href="../../../../../../../org/springframework/security/config/annotation/authentication/builders/AuthenticationManagerBuilder.html" title="class in org.springframework.security.config.annotation.authentication.builders"><code>AuthenticationManagerBuilder</code></a> to use for
additional updates</dd>
<dd><code>sharedObjects</code> - the shared Objects to initialize the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> with</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../../../../org/springframework/security/config/annotation/web/configuration/WebSecurityConfiguration.html" title="class in org.springframework.security.config.annotation.web.configuration"><code>WebSecurityConfiguration</code></a></dd>
</dl>
</li>
</ul>
</li>
</ul>

<ul class="blockList">
<li class="blockList"><a name="method.detail">

</a>
<h3>Method Detail</h3>
<a name="openidLogin--">

</a>
<ul class="blockList">
<li class="blockList">
<h4>openidLogin</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.openid">OpenIDLoginConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&nbsp;openidLogin()
                                                throws java.lang.Exception</pre>
<div class="block">Allows configuring OpenID based authentication.
<h2>Example Configurations</h2>
A basic example accepting the defaults and not using attribute exchange:
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class OpenIDLoginConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) {
                http.authorizeRequests().antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;).and().openidLogin()
                                .permitAll();
        }

        &#064;Override
        protected void configure(AuthenticationManagerBuilder auth) throws Exception {
                auth.inMemoryAuthentication()
                                // the username must match the OpenID of the user you are
                                // logging in with
                                .withUser(
                                                &quot;https://www.google.com/accounts/o8/id?id=lmkCn9xzPdsxVwG7pjYMuDgNNdASFmobNkcRPaWU&quot;)
                                .password(&quot;password&quot;).roles(&quot;USER&quot;);
        }
 }
 </pre>
A more advanced example demonstrating using attribute exchange and providing a
custom AuthenticationUserDetailsService that will make any user that authenticates
a valid user.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class OpenIDLoginConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) {
                http.authorizeRequests()
                                .antMatchers(&quot;/**&quot;)
                                .hasRole(&quot;USER&quot;)
                                .and()
                                .openidLogin()
                                .loginPage(&quot;/login&quot;)
                                .permitAll()
                                .authenticationUserDetailsService(
                                                new AutoProvisioningUserDetailsService())
                                .attributeExchange(&quot;https://www.google.com/.*&quot;).attribute(&quot;email&quot;)
                                .type(&quot;https://axschema.org/contact/email&quot;).required(true).and()
                                .attribute(&quot;firstname&quot;).type(&quot;https://axschema.org/namePerson/first&quot;)
                                .required(true).and().attribute(&quot;lastname&quot;)
                                .type(&quot;https://axschema.org/namePerson/last&quot;).required(true).and().and()
                                .attributeExchange(&quot;.*yahoo.com.*&quot;).attribute(&quot;email&quot;)
                                .type(&quot;https://schema.openid.net/contact/email&quot;).required(true).and()
                                .attribute(&quot;fullname&quot;).type(&quot;https://axschema.org/namePerson&quot;)
                                .required(true).and().and().attributeExchange(&quot;.*myopenid.com.*&quot;)
                                .attribute(&quot;email&quot;).type(&quot;https://schema.openid.net/contact/email&quot;)
                                .required(true).and().attribute(&quot;fullname&quot;)
                                .type(&quot;https://schema.openid.net/namePerson&quot;).required(true);
        }
 }

 public class AutoProvisioningUserDetailsService implements
                AuthenticationUserDetailsService&lt;OpenIDAuthenticationToken&gt; {
        public UserDetails loadUserDetails(OpenIDAuthenticationToken token)
                        throws UsernameNotFoundException {
                return new User(token.getName(), &quot;NOTUSED&quot;,
                                AuthorityUtils.createAuthorityList(&quot;ROLE_USER&quot;));
        }
 }
 </pre></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.openid"><code>OpenIDLoginConfigurer</code></a> for further customizations.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.openid"><code>OpenIDLoginConfigurer</code></a></dd>
</dl>
</li>
</ul>
<a name="openidLogin-org.springframework.security.config.Customizer-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>openidLogin</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;openidLogin(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.openid">OpenIDLoginConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;openidLoginCustomizer)
                         throws java.lang.Exception</pre>
<div class="block">Allows configuring OpenID based authentication.
<h2>Example Configurations</h2>
A basic example accepting the defaults and not using attribute exchange:
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class OpenIDLoginConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) {
                http
                        .authorizeRequests(authorizeRequests ->
                                authorizeRequests
                                        .antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;)
                        )
                        .openidLogin(openidLogin ->
                                openidLogin
                                        .permitAll()
                        );
        }

        &#064;Override
        protected void configure(AuthenticationManagerBuilder auth) throws Exception {
                auth.inMemoryAuthentication()
                                // the username must match the OpenID of the user you are
                                // logging in with
                                .withUser(
                                                &quot;https://www.google.com/accounts/o8/id?id=lmkCn9xzPdsxVwG7pjYMuDgNNdASFmobNkcRPaWU&quot;)
                                .password(&quot;password&quot;).roles(&quot;USER&quot;);
        }
 }
 </pre>
A more advanced example demonstrating using attribute exchange and providing a
custom AuthenticationUserDetailsService that will make any user that authenticates
a valid user.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class OpenIDLoginConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http.authorizeRequests(authorizeRequests ->
                                authorizeRequests
                                        .antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;)
                        )
                        .openidLogin(openidLogin ->
                                openidLogin
                                        .loginPage(&quot;/login&quot;)
                                        .permitAll()
                                        .authenticationUserDetailsService(
                                                new AutoProvisioningUserDetailsService())
                                        .attributeExchange(googleExchange ->
                                                googleExchange
                                                        .identifierPattern(&quot;https://www.google.com/.*&quot;)
                                                        .attribute(emailAttribute ->
                                                                emailAttribute
                                                                        .name(&quot;email&quot;)
                                                                        .type(&quot;https://axschema.org/contact/email&quot;)
                                                                        .required(true)
                                                        )
                                                        .attribute(firstnameAttribute ->
                                                                firstnameAttribute
                                                                        .name(&quot;firstname&quot;)
                                                                        .type(&quot;https://axschema.org/namePerson/first&quot;)
                                                                        .required(true)
                                                        )
                                                        .attribute(lastnameAttribute ->
                                                                lastnameAttribute
                                                                        .name(&quot;lastname&quot;)
                                                                        .type(&quot;https://axschema.org/namePerson/last&quot;)
                                                                        .required(true)
                                                        )
                                        )
                                        .attributeExchange(yahooExchange ->
                                                yahooExchange
                                                        .identifierPattern(&quot;.*yahoo.com.*&quot;)
                                                        .attribute(emailAttribute ->
                                                                emailAttribute
                                                                        .name(&quot;email&quot;)
                                                                        .type(&quot;https://schema.openid.net/contact/email&quot;)
                                                                        .required(true)
                                                        )
                                                        .attribute(fullnameAttribute ->
                                                                fullnameAttribute
                                                                        .name(&quot;fullname&quot;)
                                                                        .type(&quot;https://axschema.org/namePerson&quot;)
                                                                        .required(true)
                                                        )
                                        )
                        );
        }
 }

 public class AutoProvisioningUserDetailsService implements
                AuthenticationUserDetailsService&lt;OpenIDAuthenticationToken&gt; {
        public UserDetails loadUserDetails(OpenIDAuthenticationToken token)
                        throws UsernameNotFoundException {
                return new User(token.getName(), &quot;NOTUSED&quot;,
                                AuthorityUtils.createAuthorityList(&quot;ROLE_USER&quot;));
        }
 }
 </pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>openidLoginCustomizer</code> - the <a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config"><code>Customizer</code></a> to provide more options for
the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.openid"><code>OpenIDLoginConfigurer</code></a></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/openid/OpenIDLoginConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.openid"><code>OpenIDLoginConfigurer</code></a></dd>
</dl>
</li>
</ul>
<a name="headers--">

</a>
<ul class="blockList">
<li class="blockList">
<h4>headers</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/HeadersConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">HeadersConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&nbsp;headers()
                                        throws java.lang.Exception</pre>
<div class="block">Adds the Security headers to the response. This is activated by default when using
<a href="../../../../../../../org/springframework/security/config/annotation/web/configuration/WebSecurityConfigurerAdapter.html" title="class in org.springframework.security.config.annotation.web.configuration"><code>WebSecurityConfigurerAdapter</code></a>'s default constructor. Accepting the
default provided by <a href="../../../../../../../org/springframework/security/config/annotation/web/configuration/WebSecurityConfigurerAdapter.html" title="class in org.springframework.security.config.annotation.web.configuration"><code>WebSecurityConfigurerAdapter</code></a> or only invoking
<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#headers--"><code>headers()</code></a> without invoking additional methods on it, is the equivalent of:
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class CsrfSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
     protected void configure(HttpSecurity http) throws Exception {
         http
             .headers()
                 .contentTypeOptions()
                 .and()
                 .xssProtection()
                 .and()
                 .cacheControl()
                 .and()
                 .httpStrictTransportSecurity()
                 .and()
                 .frameOptions()
                 .and()
             ...;
     }
 }
 </pre>
You can disable the headers using the following:
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class CsrfSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
     protected void configure(HttpSecurity http) throws Exception {
         http
             .headers().disable()
             ...;
     }
 }
 </pre>
You can enable only a few of the headers by first invoking
<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/HeadersConfigurer.html#defaultsDisabled--"><code>HeadersConfigurer.defaultsDisabled()</code></a>
and then invoking the appropriate methods on the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#headers--"><code>headers()</code></a> result.
For example, the following will enable <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/HeadersConfigurer.html#cacheControl--"><code>HeadersConfigurer.cacheControl()</code></a> and
<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/HeadersConfigurer.html#frameOptions--"><code>HeadersConfigurer.frameOptions()</code></a> only.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class CsrfSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
     protected void configure(HttpSecurity http) throws Exception {
         http
             .headers()
                  .defaultsDisabled()
                  .cacheControl()
                  .and()
                  .frameOptions()
                  .and()
             ...;
     }
 }
 </pre>
You can also choose to keep the defaults but explicitly disable a subset of headers.
For example, the following will enable all the default headers except
<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/HeadersConfigurer.html#frameOptions--"><code>HeadersConfigurer.frameOptions()</code></a>.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class CsrfSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
     protected void configure(HttpSecurity http) throws Exception {
         http
             .headers()
                  .frameOptions()
                        .disable()
                  .and()
             ...;
     }
 }
 </pre></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/HeadersConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>HeadersConfigurer</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/HeadersConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>HeadersConfigurer</code></a></dd>
</dl>
</li>
</ul>
<a name="headers-org.springframework.security.config.Customizer-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>headers</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;headers(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/HeadersConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">HeadersConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;headersCustomizer)
                     throws java.lang.Exception</pre>
<div class="block">Adds the Security headers to the response. This is activated by default when using
<a href="../../../../../../../org/springframework/security/config/annotation/web/configuration/WebSecurityConfigurerAdapter.html" title="class in org.springframework.security.config.annotation.web.configuration"><code>WebSecurityConfigurerAdapter</code></a>'s default constructor.
<h2>Example Configurations</h2>
Accepting the default provided by <a href="../../../../../../../org/springframework/security/config/annotation/web/configuration/WebSecurityConfigurerAdapter.html" title="class in org.springframework.security.config.annotation.web.configuration"><code>WebSecurityConfigurerAdapter</code></a> or only invoking
<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#headers--"><code>headers()</code></a> without invoking additional methods on it, is the equivalent of:
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class CsrfSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http
                        .headers(headers ->
                                headers
                                        .contentTypeOptions(withDefaults())
                                        .xssProtection(withDefaults())
                                        .cacheControl(withDefaults())
                                        .httpStrictTransportSecurity(withDefaults())
                                        .frameOptions(withDefaults()
                        );
        }
 }
 </pre>
You can disable the headers using the following:
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class CsrfSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http
                        .headers(headers -> headers.disable());
        }
 }
 </pre>
You can enable only a few of the headers by first invoking
<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/HeadersConfigurer.html#defaultsDisabled--"><code>HeadersConfigurer.defaultsDisabled()</code></a>
and then invoking the appropriate methods on the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#headers--"><code>headers()</code></a> result.
For example, the following will enable <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/HeadersConfigurer.html#cacheControl--"><code>HeadersConfigurer.cacheControl()</code></a> and
<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/HeadersConfigurer.html#frameOptions--"><code>HeadersConfigurer.frameOptions()</code></a> only.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class CsrfSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http
                        .headers(headers ->
                                headers
                                        .defaultsDisabled()
                                        .cacheControl(withDefaults())
                                        .frameOptions(withDefaults())
                        );
        }
 }
 </pre>
You can also choose to keep the defaults but explicitly disable a subset of headers.
For example, the following will enable all the default headers except
<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/HeadersConfigurer.html#frameOptions--"><code>HeadersConfigurer.frameOptions()</code></a>.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class CsrfSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
  protected void configure(HttpSecurity http) throws Exception {
        http
                .headers(headers ->
                        headers
                                .frameOptions(frameOptions -> frameOptions.disable())
                );
 }
 </pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>headersCustomizer</code> - the <a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config"><code>Customizer</code></a> to provide more options for
the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/HeadersConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>HeadersConfigurer</code></a></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
<a name="cors--">

</a>
<ul class="blockList">
<li class="blockList">
<h4>cors</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/CorsConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">CorsConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&nbsp;cors()
                                  throws java.lang.Exception</pre>
<div class="block">Adds a <code>CorsFilter</code> to be used. If a bean by the name of corsFilter is
provided, that <code>CorsFilter</code> is used. Else if corsConfigurationSource is
defined, then that <code>CorsConfiguration</code> is used. Otherwise, if Spring MVC is
on the classpath a <code>HandlerMappingIntrospector</code> is used.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/CorsConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>CorsConfigurer</code></a> for customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
<a name="cors-org.springframework.security.config.Customizer-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>cors</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;cors(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/CorsConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">CorsConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;corsCustomizer)
                  throws java.lang.Exception</pre>
<div class="block">Adds a <code>CorsFilter</code> to be used. If a bean by the name of corsFilter is
provided, that <code>CorsFilter</code> is used. Else if corsConfigurationSource is
defined, then that <code>CorsConfiguration</code> is used. Otherwise, if Spring MVC is
on the classpath a <code>HandlerMappingIntrospector</code> is used.
You can enable CORS using:
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class CorsSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
     protected void configure(HttpSecurity http) throws Exception {
         http
             .cors(withDefaults());
     }
 }
 </pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>corsCustomizer</code> - the <a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config"><code>Customizer</code></a> to provide more options for
the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/CorsConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>CorsConfigurer</code></a></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
<a name="sessionManagement--">

</a>
<ul class="blockList">
<li class="blockList">
<h4>sessionManagement</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">SessionManagementConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&nbsp;sessionManagement()
                                                            throws java.lang.Exception</pre>
<div class="block">Allows configuring of Session Management.
<h2>Example Configuration</h2>
The following configuration demonstrates how to enforce that only a single instance
of a user is authenticated at a time. If a user authenticates with the username
"user" without logging out and an attempt to authenticate with "user" is made the
first session will be forcibly terminated and sent to the "/login?expired" URL.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class SessionManagementSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http.authorizeRequests().anyRequest().hasRole(&quot;USER&quot;).and().formLogin()
                                .permitAll().and().sessionManagement().maximumSessions(1)
                                .expiredUrl(&quot;/login?expired&quot;);
        }

        &#064;Override
        protected void configure(AuthenticationManagerBuilder auth) throws Exception {
                auth.inMemoryAuthentication().withUser(&quot;user&quot;).password(&quot;password&quot;).roles(&quot;USER&quot;);
        }
 }
 </pre>
When using <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer.html#maximumSessions-int-"><code>SessionManagementConfigurer.maximumSessions(int)</code></a>, do not forget
to configure <a href="../../../../../../../org/springframework/security/web/session/HttpSessionEventPublisher.html" title="class in org.springframework.security.web.session"><code>HttpSessionEventPublisher</code></a> for the application to ensure that
expired sessions are cleaned up.
In a web.xml this can be configured using the following:
<pre> &lt;listener&gt;
      &lt;listener-class&gt;org.springframework.security.web.session.HttpSessionEventPublisher&lt;/listener-class&gt;
 &lt;/listener&gt;
 </pre>
Alternatively,
<a href="../../../../../../../org/springframework/security/web/context/AbstractSecurityWebApplicationInitializer.html#enableHttpSessionEventPublisher--"><code>AbstractSecurityWebApplicationInitializer.enableHttpSessionEventPublisher()</code></a>
could return true.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>SessionManagementConfigurer</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
<a name="sessionManagement-org.springframework.security.config.Customizer-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>sessionManagement</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;sessionManagement(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">SessionManagementConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;sessionManagementCustomizer)
                               throws java.lang.Exception</pre>
<div class="block">Allows configuring of Session Management.
<h2>Example Configuration</h2>
The following configuration demonstrates how to enforce that only a single instance
of a user is authenticated at a time. If a user authenticates with the username
"user" without logging out and an attempt to authenticate with "user" is made the
first session will be forcibly terminated and sent to the "/login?expired" URL.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class SessionManagementSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http
                        .authorizeRequests(authorizeRequests ->
                                authorizeRequests
                                        .anyRequest().hasRole(&quot;USER&quot;)
                        )
                        .formLogin(formLogin ->
                                formLogin
                                        .permitAll()
                        )
                        .sessionManagement(sessionManagement ->
                                sessionManagement
                                        .sessionConcurrency(sessionConcurrency ->
                                                sessionConcurrency
                                                        .maximumSessions(1)
                                                        .expiredUrl(&quot;/login?expired&quot;)
                                        )
                        );
        }
 }
 </pre>
When using <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer.html#maximumSessions-int-"><code>SessionManagementConfigurer.maximumSessions(int)</code></a>, do not forget
to configure <a href="../../../../../../../org/springframework/security/web/session/HttpSessionEventPublisher.html" title="class in org.springframework.security.web.session"><code>HttpSessionEventPublisher</code></a> for the application to ensure that
expired sessions are cleaned up.
In a web.xml this can be configured using the following:
<pre> &lt;listener&gt;
      &lt;listener-class&gt;org.springframework.security.web.session.HttpSessionEventPublisher&lt;/listener-class&gt;
 &lt;/listener&gt;
 </pre>
Alternatively,
<a href="../../../../../../../org/springframework/security/web/context/AbstractSecurityWebApplicationInitializer.html#enableHttpSessionEventPublisher--"><code>AbstractSecurityWebApplicationInitializer.enableHttpSessionEventPublisher()</code></a>
could return true.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>sessionManagementCustomizer</code> - the <a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config"><code>Customizer</code></a> to provide more options for
the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/SessionManagementConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>SessionManagementConfigurer</code></a></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
<a name="portMapper--">

</a>
<ul class="blockList">
<li class="blockList">
<h4>portMapper</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/PortMapperConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">PortMapperConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&nbsp;portMapper()
                                              throws java.lang.Exception</pre>
<div class="block">Allows configuring a <a href="../../../../../../../org/springframework/security/web/PortMapper.html" title="interface in org.springframework.security.web"><code>PortMapper</code></a> that is available from
<a href="../../../../../../../org/springframework/security/config/annotation/AbstractConfiguredSecurityBuilder.html#getSharedObject-java.lang.Class-"><code>AbstractConfiguredSecurityBuilder.getSharedObject(Class)</code></a>. Other provided
<a href="../../../../../../../org/springframework/security/config/annotation/SecurityConfigurer.html" title="interface in org.springframework.security.config.annotation"><code>SecurityConfigurer</code></a> objects use this configured <a href="../../../../../../../org/springframework/security/web/PortMapper.html" title="interface in org.springframework.security.web"><code>PortMapper</code></a> as a
default <a href="../../../../../../../org/springframework/security/web/PortMapper.html" title="interface in org.springframework.security.web"><code>PortMapper</code></a> when redirecting from HTTP to HTTPS or from HTTPS to
HTTP (for example when used in combination with <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requiresChannel--"><code>requiresChannel()</code></a>. By
default Spring Security uses a <a href="../../../../../../../org/springframework/security/web/PortMapperImpl.html" title="class in org.springframework.security.web"><code>PortMapperImpl</code></a> which maps the HTTP port 8080
to the HTTPS port 8443 and the HTTP port of 80 to the HTTPS port of 443.
<h2>Example Configuration</h2>
The following configuration will ensure that redirects within Spring Security from
HTTP of a port of 9090 will redirect to HTTPS port of 9443 and the HTTP port of 80
to the HTTPS port of 443.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class PortMapperSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http.authorizeRequests().antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;).and().formLogin()
                                .permitAll().and()
                                // Example portMapper() configuration
                                .portMapper().http(9090).mapsTo(9443).http(80).mapsTo(443);
        }

        &#064;Override
        protected void configure(AuthenticationManagerBuilder auth) throws Exception {
                auth.inMemoryAuthentication().withUser(&quot;user&quot;).password(&quot;password&quot;).roles(&quot;USER&quot;);
        }
 }
 </pre></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/PortMapperConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>PortMapperConfigurer</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requiresChannel--"><code>requiresChannel()</code></a></dd>
</dl>
</li>
</ul>
<a name="portMapper-org.springframework.security.config.Customizer-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>portMapper</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;portMapper(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/PortMapperConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">PortMapperConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;portMapperCustomizer)
                        throws java.lang.Exception</pre>
<div class="block">Allows configuring a <a href="../../../../../../../org/springframework/security/web/PortMapper.html" title="interface in org.springframework.security.web"><code>PortMapper</code></a> that is available from
<a href="../../../../../../../org/springframework/security/config/annotation/AbstractConfiguredSecurityBuilder.html#getSharedObject-java.lang.Class-"><code>AbstractConfiguredSecurityBuilder.getSharedObject(Class)</code></a>. Other provided
<a href="../../../../../../../org/springframework/security/config/annotation/SecurityConfigurer.html" title="interface in org.springframework.security.config.annotation"><code>SecurityConfigurer</code></a> objects use this configured <a href="../../../../../../../org/springframework/security/web/PortMapper.html" title="interface in org.springframework.security.web"><code>PortMapper</code></a> as a
default <a href="../../../../../../../org/springframework/security/web/PortMapper.html" title="interface in org.springframework.security.web"><code>PortMapper</code></a> when redirecting from HTTP to HTTPS or from HTTPS to
HTTP (for example when used in combination with <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requiresChannel--"><code>requiresChannel()</code></a>. By
default Spring Security uses a <a href="../../../../../../../org/springframework/security/web/PortMapperImpl.html" title="class in org.springframework.security.web"><code>PortMapperImpl</code></a> which maps the HTTP port 8080
to the HTTPS port 8443 and the HTTP port of 80 to the HTTPS port of 443.
<h2>Example Configuration</h2>
The following configuration will ensure that redirects within Spring Security from
HTTP of a port of 9090 will redirect to HTTPS port of 9443 and the HTTP port of 80
to the HTTPS port of 443.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class PortMapperSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http
                        .requiresChannel(requiresChannel ->
                                requiresChannel
                                        .anyRequest().requiresSecure()
                        )
                        .portMapper(portMapper ->
                                portMapper
                                        .http(9090).mapsTo(9443)
                                        .http(80).mapsTo(443)
                        );
        }
 }
 </pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>portMapperCustomizer</code> - the <a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config"><code>Customizer</code></a> to provide more options for
the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/PortMapperConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>PortMapperConfigurer</code></a></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requiresChannel--"><code>requiresChannel()</code></a></dd>
</dl>
</li>
</ul>
<a name="jee--">

</a>
<ul class="blockList">
<li class="blockList">
<h4>jee</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/JeeConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">JeeConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&nbsp;jee()
                                throws java.lang.Exception</pre>
<div class="block">Configures container based pre authentication. In this case, authentication
is managed by the Servlet Container.
<h2>Example Configuration</h2>
The following configuration will use the principal found on the
<code>HttpServletRequest</code> and if the user is in the role "ROLE_USER" or
"ROLE_ADMIN" will add that to the resulting <a href="../../../../../../../org/springframework/security/core/Authentication.html" title="interface in org.springframework.security.core"><code>Authentication</code></a>.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class JeeSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http.authorizeRequests().antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;).and()
                // Example jee() configuration
                                .jee().mappableRoles(&quot;USER&quot;, &quot;ADMIN&quot;);
        }
 }
 </pre>
Developers wishing to use pre authentication with the container will need to ensure
their web.xml configures the security constraints. For example, the web.xml (there
is no equivalent Java based configuration supported by the Servlet specification)
might look like:
<pre> &lt;login-config&gt;
     &lt;auth-method&gt;FORM&lt;/auth-method&gt;
     &lt;form-login-config&gt;
         &lt;form-login-page&gt;/login&lt;/form-login-page&gt;
         &lt;form-error-page&gt;/login?error&lt;/form-error-page&gt;
     &lt;/form-login-config&gt;
 &lt;/login-config&gt;

 &lt;security-role&gt;
     &lt;role-name&gt;ROLE_USER&lt;/role-name&gt;
 &lt;/security-role&gt;
 &lt;security-constraint&gt;
     &lt;web-resource-collection&gt;
     &lt;web-resource-name&gt;Public&lt;/web-resource-name&gt;
         &lt;description&gt;Matches unconstrained pages&lt;/description&gt;
         &lt;url-pattern&gt;/login&lt;/url-pattern&gt;
         &lt;url-pattern&gt;/logout&lt;/url-pattern&gt;
         &lt;url-pattern&gt;/resources/*&lt;/url-pattern&gt;
     &lt;/web-resource-collection&gt;
 &lt;/security-constraint&gt;
 &lt;security-constraint&gt;
     &lt;web-resource-collection&gt;
         &lt;web-resource-name&gt;Secured Areas&lt;/web-resource-name&gt;
         &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
     &lt;/web-resource-collection&gt;
     &lt;auth-constraint&gt;
         &lt;role-name&gt;ROLE_USER&lt;/role-name&gt;
     &lt;/auth-constraint&gt;
 &lt;/security-constraint&gt;
 </pre>
Last you will need to configure your container to contain the user with the correct
roles. This configuration is specific to the Servlet Container, so consult your
Servlet Container's documentation.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/JeeConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>JeeConfigurer</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
<a name="jee-org.springframework.security.config.Customizer-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>jee</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;jee(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/JeeConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">JeeConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;jeeCustomizer)
                 throws java.lang.Exception</pre>
<div class="block">Configures container based pre authentication. In this case, authentication
is managed by the Servlet Container.
<h2>Example Configuration</h2>
The following configuration will use the principal found on the
<code>HttpServletRequest</code> and if the user is in the role "ROLE_USER" or
"ROLE_ADMIN" will add that to the resulting <a href="../../../../../../../org/springframework/security/core/Authentication.html" title="interface in org.springframework.security.core"><code>Authentication</code></a>.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class JeeSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http
                        .authorizeRequests(authorizeRequests ->
                                authorizeRequests
                                        .antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;)
                        )
                        .jee(jee ->
                                jee
                                        .mappableRoles(&quot;USER&quot;, &quot;ADMIN&quot;)
                        );
        }
 }
 </pre>
Developers wishing to use pre authentication with the container will need to ensure
their web.xml configures the security constraints. For example, the web.xml (there
is no equivalent Java based configuration supported by the Servlet specification)
might look like:
<pre> &lt;login-config&gt;
     &lt;auth-method&gt;FORM&lt;/auth-method&gt;
     &lt;form-login-config&gt;
         &lt;form-login-page&gt;/login&lt;/form-login-page&gt;
         &lt;form-error-page&gt;/login?error&lt;/form-error-page&gt;
     &lt;/form-login-config&gt;
 &lt;/login-config&gt;

 &lt;security-role&gt;
     &lt;role-name&gt;ROLE_USER&lt;/role-name&gt;
 &lt;/security-role&gt;
 &lt;security-constraint&gt;
     &lt;web-resource-collection&gt;
     &lt;web-resource-name&gt;Public&lt;/web-resource-name&gt;
         &lt;description&gt;Matches unconstrained pages&lt;/description&gt;
         &lt;url-pattern&gt;/login&lt;/url-pattern&gt;
         &lt;url-pattern&gt;/logout&lt;/url-pattern&gt;
         &lt;url-pattern&gt;/resources/*&lt;/url-pattern&gt;
     &lt;/web-resource-collection&gt;
 &lt;/security-constraint&gt;
 &lt;security-constraint&gt;
     &lt;web-resource-collection&gt;
         &lt;web-resource-name&gt;Secured Areas&lt;/web-resource-name&gt;
         &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
     &lt;/web-resource-collection&gt;
     &lt;auth-constraint&gt;
         &lt;role-name&gt;ROLE_USER&lt;/role-name&gt;
     &lt;/auth-constraint&gt;
 &lt;/security-constraint&gt;
 </pre>
Last you will need to configure your container to contain the user with the correct
roles. This configuration is specific to the Servlet Container, so consult your
Servlet Container's documentation.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>jeeCustomizer</code> - the <a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config"><code>Customizer</code></a> to provide more options for
the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/JeeConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>JeeConfigurer</code></a></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
<a name="x509--">

</a>
<ul class="blockList">
<li class="blockList">
<h4>x509</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/X509Configurer.html" title="class in org.springframework.security.config.annotation.web.configurers">X509Configurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&nbsp;x509()
                                  throws java.lang.Exception</pre>
<div class="block">Configures X509 based pre authentication.
<h2>Example Configuration</h2>
The following configuration will attempt to extract the username from the X509
certificate. Remember that the Servlet Container will need to be configured to
request client certificates in order for this to work.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class X509SecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http.authorizeRequests().antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;).and()
                // Example x509() configuration
                                .x509();
        }
 }
 </pre></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/X509Configurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>X509Configurer</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
<a name="x509-org.springframework.security.config.Customizer-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>x509</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;x509(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/X509Configurer.html" title="class in org.springframework.security.config.annotation.web.configurers">X509Configurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;x509Customizer)
                  throws java.lang.Exception</pre>
<div class="block">Configures X509 based pre authentication.
<h2>Example Configuration</h2>
The following configuration will attempt to extract the username from the X509
certificate. Remember that the Servlet Container will need to be configured to
request client certificates in order for this to work.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class X509SecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http
                        .authorizeRequests(authorizeRequests ->
                                authorizeRequests
                                        .antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;)
                        )
                        .x509(withDefaults());
        }
 }
 </pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>x509Customizer</code> - the <a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config"><code>Customizer</code></a> to provide more options for
the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/X509Configurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>X509Configurer</code></a></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
<a name="rememberMe--">

</a>
<ul class="blockList">
<li class="blockList">
<h4>rememberMe</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/RememberMeConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">RememberMeConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&nbsp;rememberMe()
                                              throws java.lang.Exception</pre>
<div class="block">Allows configuring of Remember Me authentication.
<h2>Example Configuration</h2>
The following configuration demonstrates how to allow token based remember me
authentication. Upon authenticating if the HTTP parameter named "remember-me"
exists, then the user will be remembered even after their
<code>HttpSession</code> expires.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class RememberMeSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(AuthenticationManagerBuilder auth) throws Exception {
                auth.inMemoryAuthentication().withUser(&quot;user&quot;).password(&quot;password&quot;).roles(&quot;USER&quot;);
        }

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http.authorizeRequests().antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;).and().formLogin()
                                .permitAll().and()
                                // Example Remember Me Configuration
                                .rememberMe();
        }
 }
 </pre></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/RememberMeConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>RememberMeConfigurer</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
<a name="rememberMe-org.springframework.security.config.Customizer-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>rememberMe</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;rememberMe(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/RememberMeConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">RememberMeConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;rememberMeCustomizer)
                        throws java.lang.Exception</pre>
<div class="block">Allows configuring of Remember Me authentication.
<h2>Example Configuration</h2>
The following configuration demonstrates how to allow token based remember me
authentication. Upon authenticating if the HTTP parameter named "remember-me"
exists, then the user will be remembered even after their
<code>HttpSession</code> expires.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class RememberMeSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http
                        .authorizeRequests(authorizeRequests ->
                                authorizeRequests
                                        .antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;)
                        )
                        .formLogin(withDefaults())
                        .rememberMe(withDefaults());
        }
 }
 </pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>rememberMeCustomizer</code> - the <a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config"><code>Customizer</code></a> to provide more options for
the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/RememberMeConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>RememberMeConfigurer</code></a></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
<a name="authorizeRequests--">

</a>
<ul class="blockList">
<li class="blockList">
<h4>authorizeRequests</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer.ExpressionInterceptUrlRegistry.html" title="class in org.springframework.security.config.annotation.web.configurers">ExpressionUrlAuthorizationConfigurer.ExpressionInterceptUrlRegistry</a>&nbsp;authorizeRequests()
                                                                                      throws java.lang.Exception</pre>
<div class="block">Allows restricting access based upon the <code>HttpServletRequest</code> using
<a href="../../../../../../../org/springframework/security/web/util/matcher/RequestMatcher.html" title="interface in org.springframework.security.web.util.matcher"><code>RequestMatcher</code></a> implementations (i.e. via URL patterns).
<h2>Example Configurations</h2>
The most basic example is to configure all URLs to require the role "ROLE_USER".
The configuration below requires authentication to every URL and will grant access
to both the user "admin" and "user".
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class AuthorizeUrlsSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http.authorizeRequests().antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;).and().formLogin();
        }

        &#064;Override
        protected void configure(AuthenticationManagerBuilder auth) throws Exception {
                auth.inMemoryAuthentication().withUser(&quot;user&quot;).password(&quot;password&quot;).roles(&quot;USER&quot;)
                                .and().withUser(&quot;admin&quot;).password(&quot;password&quot;).roles(&quot;ADMIN&quot;, &quot;USER&quot;);
        }
 }
 </pre>
We can also configure multiple URLs. The configuration below requires
authentication to every URL and will grant access to URLs starting with /admin/ to
only the "admin" user. All other URLs either user can access.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class AuthorizeUrlsSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http.authorizeRequests().antMatchers(&quot;/admin/**&quot;).hasRole(&quot;ADMIN&quot;)
                                .antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;).and().formLogin();
        }

        &#064;Override
        protected void configure(AuthenticationManagerBuilder auth) throws Exception {
                auth.inMemoryAuthentication().withUser(&quot;user&quot;).password(&quot;password&quot;).roles(&quot;USER&quot;)
                                .and().withUser(&quot;admin&quot;).password(&quot;password&quot;).roles(&quot;ADMIN&quot;, &quot;USER&quot;);
        }
 }
 </pre>
Note that the matchers are considered in order. Therefore, the following is invalid
because the first matcher matches every request and will never get to the second
mapping:
<pre> http.authorizeRequests().antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;).antMatchers(&quot;/admin/**&quot;)
                .hasRole(&quot;ADMIN&quot;)
 </pre></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>ExpressionUrlAuthorizationConfigurer</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestMatcher-org.springframework.security.web.util.matcher.RequestMatcher-"><code>requestMatcher(RequestMatcher)</code></a></dd>
</dl>
</li>
</ul>
<a name="authorizeRequests-org.springframework.security.config.Customizer-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>authorizeRequests</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;authorizeRequests(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/ExpressionUrlAuthorizationConfigurer.ExpressionInterceptUrlRegistry.html" title="class in org.springframework.security.config.annotation.web.configurers">ExpressionUrlAuthorizationConfigurer.ExpressionInterceptUrlRegistry</a>&gt;&nbsp;authorizeRequestsCustomizer)
                               throws java.lang.Exception</pre>
<div class="block">Allows restricting access based upon the <code>HttpServletRequest</code> using
<a href="../../../../../../../org/springframework/security/web/util/matcher/RequestMatcher.html" title="interface in org.springframework.security.web.util.matcher"><code>RequestMatcher</code></a> implementations (i.e. via URL patterns).
<h2>Example Configurations</h2>
The most basic example is to configure all URLs to require the role "ROLE_USER".
The configuration below requires authentication to every URL and will grant access
to both the user "admin" and "user".
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class AuthorizeUrlsSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http
                        .authorizeRequests(authorizeRequests ->
                                authorizeRequests
                                        .antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;)
                        )
                        .formLogin(withDefaults());
        }
 }
 </pre>
We can also configure multiple URLs. The configuration below requires
authentication to every URL and will grant access to URLs starting with /admin/ to
only the "admin" user. All other URLs either user can access.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class AuthorizeUrlsSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http
                        .authorizeRequests(authorizeRequests ->
                                authorizeRequests
                                        .antMatchers(&quot;/admin/**&quot;).hasRole(&quot;ADMIN&quot;)
                                        .antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;)
                        )
                        .formLogin(withDefaults());
        }
 }
 </pre>
Note that the matchers are considered in order. Therefore, the following is invalid
because the first matcher matches every request and will never get to the second
mapping:
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class AuthorizeUrlsSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                 http
                        .authorizeRequests(authorizeRequests ->
                                authorizeRequests
                                        .antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;)
                                        .antMatchers(&quot;/admin/**&quot;).hasRole(&quot;ADMIN&quot;)
                        );
        }
 }
 </pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>authorizeRequestsCustomizer</code> - the <a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config"><code>Customizer</code></a> to provide more options for
the <code>ExpressionUrlAuthorizationConfigurer.ExpressionInterceptUrlRegistry</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestMatcher-org.springframework.security.web.util.matcher.RequestMatcher-"><code>requestMatcher(RequestMatcher)</code></a></dd>
</dl>
</li>
</ul>
<a name="requestCache--">

</a>
<ul class="blockList">
<li class="blockList">
<h4>requestCache</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/RequestCacheConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">RequestCacheConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&nbsp;requestCache()
                                                  throws java.lang.Exception</pre>
<div class="block">Allows configuring the Request Cache. For example, a protected page (/protected)
may be requested prior to authentication. The application will redirect the user to
a login page. After authentication, Spring Security will redirect the user to the
originally requested protected page (/protected). This is automatically applied
when using <a href="../../../../../../../org/springframework/security/config/annotation/web/configuration/WebSecurityConfigurerAdapter.html" title="class in org.springframework.security.config.annotation.web.configuration"><code>WebSecurityConfigurerAdapter</code></a>.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/RequestCacheConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>RequestCacheConfigurer</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
<a name="requestCache-org.springframework.security.config.Customizer-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>requestCache</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;requestCache(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/RequestCacheConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">RequestCacheConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;requestCacheCustomizer)
                          throws java.lang.Exception</pre>
<div class="block">Allows configuring the Request Cache. For example, a protected page (/protected)
may be requested prior to authentication. The application will redirect the user to
a login page. After authentication, Spring Security will redirect the user to the
originally requested protected page (/protected). This is automatically applied
when using <a href="../../../../../../../org/springframework/security/config/annotation/web/configuration/WebSecurityConfigurerAdapter.html" title="class in org.springframework.security.config.annotation.web.configuration"><code>WebSecurityConfigurerAdapter</code></a>.
<h2>Example Custom Configuration</h2>
The following example demonstrates how to disable request caching.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class RequestCacheDisabledSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http
                        .authorizeRequests(authorizeRequests ->
                                authorizeRequests
                                        .antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;)
                        )
                        .requestCache(requestCache ->
                                requestCache.disable()
                        );
        }
 }
 </pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>requestCacheCustomizer</code> - the <a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config"><code>Customizer</code></a> to provide more options for
the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/RequestCacheConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>RequestCacheConfigurer</code></a></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
<a name="exceptionHandling--">

</a>
<ul class="blockList">
<li class="blockList">
<h4>exceptionHandling</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/ExceptionHandlingConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">ExceptionHandlingConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&nbsp;exceptionHandling()
                                                            throws java.lang.Exception</pre>
<div class="block">Allows configuring exception handling. This is automatically applied when using
<a href="../../../../../../../org/springframework/security/config/annotation/web/configuration/WebSecurityConfigurerAdapter.html" title="class in org.springframework.security.config.annotation.web.configuration"><code>WebSecurityConfigurerAdapter</code></a>.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/ExceptionHandlingConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>ExceptionHandlingConfigurer</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
<a name="exceptionHandling-org.springframework.security.config.Customizer-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>exceptionHandling</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;exceptionHandling(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/ExceptionHandlingConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">ExceptionHandlingConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;exceptionHandlingCustomizer)
                               throws java.lang.Exception</pre>
<div class="block">Allows configuring exception handling. This is automatically applied when using
<a href="../../../../../../../org/springframework/security/config/annotation/web/configuration/WebSecurityConfigurerAdapter.html" title="class in org.springframework.security.config.annotation.web.configuration"><code>WebSecurityConfigurerAdapter</code></a>.
<h2>Example Custom Configuration</h2>
The following customization will ensure that users who are denied access are forwarded
to the page "/errors/access-denied".
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class ExceptionHandlingSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http
                        .authorizeRequests(authorizeRequests ->
                                authorizeRequests
                                        .antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;)
                        )
                        // sample exception handling customization
                        .exceptionHandling(exceptionHandling ->
                                exceptionHandling
                                        .accessDeniedPage(&quot;/errors/access-denied&quot;)
                        );
        }
 }
 </pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>exceptionHandlingCustomizer</code> - the <a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config"><code>Customizer</code></a> to provide more options for
the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/ExceptionHandlingConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>ExceptionHandlingConfigurer</code></a></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
<a name="securityContext--">

</a>
<ul class="blockList">
<li class="blockList">
<h4>securityContext</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/SecurityContextConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">SecurityContextConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&nbsp;securityContext()
                                                        throws java.lang.Exception</pre>
<div class="block">Sets up management of the <a href="../../../../../../../org/springframework/security/core/context/SecurityContext.html" title="interface in org.springframework.security.core.context"><code>SecurityContext</code></a> on the
<a href="../../../../../../../org/springframework/security/core/context/SecurityContextHolder.html" title="class in org.springframework.security.core.context"><code>SecurityContextHolder</code></a> between <code>HttpServletRequest</code>'s. This is
automatically applied when using <a href="../../../../../../../org/springframework/security/config/annotation/web/configuration/WebSecurityConfigurerAdapter.html" title="class in org.springframework.security.config.annotation.web.configuration"><code>WebSecurityConfigurerAdapter</code></a>.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/SecurityContextConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>SecurityContextConfigurer</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
<a name="securityContext-org.springframework.security.config.Customizer-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>securityContext</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;securityContext(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/SecurityContextConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">SecurityContextConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;securityContextCustomizer)
                             throws java.lang.Exception</pre>
<div class="block">Sets up management of the <a href="../../../../../../../org/springframework/security/core/context/SecurityContext.html" title="interface in org.springframework.security.core.context"><code>SecurityContext</code></a> on the
<a href="../../../../../../../org/springframework/security/core/context/SecurityContextHolder.html" title="class in org.springframework.security.core.context"><code>SecurityContextHolder</code></a> between <code>HttpServletRequest</code>'s. This is
automatically applied when using <a href="../../../../../../../org/springframework/security/config/annotation/web/configuration/WebSecurityConfigurerAdapter.html" title="class in org.springframework.security.config.annotation.web.configuration"><code>WebSecurityConfigurerAdapter</code></a>.
The following customization specifies the shared <a href="../../../../../../../org/springframework/security/web/context/SecurityContextRepository.html" title="interface in org.springframework.security.web.context"><code>SecurityContextRepository</code></a>
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class SecurityContextSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http
                        .securityContext(securityContext ->
                                securityContext
                                        .securityContextRepository(SCR)
                        );
        }
 }
 </pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>securityContextCustomizer</code> - the <a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config"><code>Customizer</code></a> to provide more options for
the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/SecurityContextConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>SecurityContextConfigurer</code></a></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
<a name="servletApi--">

</a>
<ul class="blockList">
<li class="blockList">
<h4>servletApi</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/ServletApiConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">ServletApiConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&nbsp;servletApi()
                                              throws java.lang.Exception</pre>
<div class="block">Integrates the <code>HttpServletRequest</code> methods with the values found on the
<a href="../../../../../../../org/springframework/security/core/context/SecurityContext.html" title="interface in org.springframework.security.core.context"><code>SecurityContext</code></a>. This is automatically applied when using
<a href="../../../../../../../org/springframework/security/config/annotation/web/configuration/WebSecurityConfigurerAdapter.html" title="class in org.springframework.security.config.annotation.web.configuration"><code>WebSecurityConfigurerAdapter</code></a>.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/ServletApiConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>ServletApiConfigurer</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
<a name="servletApi-org.springframework.security.config.Customizer-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>servletApi</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;servletApi(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/ServletApiConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">ServletApiConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;servletApiCustomizer)
                        throws java.lang.Exception</pre>
<div class="block">Integrates the <code>HttpServletRequest</code> methods with the values found on the
<a href="../../../../../../../org/springframework/security/core/context/SecurityContext.html" title="interface in org.springframework.security.core.context"><code>SecurityContext</code></a>. This is automatically applied when using
<a href="../../../../../../../org/springframework/security/config/annotation/web/configuration/WebSecurityConfigurerAdapter.html" title="class in org.springframework.security.config.annotation.web.configuration"><code>WebSecurityConfigurerAdapter</code></a>. You can disable it using:
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class ServletApiSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http
                        .servletApi(servletApi ->
                                servletApi.disable()
                        );
        }
 }
 </pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>servletApiCustomizer</code> - the <a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config"><code>Customizer</code></a> to provide more options for
the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/ServletApiConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>ServletApiConfigurer</code></a></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
<a name="csrf--">

</a>
<ul class="blockList">
<li class="blockList">
<h4>csrf</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/CsrfConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">CsrfConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&nbsp;csrf()
                                  throws java.lang.Exception</pre>
<div class="block">Adds CSRF support. This is activated by default when using
<a href="../../../../../../../org/springframework/security/config/annotation/web/configuration/WebSecurityConfigurerAdapter.html" title="class in org.springframework.security.config.annotation.web.configuration"><code>WebSecurityConfigurerAdapter</code></a>'s default constructor. You can disable it
using:
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class CsrfSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
     protected void configure(HttpSecurity http) throws Exception {
         http
             .csrf().disable()
             ...;
     }
 }
 </pre></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/CsrfConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>CsrfConfigurer</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
<a name="csrf-org.springframework.security.config.Customizer-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>csrf</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;csrf(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/CsrfConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">CsrfConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;csrfCustomizer)
                  throws java.lang.Exception</pre>
<div class="block">Adds CSRF support. This is activated by default when using
<a href="../../../../../../../org/springframework/security/config/annotation/web/configuration/WebSecurityConfigurerAdapter.html" title="class in org.springframework.security.config.annotation.web.configuration"><code>WebSecurityConfigurerAdapter</code></a>'s default constructor. You can disable it
using:
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class CsrfSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
     protected void configure(HttpSecurity http) throws Exception {
         http
             .csrf(csrf -> csrf.disable());
     }
 }
 </pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>csrfCustomizer</code> - the <a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config"><code>Customizer</code></a> to provide more options for
the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/CsrfConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>CsrfConfigurer</code></a></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
<a name="logout--">

</a>
<ul class="blockList">
<li class="blockList">
<h4>logout</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/LogoutConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">LogoutConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&nbsp;logout()
                                      throws java.lang.Exception</pre>
<div class="block">Provides logout support. This is automatically applied when using
<a href="../../../../../../../org/springframework/security/config/annotation/web/configuration/WebSecurityConfigurerAdapter.html" title="class in org.springframework.security.config.annotation.web.configuration"><code>WebSecurityConfigurerAdapter</code></a>. The default is that accessing the URL
"/logout" will log the user out by invalidating the HTTP Session, cleaning up any
<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#rememberMe--"><code>rememberMe()</code></a> authentication that was configured, clearing the
<a href="../../../../../../../org/springframework/security/core/context/SecurityContextHolder.html" title="class in org.springframework.security.core.context"><code>SecurityContextHolder</code></a>, and then redirect to "/login?success".
<h2>Example Custom Configuration</h2>
The following customization to log out when the URL "/custom-logout" is invoked.
Log out will remove the cookie named "remove", not invalidate the HttpSession,
clear the SecurityContextHolder, and upon completion redirect to "/logout-success".
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class LogoutSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http.authorizeRequests().antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;).and().formLogin()
                                .and()
                                // sample logout customization
                                .logout().deleteCookies(&quot;remove&quot;).invalidateHttpSession(false)
                                .logoutUrl(&quot;/custom-logout&quot;).logoutSuccessUrl(&quot;/logout-success&quot;);
        }

        &#064;Override
        protected void configure(AuthenticationManagerBuilder auth) throws Exception {
                auth.inMemoryAuthentication().withUser(&quot;user&quot;).password(&quot;password&quot;).roles(&quot;USER&quot;);
        }
 }
 </pre></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/LogoutConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>LogoutConfigurer</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
<a name="logout-org.springframework.security.config.Customizer-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>logout</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;logout(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/LogoutConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">LogoutConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;logoutCustomizer)
                    throws java.lang.Exception</pre>
<div class="block">Provides logout support. This is automatically applied when using
<a href="../../../../../../../org/springframework/security/config/annotation/web/configuration/WebSecurityConfigurerAdapter.html" title="class in org.springframework.security.config.annotation.web.configuration"><code>WebSecurityConfigurerAdapter</code></a>. The default is that accessing the URL
"/logout" will log the user out by invalidating the HTTP Session, cleaning up any
<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#rememberMe--"><code>rememberMe()</code></a> authentication that was configured, clearing the
<a href="../../../../../../../org/springframework/security/core/context/SecurityContextHolder.html" title="class in org.springframework.security.core.context"><code>SecurityContextHolder</code></a>, and then redirect to "/login?success".
<h2>Example Custom Configuration</h2>
The following customization to log out when the URL "/custom-logout" is invoked.
Log out will remove the cookie named "remove", not invalidate the HttpSession,
clear the SecurityContextHolder, and upon completion redirect to "/logout-success".
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class LogoutSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http
                        .authorizeRequests(authorizeRequests ->
                                authorizeRequests
                                        .antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;)
                        )
                        .formLogin(withDefaults())
                        // sample logout customization
                        .logout(logout ->
                                logout.deleteCookies(&quot;remove&quot;)
                                        .invalidateHttpSession(false)
                                        .logoutUrl(&quot;/custom-logout&quot;)
                                        .logoutSuccessUrl(&quot;/logout-success&quot;)
                        );
        }
 }
 </pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>logoutCustomizer</code> - the <a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config"><code>Customizer</code></a> to provide more options for
the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/LogoutConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>LogoutConfigurer</code></a></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
<a name="anonymous--">

</a>
<ul class="blockList">
<li class="blockList">
<h4>anonymous</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/AnonymousConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">AnonymousConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&nbsp;anonymous()
                                            throws java.lang.Exception</pre>
<div class="block">Allows configuring how an anonymous user is represented. This is automatically
applied when used in conjunction with <a href="../../../../../../../org/springframework/security/config/annotation/web/configuration/WebSecurityConfigurerAdapter.html" title="class in org.springframework.security.config.annotation.web.configuration"><code>WebSecurityConfigurerAdapter</code></a>. By
default anonymous users will be represented with an
<a href="../../../../../../../org/springframework/security/authentication/AnonymousAuthenticationToken.html" title="class in org.springframework.security.authentication"><code>AnonymousAuthenticationToken</code></a>
and contain the role "ROLE_ANONYMOUS".
<h2>Example Configuration</h2>
The following configuration demonstrates how to specify that anonymous users should
contain the role "ROLE_ANON" instead.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class AnonymousSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http
                        .authorizeRequests()
                                .antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;)
                                .and()
                        .formLogin()
                                .and()
                        // sample anonymous customization
                        .anonymous().authorities(&quot;ROLE_ANON&quot;);
        }

        &#064;Override
        protected void configure(AuthenticationManagerBuilder auth) throws Exception {
                auth.inMemoryAuthentication().withUser(&quot;user&quot;).password(&quot;password&quot;).roles(&quot;USER&quot;);
        }
 }
 </pre>
The following demonstrates how to represent anonymous users as null. Note that this
can cause <code>NullPointerException</code> in code that assumes anonymous
authentication is enabled.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class AnonymousSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http
                        .authorizeRequests()
                                .antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;)
                                .and()
                        .formLogin()
                                .and()
                        // sample anonymous customization
                        .anonymous().disable();
        }

        &#064;Override
        protected void configure(AuthenticationManagerBuilder auth) throws Exception {
                auth.inMemoryAuthentication().withUser(&quot;user&quot;).password(&quot;password&quot;).roles(&quot;USER&quot;);
        }
 }
 </pre></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/AnonymousConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>AnonymousConfigurer</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
<a name="anonymous-org.springframework.security.config.Customizer-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>anonymous</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;anonymous(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/AnonymousConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">AnonymousConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;anonymousCustomizer)
                       throws java.lang.Exception</pre>
<div class="block">Allows configuring how an anonymous user is represented. This is automatically
applied when used in conjunction with <a href="../../../../../../../org/springframework/security/config/annotation/web/configuration/WebSecurityConfigurerAdapter.html" title="class in org.springframework.security.config.annotation.web.configuration"><code>WebSecurityConfigurerAdapter</code></a>. By
default anonymous users will be represented with an
<a href="../../../../../../../org/springframework/security/authentication/AnonymousAuthenticationToken.html" title="class in org.springframework.security.authentication"><code>AnonymousAuthenticationToken</code></a>
and contain the role "ROLE_ANONYMOUS".
<h2>Example Configuration</h2>
The following configuration demonstrates how to specify that anonymous users should
contain the role "ROLE_ANON" instead.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class AnonymousSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http
                        .authorizeRequests(authorizeRequests ->
                                authorizeRequests
                                        .antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;)
                        )
                        .formLogin(withDefaults())
                        // sample anonymous customization
                        .anonymous(anonymous ->
                                anonymous
                                        .authorities(&quot;ROLE_ANON&quot;)
                        )
        }
 }
 </pre>
The following demonstrates how to represent anonymous users as null. Note that this
can cause <code>NullPointerException</code> in code that assumes anonymous
authentication is enabled.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class AnonymousSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http
                        .authorizeRequests(authorizeRequests ->
                                authorizeRequests
                                        .antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;)
                        )
                        .formLogin(withDefaults())
                        // sample anonymous customization
                        .anonymous(anonymous ->
                                anonymous.disable()
                        );
        }

        &#064;Override
        protected void configure(AuthenticationManagerBuilder auth) throws Exception {
                auth.inMemoryAuthentication().withUser(&quot;user&quot;).password(&quot;password&quot;).roles(&quot;USER&quot;);
        }
 }
 </pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>anonymousCustomizer</code> - the <a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config"><code>Customizer</code></a> to provide more options for
the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/AnonymousConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>AnonymousConfigurer</code></a></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
<a name="formLogin--">

</a>
<ul class="blockList">
<li class="blockList">
<h4>formLogin</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/FormLoginConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">FormLoginConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&nbsp;formLogin()
                                            throws java.lang.Exception</pre>
<div class="block">Specifies to support form based authentication. If
<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/FormLoginConfigurer.html#loginPage-java.lang.String-"><code>FormLoginConfigurer.loginPage(String)</code></a> is not specified a default login page
will be generated.
<h2>Example Configurations</h2>
The most basic configuration defaults to automatically generating a login page at
the URL "/login", redirecting to "/login?error" for authentication failure. The
details of the login page can be found on
<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/FormLoginConfigurer.html#loginPage-java.lang.String-"><code>FormLoginConfigurer.loginPage(String)</code></a>
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class FormLoginSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http.authorizeRequests().antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;).and().formLogin();
        }

        &#064;Override
        protected void configure(AuthenticationManagerBuilder auth) throws Exception {
                auth.inMemoryAuthentication().withUser(&quot;user&quot;).password(&quot;password&quot;).roles(&quot;USER&quot;);
        }
 }
 </pre>
The configuration below demonstrates customizing the defaults.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class FormLoginSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http.authorizeRequests().antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;).and().formLogin()
                                .usernameParameter(&quot;username&quot;) // default is username
                                .passwordParameter(&quot;password&quot;) // default is password
                                .loginPage(&quot;/authentication/login&quot;) // default is /login with an HTTP get
                                .failureUrl(&quot;/authentication/login?failed&quot;) // default is /login?error
                                .loginProcessingUrl(&quot;/authentication/login/process&quot;); // default is /login
                                                                                                                                                // with an HTTP
                                                                                                                                                // post
        }

        &#064;Override
        protected void configure(AuthenticationManagerBuilder auth) throws Exception {
                auth.inMemoryAuthentication().withUser(&quot;user&quot;).password(&quot;password&quot;).roles(&quot;USER&quot;);
        }
 }
 </pre></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/FormLoginConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>FormLoginConfigurer</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/FormLoginConfigurer.html#loginPage-java.lang.String-"><code>FormLoginConfigurer.loginPage(String)</code></a></dd>
</dl>
</li>
</ul>
<a name="formLogin-org.springframework.security.config.Customizer-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>formLogin</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;formLogin(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/FormLoginConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">FormLoginConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;formLoginCustomizer)
                       throws java.lang.Exception</pre>
<div class="block">Specifies to support form based authentication. If
<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/FormLoginConfigurer.html#loginPage-java.lang.String-"><code>FormLoginConfigurer.loginPage(String)</code></a> is not specified a default login page
will be generated.
<h2>Example Configurations</h2>
The most basic configuration defaults to automatically generating a login page at
the URL "/login", redirecting to "/login?error" for authentication failure. The
details of the login page can be found on
<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/FormLoginConfigurer.html#loginPage-java.lang.String-"><code>FormLoginConfigurer.loginPage(String)</code></a>
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class FormLoginSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http
                        .authorizeRequests(authorizeRequests ->
                                authorizeRequests
                                        .antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;)
                        )
                        .formLogin(withDefaults());
        }
 }
 </pre>
The configuration below demonstrates customizing the defaults.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class FormLoginSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http
                        .authorizeRequests(authorizeRequests ->
                                authorizeRequests
                                        .antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;)
                        )
                        .formLogin(formLogin ->
                                formLogin
                                        .usernameParameter(&quot;username&quot;)
                                        .passwordParameter(&quot;password&quot;)
                                        .loginPage(&quot;/authentication/login&quot;)
                                        .failureUrl(&quot;/authentication/login?failed&quot;)
                                        .loginProcessingUrl(&quot;/authentication/login/process&quot;)
                        );
        }
 }
 </pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>formLoginCustomizer</code> - the <a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config"><code>Customizer</code></a> to provide more options for
the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/FormLoginConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>FormLoginConfigurer</code></a></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/FormLoginConfigurer.html#loginPage-java.lang.String-"><code>FormLoginConfigurer.loginPage(String)</code></a></dd>
</dl>
</li>
</ul>
<a name="saml2Login--">

</a>
<ul class="blockList">
<li class="blockList">
<h4>saml2Login</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/saml2/Saml2LoginConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.saml2">Saml2LoginConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&nbsp;saml2Login()
                                              throws java.lang.Exception</pre>
<div class="block">Configures authentication support using an SAML 2.0 Service Provider.
<br>
<br>
The &quot;authentication flow&quot; is implemented using the <b>Web Browser SSO Profile, using POST and REDIRECT bindings</b>,
as documented in the <a target="_blank" href="https://docs.oasis-open.org/security/saml/">SAML V2.0 Core,Profiles and Bindings</a>
specifications.
<br>
<br>
As a prerequisite to using this feature, is that you have a SAML v2.0 Identity Provider to provide an assertion.
The representation of the Service Provider, the relying party, and the remote Identity Provider, the asserting party
is contained within <a href="../../../../../../../org/springframework/security/saml2/provider/service/registration/RelyingPartyRegistration.html" title="class in org.springframework.security.saml2.provider.service.registration"><code>RelyingPartyRegistration</code></a>.
<br>
<br>
<a href="../../../../../../../org/springframework/security/saml2/provider/service/registration/RelyingPartyRegistration.html" title="class in org.springframework.security.saml2.provider.service.registration"><code>RelyingPartyRegistration</code></a>(s) are composed within a
<a href="../../../../../../../org/springframework/security/saml2/provider/service/registration/RelyingPartyRegistrationRepository.html" title="interface in org.springframework.security.saml2.provider.service.registration"><code>RelyingPartyRegistrationRepository</code></a>,
which is <b>required</b> and must be registered with the <code>ApplicationContext</code> or
configured via <code>saml2Login().relyingPartyRegistrationRepository(..)</code>.
<br>
<br>
The default configuration provides an auto-generated login page at <code>&quot;/login&quot;</code> and
redirects to <code>&quot;/login?error&quot;</code> when an authentication error occurs.
The login page will display each of the identity providers with a link
that is capable of initiating the &quot;authentication flow&quot;.
<br>
<br>
<p>
<h2>Example Configuration</h2>
The following example shows the minimal configuration required, using SimpleSamlPhp as the Authentication Provider.
<pre> &#064;Configuration
 public class Saml2LoginConfig {

        &#064;EnableWebSecurity
        public static class OAuth2LoginSecurityConfig extends WebSecurityConfigurerAdapter {
                &#064;Override
                protected void configure(HttpSecurity http) throws Exception {
                        http
                                .authorizeRequests()
                                        .anyRequest().authenticated()
                                        .and()
                                  .saml2Login();
                }
        }

        &#064;Bean
        public RelyingPartyRegistrationRepository relyingPartyRegistrationRepository() {
                return new InMemoryRelyingPartyRegistrationRepository(this.getSaml2RelyingPartyRegistration());
        }

        private RelyingPartyRegistration getSaml2RelyingPartyRegistration() {
                //remote IDP entity ID
                String idpEntityId = "https://simplesaml-for-spring-saml.cfapps.io/saml2/idp/metadata.php";
                //remote WebSSO Endpoint - Where to Send AuthNRequests to
                String webSsoEndpoint = "https://simplesaml-for-spring-saml.cfapps.io/saml2/idp/SSOService.php";
                //local registration ID
                String registrationId = "simplesamlphp";
                //local entity ID - autogenerated based on URL
                String localEntityIdTemplate = "{baseUrl}/saml2/service-provider-metadata/{registrationId}";
                //local signing (and decryption key)
                Saml2X509Credential signingCredential = getSigningCredential();
                //IDP certificate for verification of incoming messages
                Saml2X509Credential idpVerificationCertificate = getVerificationCertificate();
                return RelyingPartyRegistration.withRegistrationId(registrationId)
  *                             .remoteIdpEntityId(idpEntityId)
  *                             .idpWebSsoUrl(webSsoEndpoint)
  *                             .credential(signingCredential)
  *                             .credential(idpVerificationCertificate)
  *                             .localEntityIdTemplate(localEntityIdTemplate)
  *                             .build();
        }
 }
 </pre>
<p></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/saml2/Saml2LoginConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.saml2"><code>Saml2LoginConfigurer</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>5.2</dd>
</dl>
</li>
</ul>
<a name="saml2Login-org.springframework.security.config.Customizer-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>saml2Login</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;saml2Login(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/saml2/Saml2LoginConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.saml2">Saml2LoginConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;saml2LoginCustomizer)
                        throws java.lang.Exception</pre>
<div class="block">Configures authentication support using an SAML 2.0 Service Provider.
<br>
<br>
The &quot;authentication flow&quot; is implemented using the <b>Web Browser SSO Profile, using POST and REDIRECT bindings</b>,
as documented in the <a target="_blank" href="https://docs.oasis-open.org/security/saml/">SAML V2.0 Core,Profiles and Bindings</a>
specifications.
<br>
<br>
As a prerequisite to using this feature, is that you have a SAML v2.0 Identity Provider to provide an assertion.
The representation of the Service Provider, the relying party, and the remote Identity Provider, the asserting party
is contained within <a href="../../../../../../../org/springframework/security/saml2/provider/service/registration/RelyingPartyRegistration.html" title="class in org.springframework.security.saml2.provider.service.registration"><code>RelyingPartyRegistration</code></a>.
<br>
<br>
<a href="../../../../../../../org/springframework/security/saml2/provider/service/registration/RelyingPartyRegistration.html" title="class in org.springframework.security.saml2.provider.service.registration"><code>RelyingPartyRegistration</code></a>(s) are composed within a
<a href="../../../../../../../org/springframework/security/saml2/provider/service/registration/RelyingPartyRegistrationRepository.html" title="interface in org.springframework.security.saml2.provider.service.registration"><code>RelyingPartyRegistrationRepository</code></a>,
which is <b>required</b> and must be registered with the <code>ApplicationContext</code> or
configured via <code>saml2Login().relyingPartyRegistrationRepository(..)</code>.
<br>
<br>
The default configuration provides an auto-generated login page at <code>&quot;/login&quot;</code> and
redirects to <code>&quot;/login?error&quot;</code> when an authentication error occurs.
The login page will display each of the identity providers with a link
that is capable of initiating the &quot;authentication flow&quot;.
<br>
<br>
<p>
<h2>Example Configuration</h2>
The following example shows the minimal configuration required, using SimpleSamlPhp as the Authentication Provider.
<pre> &#064;Configuration
 public class Saml2LoginConfig {

        &#064;EnableWebSecurity
        public static class OAuth2LoginSecurityConfig extends WebSecurityConfigurerAdapter {
                &#064;Override
                protected void configure(HttpSecurity http) throws Exception {
                        http
                                .authorizeRequests()
                                        .anyRequest().authenticated()
                                        .and()
                                  .saml2Login(withDefaults());
                }
        }

        &#064;Bean
        public RelyingPartyRegistrationRepository relyingPartyRegistrationRepository() {
                return new InMemoryRelyingPartyRegistrationRepository(this.getSaml2RelyingPartyRegistration());
        }

        private RelyingPartyRegistration getSaml2RelyingPartyRegistration() {
                //remote IDP entity ID
                String idpEntityId = "https://simplesaml-for-spring-saml.cfapps.io/saml2/idp/metadata.php";
                //remote WebSSO Endpoint - Where to Send AuthNRequests to
                String webSsoEndpoint = "https://simplesaml-for-spring-saml.cfapps.io/saml2/idp/SSOService.php";
                //local registration ID
                String registrationId = "simplesamlphp";
                //local entity ID - autogenerated based on URL
                String localEntityIdTemplate = "{baseUrl}/saml2/service-provider-metadata/{registrationId}";
                //local signing (and decryption key)
                Saml2X509Credential signingCredential = getSigningCredential();
                //IDP certificate for verification of incoming messages
                Saml2X509Credential idpVerificationCertificate = getVerificationCertificate();
                return RelyingPartyRegistration.withRegistrationId(registrationId)
  *                             .remoteIdpEntityId(idpEntityId)
  *                             .idpWebSsoUrl(webSsoEndpoint)
  *                             .credential(signingCredential)
  *                             .credential(idpVerificationCertificate)
  *                             .localEntityIdTemplate(localEntityIdTemplate)
  *                             .build();
        }
 }
 </pre>
<p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>saml2LoginCustomizer</code> - the <a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config"><code>Customizer</code></a> to provide more options for
the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/saml2/Saml2LoginConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.saml2"><code>Saml2LoginConfigurer</code></a></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>5.2</dd>
</dl>
</li>
</ul>
<a name="oauth2Login--">

</a>
<ul class="blockList">
<li class="blockList">
<h4>oauth2Login</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.oauth2.client">OAuth2LoginConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&nbsp;oauth2Login()
                                                throws java.lang.Exception</pre>
<div class="block">Configures authentication support using an OAuth 2.0 and/or OpenID Connect 1.0 Provider.
<br>
<br>
The &quot;authentication flow&quot; is implemented using the <b>Authorization Code Grant</b>, as specified in the
<a target="_blank" href="https://tools.ietf.org/html/rfc6749#section-4.1">OAuth 2.0 Authorization Framework</a>
and <a target="_blank" href="https://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth">OpenID Connect Core 1.0</a>
specification.
<br>
<br>
As a prerequisite to using this feature, you must register a client with a provider.
The client registration information may than be used for configuring
a <a href="../../../../../../../org/springframework/security/oauth2/client/registration/ClientRegistration.html" title="class in org.springframework.security.oauth2.client.registration"><code>ClientRegistration</code></a> using a
<a href="../../../../../../../org/springframework/security/oauth2/client/registration/ClientRegistration.Builder.html" title="class in org.springframework.security.oauth2.client.registration"><code>ClientRegistration.Builder</code></a>.
<br>
<br>
<a href="../../../../../../../org/springframework/security/oauth2/client/registration/ClientRegistration.html" title="class in org.springframework.security.oauth2.client.registration"><code>ClientRegistration</code></a>(s) are composed within a
<a href="../../../../../../../org/springframework/security/oauth2/client/registration/ClientRegistrationRepository.html" title="interface in org.springframework.security.oauth2.client.registration"><code>ClientRegistrationRepository</code></a>,
which is <b>required</b> and must be registered with the <code>ApplicationContext</code> or
configured via <code>oauth2Login().clientRegistrationRepository(..)</code>.
<br>
<br>
The default configuration provides an auto-generated login page at <code>&quot;/login&quot;</code> and
redirects to <code>&quot;/login?error&quot;</code> when an authentication error occurs.
The login page will display each of the clients with a link
that is capable of initiating the &quot;authentication flow&quot;.
<br>
<br>
<p>
<h2>Example Configuration</h2>
The following example shows the minimal configuration required, using Google as the Authentication Provider.
<pre> &#064;Configuration
 public class OAuth2LoginConfig {

        &#064;EnableWebSecurity
        public static class OAuth2LoginSecurityConfig extends WebSecurityConfigurerAdapter {
                &#064;Override
                protected void configure(HttpSecurity http) throws Exception {
                        http
                                .authorizeRequests()
                                        .anyRequest().authenticated()
                                        .and()
                                  .oauth2Login();
                }
        }

        &#064;Bean
        public ClientRegistrationRepository clientRegistrationRepository() {
                return new InMemoryClientRegistrationRepository(this.googleClientRegistration());
        }

        private ClientRegistration googleClientRegistration() {
                return ClientRegistration.withRegistrationId("google")
                        .clientId("google-client-id")
                        .clientSecret("google-client-secret")
                        .clientAuthenticationMethod(ClientAuthenticationMethod.BASIC)
                        .authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE)
                        .redirectUriTemplate("{baseUrl}/login/oauth2/code/{registrationId}")
                        .scope("openid", "profile", "email", "address", "phone")
                        .authorizationUri("https://accounts.google.com/o/oauth2/v2/auth")
                        .tokenUri("https://www.googleapis.com/oauth2/v4/token")
                        .userInfoUri("https://www.googleapis.com/oauth2/v3/userinfo")
                        .userNameAttributeName(IdTokenClaimNames.SUB)
                        .jwkSetUri("https://www.googleapis.com/oauth2/v3/certs")
                        .clientName("Google")
                        .build();
        }
 }
 </pre>
<p>
For more advanced configuration, see <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.oauth2.client"><code>OAuth2LoginConfigurer</code></a> for available options to customize the defaults.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.oauth2.client"><code>OAuth2LoginConfigurer</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>5.0</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a target="_blank" href="https://tools.ietf.org/html/rfc6749#section-4.1">Section 4.1 Authorization Code Grant</a>,
<a target="_blank" href="https://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth">Section 3.1 Authorization Code Flow</a>,
<a href="../../../../../../../org/springframework/security/oauth2/client/registration/ClientRegistration.html" title="class in org.springframework.security.oauth2.client.registration"><code>ClientRegistration</code></a>,
<a href="../../../../../../../org/springframework/security/oauth2/client/registration/ClientRegistrationRepository.html" title="interface in org.springframework.security.oauth2.client.registration"><code>ClientRegistrationRepository</code></a></dd>
</dl>
</li>
</ul>
<a name="oauth2Login-org.springframework.security.config.Customizer-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>oauth2Login</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;oauth2Login(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.oauth2.client">OAuth2LoginConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;oauth2LoginCustomizer)
                         throws java.lang.Exception</pre>
<div class="block">Configures authentication support using an OAuth 2.0 and/or OpenID Connect 1.0 Provider.
<br>
<br>
The &quot;authentication flow&quot; is implemented using the <b>Authorization Code Grant</b>, as specified in the
<a target="_blank" href="https://tools.ietf.org/html/rfc6749#section-4.1">OAuth 2.0 Authorization Framework</a>
and <a target="_blank" href="https://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth">OpenID Connect Core 1.0</a>
specification.
<br>
<br>
As a prerequisite to using this feature, you must register a client with a provider.
The client registration information may than be used for configuring
a <a href="../../../../../../../org/springframework/security/oauth2/client/registration/ClientRegistration.html" title="class in org.springframework.security.oauth2.client.registration"><code>ClientRegistration</code></a> using a
<a href="../../../../../../../org/springframework/security/oauth2/client/registration/ClientRegistration.Builder.html" title="class in org.springframework.security.oauth2.client.registration"><code>ClientRegistration.Builder</code></a>.
<br>
<br>
<a href="../../../../../../../org/springframework/security/oauth2/client/registration/ClientRegistration.html" title="class in org.springframework.security.oauth2.client.registration"><code>ClientRegistration</code></a>(s) are composed within a
<a href="../../../../../../../org/springframework/security/oauth2/client/registration/ClientRegistrationRepository.html" title="interface in org.springframework.security.oauth2.client.registration"><code>ClientRegistrationRepository</code></a>,
which is <b>required</b> and must be registered with the <code>ApplicationContext</code> or
configured via <code>oauth2Login().clientRegistrationRepository(..)</code>.
<br>
<br>
The default configuration provides an auto-generated login page at <code>&quot;/login&quot;</code> and
redirects to <code>&quot;/login?error&quot;</code> when an authentication error occurs.
The login page will display each of the clients with a link
that is capable of initiating the &quot;authentication flow&quot;.
<br>
<br>
<p>
<h2>Example Configuration</h2>
The following example shows the minimal configuration required, using Google as the Authentication Provider.
<pre> &#064;Configuration
 public class OAuth2LoginConfig {

        &#064;EnableWebSecurity
        public static class OAuth2LoginSecurityConfig extends WebSecurityConfigurerAdapter {
                &#064;Override
                protected void configure(HttpSecurity http) throws Exception {
                        http
                                .authorizeRequests(authorizeRequests ->
                                        authorizeRequests
                                                .anyRequest().authenticated()
                                )
                                .oauth2Login(withDefaults());
                }
        }

        &#064;Bean
        public ClientRegistrationRepository clientRegistrationRepository() {
                return new InMemoryClientRegistrationRepository(this.googleClientRegistration());
        }

        private ClientRegistration googleClientRegistration() {
                return ClientRegistration.withRegistrationId("google")
                        .clientId("google-client-id")
                        .clientSecret("google-client-secret")
                        .clientAuthenticationMethod(ClientAuthenticationMethod.BASIC)
                        .authorizationGrantType(AuthorizationGrantType.AUTHORIZATION_CODE)
                        .redirectUriTemplate("{baseUrl}/login/oauth2/code/{registrationId}")
                        .scope("openid", "profile", "email", "address", "phone")
                        .authorizationUri("https://accounts.google.com/o/oauth2/v2/auth")
                        .tokenUri("https://www.googleapis.com/oauth2/v4/token")
                        .userInfoUri("https://www.googleapis.com/oauth2/v3/userinfo")
                        .userNameAttributeName(IdTokenClaimNames.SUB)
                        .jwkSetUri("https://www.googleapis.com/oauth2/v3/certs")
                        .clientName("Google")
                        .build();
        }
 }
 </pre>
<p>
For more advanced configuration, see <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.oauth2.client"><code>OAuth2LoginConfigurer</code></a> for available options to customize the defaults.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>oauth2LoginCustomizer</code> - the <a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config"><code>Customizer</code></a> to provide more options for
the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2LoginConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.oauth2.client"><code>OAuth2LoginConfigurer</code></a></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a target="_blank" href="https://tools.ietf.org/html/rfc6749#section-4.1">Section 4.1 Authorization Code Grant</a>,
<a target="_blank" href="https://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth">Section 3.1 Authorization Code Flow</a>,
<a href="../../../../../../../org/springframework/security/oauth2/client/registration/ClientRegistration.html" title="class in org.springframework.security.oauth2.client.registration"><code>ClientRegistration</code></a>,
<a href="../../../../../../../org/springframework/security/oauth2/client/registration/ClientRegistrationRepository.html" title="interface in org.springframework.security.oauth2.client.registration"><code>ClientRegistrationRepository</code></a></dd>
</dl>
</li>
</ul>
<a name="oauth2Client--">

</a>
<ul class="blockList">
<li class="blockList">
<h4>oauth2Client</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2ClientConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.oauth2.client">OAuth2ClientConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&nbsp;oauth2Client()
                                                  throws java.lang.Exception</pre>
<div class="block">Configures OAuth 2.0 Client support.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2ClientConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.oauth2.client"><code>OAuth2ClientConfigurer</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>5.1</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a target="_blank" href="https://tools.ietf.org/html/rfc6749#section-1.1">OAuth 2.0 Authorization Framework</a></dd>
</dl>
</li>
</ul>
<a name="oauth2Client-org.springframework.security.config.Customizer-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>oauth2Client</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;oauth2Client(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2ClientConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.oauth2.client">OAuth2ClientConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;oauth2ClientCustomizer)
                          throws java.lang.Exception</pre>
<div class="block">Configures OAuth 2.0 Client support.
<h2>Example Configuration</h2>
The following example demonstrates how to enable OAuth 2.0 Client support for all endpoints.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class OAuth2ClientSecurityConfig extends WebSecurityConfigurerAdapter {
        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http
                        .authorizeRequests(authorizeRequests ->
                                authorizeRequests
                                        .anyRequest().authenticated()
                        )
                        .oauth2Client(withDefaults());
        }
 }
 </pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>oauth2ClientCustomizer</code> - the <a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config"><code>Customizer</code></a> to provide more options for
the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/oauth2/client/OAuth2ClientConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.oauth2.client"><code>OAuth2ClientConfigurer</code></a></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a target="_blank" href="https://tools.ietf.org/html/rfc6749#section-1.1">OAuth 2.0 Authorization Framework</a></dd>
</dl>
</li>
</ul>
<a name="oauth2ResourceServer--">

</a>
<ul class="blockList">
<li class="blockList">
<h4>oauth2ResourceServer</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.oauth2.server.resource">OAuth2ResourceServerConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&nbsp;oauth2ResourceServer()
                                                                  throws java.lang.Exception</pre>
<div class="block">Configures OAuth 2.0 Resource Server support.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.oauth2.server.resource"><code>OAuth2ResourceServerConfigurer</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
<dt><span class="simpleTagLabel">Since:</span></dt>
<dd>5.1</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a target="_blank" href="https://tools.ietf.org/html/rfc6749#section-1.1">OAuth 2.0 Authorization Framework</a></dd>
</dl>
</li>
</ul>
<a name="oauth2ResourceServer-org.springframework.security.config.Customizer-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>oauth2ResourceServer</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;oauth2ResourceServer(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.oauth2.server.resource">OAuth2ResourceServerConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;oauth2ResourceServerCustomizer)
                                  throws java.lang.Exception</pre>
<div class="block">Configures OAuth 2.0 Resource Server support.
<h2>Example Configuration</h2>
The following example demonstrates how to configure a custom JWT authentication converter.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class OAuth2ClientSecurityConfig extends WebSecurityConfigurerAdapter {

 &#064;Value("${spring.security.oauth2.resourceserver.jwt.key-value}")
 RSAPublicKey key;

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http
                        .authorizeRequests(authorizeRequests ->
                                authorizeRequests
                                        .anyRequest().authenticated()
                        )
                        .oauth2ResourceServer(oauth2ResourceServer ->
                                oauth2ResourceServer
                                        .jwt(jwt ->
                                                jwt
                                                        .decoder(jwtDecoder())
                                        )
                        );
        }

        &#064;Bean
        public JwtDecoder jwtDecoder() {
                return NimbusJwtDecoder.withPublicKey(this.key).build();
        }
 }
 </pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>oauth2ResourceServerCustomizer</code> - the <a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config"><code>Customizer</code></a> to provide more options for
the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/oauth2/server/resource/OAuth2ResourceServerConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers.oauth2.server.resource"><code>OAuth2ResourceServerConfigurer</code></a></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a target="_blank" href="https://tools.ietf.org/html/rfc6749#section-1.1">OAuth 2.0 Authorization Framework</a></dd>
</dl>
</li>
</ul>
<a name="requiresChannel--">

</a>
<ul class="blockList">
<li class="blockList">
<h4>requiresChannel</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer.ChannelRequestMatcherRegistry.html" title="class in org.springframework.security.config.annotation.web.configurers">ChannelSecurityConfigurer.ChannelRequestMatcherRegistry</a>&nbsp;requiresChannel()
                                                                        throws java.lang.Exception</pre>
<div class="block">Configures channel security. In order for this configuration to be useful at least
one mapping to a required channel must be provided.
<h2>Example Configuration</h2>
The example below demonstrates how to require HTTPs for every request. Only
requiring HTTPS for some requests is supported, but not recommended since an
application that allows for HTTP introduces many security vulnerabilities. For one
such example, read about <a href="https://en.wikipedia.org/wiki/Firesheep">Firesheep</a>.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class ChannelSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http.authorizeRequests().antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;).and().formLogin()
                                .and().requiresChannel().anyRequest().requiresSecure();
        }

        &#064;Override
        protected void configure(AuthenticationManagerBuilder auth) throws Exception {
                auth.inMemoryAuthentication().withUser(&quot;user&quot;).password(&quot;password&quot;).roles(&quot;USER&quot;);
        }
 }
 </pre></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>ChannelSecurityConfigurer</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
<a name="requiresChannel-org.springframework.security.config.Customizer-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>requiresChannel</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;requiresChannel(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/ChannelSecurityConfigurer.ChannelRequestMatcherRegistry.html" title="class in org.springframework.security.config.annotation.web.configurers">ChannelSecurityConfigurer.ChannelRequestMatcherRegistry</a>&gt;&nbsp;requiresChannelCustomizer)
                             throws java.lang.Exception</pre>
<div class="block">Configures channel security. In order for this configuration to be useful at least
one mapping to a required channel must be provided.
<h2>Example Configuration</h2>
The example below demonstrates how to require HTTPs for every request. Only
requiring HTTPS for some requests is supported, but not recommended since an
application that allows for HTTP introduces many security vulnerabilities. For one
such example, read about <a href="https://en.wikipedia.org/wiki/Firesheep">Firesheep</a>.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class ChannelSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http
                        .authorizeRequests(authorizeRequests ->
                                authorizeRequests
                                        .antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;)
                        )
                        .formLogin(withDefaults())
                        .requiresChannel(requiresChannel ->
                                requiresChannel
                                        .anyRequest().requiresSecure()
                        );
        }
 }
 </pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>requiresChannelCustomizer</code> - the <a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config"><code>Customizer</code></a> to provide more options for
the <code>ChannelSecurityConfigurer.ChannelRequestMatcherRegistry</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
<a name="httpBasic--">

</a>
<ul class="blockList">
<li class="blockList">
<h4>httpBasic</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/HttpBasicConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">HttpBasicConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&nbsp;httpBasic()
                                            throws java.lang.Exception</pre>
<div class="block">Configures HTTP Basic authentication.
<h2>Example Configuration</h2>
The example below demonstrates how to configure HTTP Basic authentication for an
application. The default realm is "Realm", but can be
customized using <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/HttpBasicConfigurer.html#realmName-java.lang.String-"><code>HttpBasicConfigurer.realmName(String)</code></a>.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class HttpBasicSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http.authorizeRequests().antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;).and().httpBasic();
        }

        &#064;Override
        protected void configure(AuthenticationManagerBuilder auth) throws Exception {
                auth.inMemoryAuthentication().withUser(&quot;user&quot;).password(&quot;password&quot;).roles(&quot;USER&quot;);
        }
 }
 </pre></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/HttpBasicConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>HttpBasicConfigurer</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
<a name="httpBasic-org.springframework.security.config.Customizer-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>httpBasic</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;httpBasic(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/HttpBasicConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers">HttpBasicConfigurer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;&gt;&nbsp;httpBasicCustomizer)
                       throws java.lang.Exception</pre>
<div class="block">Configures HTTP Basic authentication.
<h2>Example Configuration</h2>
The example below demonstrates how to configure HTTP Basic authentication for an
application. The default realm is "Realm", but can be
customized using <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/HttpBasicConfigurer.html#realmName-java.lang.String-"><code>HttpBasicConfigurer.realmName(String)</code></a>.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class HttpBasicSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http
                        .authorizeRequests(authorizeRequests ->
                                authorizeRequests
                                        .antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;)
                        )
                        .httpBasic(withDefaults());
        }
 }
 </pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>httpBasicCustomizer</code> - the <a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config"><code>Customizer</code></a> to provide more options for
the <a href="../../../../../../../org/springframework/security/config/annotation/web/configurers/HttpBasicConfigurer.html" title="class in org.springframework.security.config.annotation.web.configurers"><code>HttpBasicConfigurer</code></a></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
<a name="setSharedObject-java.lang.Class-java.lang.Object-">

</a><a name="setSharedObject-java.lang.Class-C-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>setSharedObject</h4>
<pre>public&nbsp;&lt;C&gt;&nbsp;void&nbsp;setSharedObject(java.lang.Class&lt;C&gt;&nbsp;sharedType,
                                C&nbsp;object)</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from class:&nbsp;<code><a href="../../../../../../../org/springframework/security/config/annotation/AbstractConfiguredSecurityBuilder.html#setSharedObject-java.lang.Class-C-">AbstractConfiguredSecurityBuilder</a></code></span></div>
<div class="block">Sets an object that is shared by multiple <a href="../../../../../../../org/springframework/security/config/annotation/SecurityConfigurer.html" title="interface in org.springframework.security.config.annotation"><code>SecurityConfigurer</code></a>.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../../../../../../../org/springframework/security/config/annotation/web/HttpSecurityBuilder.html#setSharedObject-java.lang.Class-C-">setSharedObject</a></code>&nbsp;in interface&nbsp;<code><a href="../../../../../../../org/springframework/security/config/annotation/web/HttpSecurityBuilder.html" title="interface in org.springframework.security.config.annotation.web">HttpSecurityBuilder</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</code></dd>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code><a href="../../../../../../../org/springframework/security/config/annotation/AbstractConfiguredSecurityBuilder.html#setSharedObject-java.lang.Class-C-">setSharedObject</a></code>&nbsp;in class&nbsp;<code><a href="../../../../../../../org/springframework/security/config/annotation/AbstractConfiguredSecurityBuilder.html" title="class in org.springframework.security.config.annotation">AbstractConfiguredSecurityBuilder</a>&lt;<a href="../../../../../../../org/springframework/security/web/DefaultSecurityFilterChain.html" title="class in org.springframework.security.web">DefaultSecurityFilterChain</a>,<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>sharedType</code> - the Class to key the shared object by.</dd>
<dd><code>object</code> - the Object to store</dd>
</dl>
</li>
</ul>
<a name="beforeConfigure--">

</a>
<ul class="blockList">
<li class="blockList">
<h4>beforeConfigure</h4>
<pre>protected&nbsp;void&nbsp;beforeConfigure()
                        throws java.lang.Exception</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from class:&nbsp;<code><a href="../../../../../../../org/springframework/security/config/annotation/AbstractConfiguredSecurityBuilder.html#beforeConfigure--">AbstractConfiguredSecurityBuilder</a></code></span></div>
<div class="block">Invoked prior to invoking each
<a href="../../../../../../../org/springframework/security/config/annotation/SecurityConfigurer.html#configure-B-"><code>SecurityConfigurer.configure(SecurityBuilder)</code></a> method. Subclasses may
override this method to hook into the lifecycle without using a
<a href="../../../../../../../org/springframework/security/config/annotation/SecurityConfigurer.html" title="interface in org.springframework.security.config.annotation"><code>SecurityConfigurer</code></a>.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code><a href="../../../../../../../org/springframework/security/config/annotation/AbstractConfiguredSecurityBuilder.html#beforeConfigure--">beforeConfigure</a></code>&nbsp;in class&nbsp;<code><a href="../../../../../../../org/springframework/security/config/annotation/AbstractConfiguredSecurityBuilder.html" title="class in org.springframework.security.config.annotation">AbstractConfiguredSecurityBuilder</a>&lt;<a href="../../../../../../../org/springframework/security/web/DefaultSecurityFilterChain.html" title="class in org.springframework.security.web">DefaultSecurityFilterChain</a>,<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</code></dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
<a name="performBuild--">

</a>
<ul class="blockList">
<li class="blockList">
<h4>performBuild</h4>
<pre>protected&nbsp;<a href="../../../../../../../org/springframework/security/web/DefaultSecurityFilterChain.html" title="class in org.springframework.security.web">DefaultSecurityFilterChain</a>&nbsp;performBuild()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from class:&nbsp;<code><a href="../../../../../../../org/springframework/security/config/annotation/AbstractConfiguredSecurityBuilder.html#performBuild--">AbstractConfiguredSecurityBuilder</a></code></span></div>
<div class="block">Subclasses must implement this method to build the object that is being returned.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../../../../../../../org/springframework/security/config/annotation/AbstractConfiguredSecurityBuilder.html#performBuild--">performBuild</a></code>&nbsp;in class&nbsp;<code><a href="../../../../../../../org/springframework/security/config/annotation/AbstractConfiguredSecurityBuilder.html" title="class in org.springframework.security.config.annotation">AbstractConfiguredSecurityBuilder</a>&lt;<a href="../../../../../../../org/springframework/security/web/DefaultSecurityFilterChain.html" title="class in org.springframework.security.web">DefaultSecurityFilterChain</a>,<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the Object to be buit or null if the implementation allows it</dd>
</dl>
</li>
</ul>
<a name="authenticationProvider-org.springframework.security.authentication.AuthenticationProvider-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>authenticationProvider</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;authenticationProvider(<a href="../../../../../../../org/springframework/security/authentication/AuthenticationProvider.html" title="interface in org.springframework.security.authentication">AuthenticationProvider</a>&nbsp;authenticationProvider)</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../../../../../../../org/springframework/security/config/annotation/web/HttpSecurityBuilder.html#authenticationProvider-org.springframework.security.authentication.AuthenticationProvider-">HttpSecurityBuilder</a></code></span></div>
<div class="block">Allows adding an additional <a href="../../../../../../../org/springframework/security/authentication/AuthenticationProvider.html" title="interface in org.springframework.security.authentication"><code>AuthenticationProvider</code></a> to be used</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../../../../../../../org/springframework/security/config/annotation/web/HttpSecurityBuilder.html#authenticationProvider-org.springframework.security.authentication.AuthenticationProvider-">authenticationProvider</a></code>&nbsp;in interface&nbsp;<code><a href="../../../../../../../org/springframework/security/config/annotation/web/HttpSecurityBuilder.html" title="interface in org.springframework.security.config.annotation.web">HttpSecurityBuilder</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>authenticationProvider</code> - the <a href="../../../../../../../org/springframework/security/authentication/AuthenticationProvider.html" title="interface in org.springframework.security.authentication"><code>AuthenticationProvider</code></a> to be added</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
</dl>
</li>
</ul>
<a name="userDetailsService-org.springframework.security.core.userdetails.UserDetailsService-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>userDetailsService</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;userDetailsService(<a href="../../../../../../../org/springframework/security/core/userdetails/UserDetailsService.html" title="interface in org.springframework.security.core.userdetails">UserDetailsService</a>&nbsp;userDetailsService)
                                throws java.lang.Exception</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../../../../../../../org/springframework/security/config/annotation/web/HttpSecurityBuilder.html#userDetailsService-org.springframework.security.core.userdetails.UserDetailsService-">HttpSecurityBuilder</a></code></span></div>
<div class="block">Allows adding an additional <a href="../../../../../../../org/springframework/security/core/userdetails/UserDetailsService.html" title="interface in org.springframework.security.core.userdetails"><code>UserDetailsService</code></a> to be used</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../../../../../../../org/springframework/security/config/annotation/web/HttpSecurityBuilder.html#userDetailsService-org.springframework.security.core.userdetails.UserDetailsService-">userDetailsService</a></code>&nbsp;in interface&nbsp;<code><a href="../../../../../../../org/springframework/security/config/annotation/web/HttpSecurityBuilder.html" title="interface in org.springframework.security.config.annotation.web">HttpSecurityBuilder</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>userDetailsService</code> - the <a href="../../../../../../../org/springframework/security/core/userdetails/UserDetailsService.html" title="interface in org.springframework.security.core.userdetails"><code>UserDetailsService</code></a> to be added</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.Exception</code></dd>
</dl>
</li>
</ul>
<a name="addFilterAfter-javax.servlet.Filter-java.lang.Class-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>addFilterAfter</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;addFilterAfter(javax.servlet.Filter&nbsp;filter,
                                   java.lang.Class&lt;? extends javax.servlet.Filter&gt;&nbsp;afterFilter)</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../../../../../../../org/springframework/security/config/annotation/web/HttpSecurityBuilder.html#addFilterAfter-javax.servlet.Filter-java.lang.Class-">HttpSecurityBuilder</a></code></span></div>
<div class="block">Allows adding a <code>Filter</code> after one of the known <code>Filter</code> classes. The
known <code>Filter</code> instances are either a <code>Filter</code> listed in
<a href="../../../../../../../org/springframework/security/config/annotation/web/HttpSecurityBuilder.html#addFilter-javax.servlet.Filter-"><code>HttpSecurityBuilder.addFilter(Filter)</code></a> or a <code>Filter</code> that has already been added using
<a href="../../../../../../../org/springframework/security/config/annotation/web/HttpSecurityBuilder.html#addFilterAfter-javax.servlet.Filter-java.lang.Class-"><code>HttpSecurityBuilder.addFilterAfter(Filter, Class)</code></a> or <a href="../../../../../../../org/springframework/security/config/annotation/web/HttpSecurityBuilder.html#addFilterBefore-javax.servlet.Filter-java.lang.Class-"><code>HttpSecurityBuilder.addFilterBefore(Filter, Class)</code></a>.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../../../../../../../org/springframework/security/config/annotation/web/HttpSecurityBuilder.html#addFilterAfter-javax.servlet.Filter-java.lang.Class-">addFilterAfter</a></code>&nbsp;in interface&nbsp;<code><a href="../../../../../../../org/springframework/security/config/annotation/web/HttpSecurityBuilder.html" title="interface in org.springframework.security.config.annotation.web">HttpSecurityBuilder</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>filter</code> - the <code>Filter</code> to register after the type <code>afterFilter</code></dd>
<dd><code>afterFilter</code> - the Class of the known <code>Filter</code>.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
</dl>
</li>
</ul>
<a name="addFilterBefore-javax.servlet.Filter-java.lang.Class-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>addFilterBefore</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;addFilterBefore(javax.servlet.Filter&nbsp;filter,
                                    java.lang.Class&lt;? extends javax.servlet.Filter&gt;&nbsp;beforeFilter)</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../../../../../../../org/springframework/security/config/annotation/web/HttpSecurityBuilder.html#addFilterBefore-javax.servlet.Filter-java.lang.Class-">HttpSecurityBuilder</a></code></span></div>
<div class="block">Allows adding a <code>Filter</code> before one of the known <code>Filter</code> classes. The
known <code>Filter</code> instances are either a <code>Filter</code> listed in
<a href="../../../../../../../org/springframework/security/config/annotation/web/HttpSecurityBuilder.html#addFilter-javax.servlet.Filter-"><code>HttpSecurityBuilder.addFilter(Filter)</code></a> or a <code>Filter</code> that has already been added using
<a href="../../../../../../../org/springframework/security/config/annotation/web/HttpSecurityBuilder.html#addFilterAfter-javax.servlet.Filter-java.lang.Class-"><code>HttpSecurityBuilder.addFilterAfter(Filter, Class)</code></a> or <a href="../../../../../../../org/springframework/security/config/annotation/web/HttpSecurityBuilder.html#addFilterBefore-javax.servlet.Filter-java.lang.Class-"><code>HttpSecurityBuilder.addFilterBefore(Filter, Class)</code></a>.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../../../../../../../org/springframework/security/config/annotation/web/HttpSecurityBuilder.html#addFilterBefore-javax.servlet.Filter-java.lang.Class-">addFilterBefore</a></code>&nbsp;in interface&nbsp;<code><a href="../../../../../../../org/springframework/security/config/annotation/web/HttpSecurityBuilder.html" title="interface in org.springframework.security.config.annotation.web">HttpSecurityBuilder</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>filter</code> - the <code>Filter</code> to register before the type <code>beforeFilter</code></dd>
<dd><code>beforeFilter</code> - the Class of the known <code>Filter</code>.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
</dl>
</li>
</ul>
<a name="addFilter-javax.servlet.Filter-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>addFilter</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;addFilter(javax.servlet.Filter&nbsp;filter)</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code><a href="../../../../../../../org/springframework/security/config/annotation/web/HttpSecurityBuilder.html#addFilter-javax.servlet.Filter-">HttpSecurityBuilder</a></code></span></div>
<div class="block">Adds a <code>Filter</code> that must be an instance of or extend one of the Filters
provided within the Security framework. The method ensures that the ordering of the
Filters is automatically taken care of.
The ordering of the Filters is:
<ul>
<li><a href="../../../../../../../org/springframework/security/web/access/channel/ChannelProcessingFilter.html" title="class in org.springframework.security.web.access.channel"><code>ChannelProcessingFilter</code></a></li>
<li><a href="../../../../../../../org/springframework/security/web/session/ConcurrentSessionFilter.html" title="class in org.springframework.security.web.session"><code>ConcurrentSessionFilter</code></a></li>
<li><a href="../../../../../../../org/springframework/security/web/context/SecurityContextPersistenceFilter.html" title="class in org.springframework.security.web.context"><code>SecurityContextPersistenceFilter</code></a></li>
<li><a href="../../../../../../../org/springframework/security/web/authentication/logout/LogoutFilter.html" title="class in org.springframework.security.web.authentication.logout"><code>LogoutFilter</code></a></li>
<li><a href="../../../../../../../org/springframework/security/web/authentication/preauth/x509/X509AuthenticationFilter.html" title="class in org.springframework.security.web.authentication.preauth.x509"><code>X509AuthenticationFilter</code></a></li>
<li><a href="../../../../../../../org/springframework/security/web/authentication/preauth/AbstractPreAuthenticatedProcessingFilter.html" title="class in org.springframework.security.web.authentication.preauth"><code>AbstractPreAuthenticatedProcessingFilter</code></a></li>
<li><a href="../../../../../../../org/springframework/security/cas/web/CasAuthenticationFilter.html">CasAuthenticationFilter</a></li>
<li><a href="../../../../../../../org/springframework/security/web/authentication/UsernamePasswordAuthenticationFilter.html" title="class in org.springframework.security.web.authentication"><code>UsernamePasswordAuthenticationFilter</code></a></li>
<li><a href="../../../../../../../org/springframework/security/web/session/ConcurrentSessionFilter.html" title="class in org.springframework.security.web.session"><code>ConcurrentSessionFilter</code></a></li>
<li><a href="../../../../../../../org/springframework/security/openid/OpenIDAuthenticationFilter.html" title="class in org.springframework.security.openid"><code>OpenIDAuthenticationFilter</code></a></li>
<li><a href="../../../../../../../org/springframework/security/web/authentication/ui/DefaultLoginPageGeneratingFilter.html" title="class in org.springframework.security.web.authentication.ui"><code>DefaultLoginPageGeneratingFilter</code></a></li>
<li><a href="../../../../../../../org/springframework/security/web/authentication/ui/DefaultLogoutPageGeneratingFilter.html" title="class in org.springframework.security.web.authentication.ui"><code>DefaultLogoutPageGeneratingFilter</code></a></li>
<li><a href="../../../../../../../org/springframework/security/web/session/ConcurrentSessionFilter.html" title="class in org.springframework.security.web.session"><code>ConcurrentSessionFilter</code></a></li>
<li><a href="../../../../../../../org/springframework/security/web/authentication/www/DigestAuthenticationFilter.html" title="class in org.springframework.security.web.authentication.www"><code>DigestAuthenticationFilter</code></a></li>
<li><a href="../../../../../../../org/springframework/security/oauth2/server/resource/web/BearerTokenAuthenticationFilter.html" title="class in org.springframework.security.oauth2.server.resource.web"><code>BearerTokenAuthenticationFilter</code></a></li>
<li><a href="../../../../../../../org/springframework/security/web/authentication/www/BasicAuthenticationFilter.html" title="class in org.springframework.security.web.authentication.www"><code>BasicAuthenticationFilter</code></a></li>
<li><a href="../../../../../../../org/springframework/security/web/savedrequest/RequestCacheAwareFilter.html" title="class in org.springframework.security.web.savedrequest"><code>RequestCacheAwareFilter</code></a></li>
<li><a href="../../../../../../../org/springframework/security/web/servletapi/SecurityContextHolderAwareRequestFilter.html" title="class in org.springframework.security.web.servletapi"><code>SecurityContextHolderAwareRequestFilter</code></a></li>
<li><a href="../../../../../../../org/springframework/security/web/jaasapi/JaasApiIntegrationFilter.html" title="class in org.springframework.security.web.jaasapi"><code>JaasApiIntegrationFilter</code></a></li>
<li><a href="../../../../../../../org/springframework/security/web/authentication/rememberme/RememberMeAuthenticationFilter.html" title="class in org.springframework.security.web.authentication.rememberme"><code>RememberMeAuthenticationFilter</code></a></li>
<li><a href="../../../../../../../org/springframework/security/web/authentication/AnonymousAuthenticationFilter.html" title="class in org.springframework.security.web.authentication"><code>AnonymousAuthenticationFilter</code></a></li>
<li><a href="../../../../../../../org/springframework/security/web/session/SessionManagementFilter.html" title="class in org.springframework.security.web.session"><code>SessionManagementFilter</code></a></li>
<li><a href="../../../../../../../org/springframework/security/web/access/ExceptionTranslationFilter.html" title="class in org.springframework.security.web.access"><code>ExceptionTranslationFilter</code></a></li>
<li><a href="../../../../../../../org/springframework/security/web/access/intercept/FilterSecurityInterceptor.html" title="class in org.springframework.security.web.access.intercept"><code>FilterSecurityInterceptor</code></a></li>
<li><a href="../../../../../../../org/springframework/security/web/authentication/switchuser/SwitchUserFilter.html" title="class in org.springframework.security.web.authentication.switchuser"><code>SwitchUserFilter</code></a></li>
</ul></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../../../../../../../org/springframework/security/config/annotation/web/HttpSecurityBuilder.html#addFilter-javax.servlet.Filter-">addFilter</a></code>&nbsp;in interface&nbsp;<code><a href="../../../../../../../org/springframework/security/config/annotation/web/HttpSecurityBuilder.html" title="interface in org.springframework.security.config.annotation.web">HttpSecurityBuilder</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&gt;</code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>filter</code> - the <code>Filter</code> to add</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
</dl>
</li>
</ul>
<a name="addFilterAt-javax.servlet.Filter-java.lang.Class-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>addFilterAt</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;addFilterAt(javax.servlet.Filter&nbsp;filter,
                                java.lang.Class&lt;? extends javax.servlet.Filter&gt;&nbsp;atFilter)</pre>
<div class="block">Adds the Filter at the location of the specified Filter class. For example, if you
want the filter CustomFilter to be registered in the same position as
<a href="../../../../../../../org/springframework/security/web/authentication/UsernamePasswordAuthenticationFilter.html" title="class in org.springframework.security.web.authentication"><code>UsernamePasswordAuthenticationFilter</code></a>, you can invoke:
<pre> addFilterAt(new CustomFilter(), UsernamePasswordAuthenticationFilter.class)
 </pre>
Registration of multiple Filters in the same location means their ordering is not
deterministic. More concretely, registering multiple Filters in the same location
does not override existing Filters. Instead, do not register Filters you do not
want to use.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>filter</code> - the Filter to register</dd>
<dd><code>atFilter</code> - the location of another <code>Filter</code> that is already registered
(i.e. known) with Spring Security.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
</dl>
</li>
</ul>
<a name="requestMatchers--">

</a>
<ul class="blockList">
<li class="blockList">
<h4>requestMatchers</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.RequestMatcherConfigurer.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity.RequestMatcherConfigurer</a>&nbsp;requestMatchers()</pre>
<div class="block">Allows specifying which <code>HttpServletRequest</code> instances this
<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> will be invoked on. This method allows for easily invoking the
<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for multiple different <a href="../../../../../../../org/springframework/security/web/util/matcher/RequestMatcher.html" title="interface in org.springframework.security.web.util.matcher"><code>RequestMatcher</code></a> instances. If
only a single <a href="../../../../../../../org/springframework/security/web/util/matcher/RequestMatcher.html" title="interface in org.springframework.security.web.util.matcher"><code>RequestMatcher</code></a> is necessary consider using <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#mvcMatcher-java.lang.String-"><code>mvcMatcher(String)</code></a>,
<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#antMatcher-java.lang.String-"><code>antMatcher(String)</code></a>, <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#regexMatcher-java.lang.String-"><code>regexMatcher(String)</code></a>, or
<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestMatcher-org.springframework.security.web.util.matcher.RequestMatcher-"><code>requestMatcher(RequestMatcher)</code></a>.
<p>
Invoking <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestMatchers--"><code>requestMatchers()</code></a> will not override previous invocations of <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#mvcMatcher-java.lang.String-"><code>mvcMatcher(String)</code></a>},
<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestMatchers--"><code>requestMatchers()</code></a>, <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#antMatcher-java.lang.String-"><code>antMatcher(String)</code></a>,
<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#regexMatcher-java.lang.String-"><code>regexMatcher(String)</code></a>, and <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestMatcher-org.springframework.security.web.util.matcher.RequestMatcher-"><code>requestMatcher(RequestMatcher)</code></a>.
</p>
<h3>Example Configurations</h3>
The following configuration enables the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for URLs that begin
with "/api/" or "/oauth/".
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class RequestMatchersSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http
                        .requestMatchers()
                                .antMatchers(&quot;/api/**&quot;, &quot;/oauth/**&quot;)
                                .and()
                        .authorizeRequests()
                                .antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;)
                                .and()
                        .httpBasic();
        }

        &#064;Override
        protected void configure(AuthenticationManagerBuilder auth) throws Exception {
                auth
                        .inMemoryAuthentication()
                                .withUser(&quot;user&quot;).password(&quot;password&quot;).roles(&quot;USER&quot;);
        }
 }
 </pre>
The configuration below is the same as the previous configuration.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class RequestMatchersSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http
                        .requestMatchers()
                                .antMatchers(&quot;/api/**&quot;)
                                .antMatchers(&quot;/oauth/**&quot;)
                                .and()
                        .authorizeRequests()
                                .antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;)
                                .and()
                        .httpBasic();
        }

        &#064;Override
        protected void configure(AuthenticationManagerBuilder auth) throws Exception {
                auth
                        .inMemoryAuthentication()
                                .withUser(&quot;user&quot;).password(&quot;password&quot;).roles(&quot;USER&quot;);
        }
 }
 </pre>
The configuration below is also the same as the above configuration.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class RequestMatchersSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http
                        .requestMatchers()
                                .antMatchers(&quot;/api/**&quot;)
                                .and()
                         .requestMatchers()
                                .antMatchers(&quot;/oauth/**&quot;)
                                .and()
                        .authorizeRequests()
                                .antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;)
                                .and()
                        .httpBasic();
        }

        &#064;Override
        protected void configure(AuthenticationManagerBuilder auth) throws Exception {
                auth
                        .inMemoryAuthentication()
                                .withUser(&quot;user&quot;).password(&quot;password&quot;).roles(&quot;USER&quot;);
        }
 }
 </pre></div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.RequestMatcherConfigurer.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity.RequestMatcherConfigurer</code></a> for further customizations</dd>
</dl>
</li>
</ul>
<a name="requestMatchers-org.springframework.security.config.Customizer-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>requestMatchers</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;requestMatchers(<a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config">Customizer</a>&lt;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.RequestMatcherConfigurer.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity.RequestMatcherConfigurer</a>&gt;&nbsp;requestMatcherCustomizer)</pre>
<div class="block">Allows specifying which <code>HttpServletRequest</code> instances this
<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> will be invoked on. This method allows for easily invoking the
<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for multiple different <a href="../../../../../../../org/springframework/security/web/util/matcher/RequestMatcher.html" title="interface in org.springframework.security.web.util.matcher"><code>RequestMatcher</code></a> instances. If
only a single <a href="../../../../../../../org/springframework/security/web/util/matcher/RequestMatcher.html" title="interface in org.springframework.security.web.util.matcher"><code>RequestMatcher</code></a> is necessary consider using <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#mvcMatcher-java.lang.String-"><code>mvcMatcher(String)</code></a>,
<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#antMatcher-java.lang.String-"><code>antMatcher(String)</code></a>, <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#regexMatcher-java.lang.String-"><code>regexMatcher(String)</code></a>, or
<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestMatcher-org.springframework.security.web.util.matcher.RequestMatcher-"><code>requestMatcher(RequestMatcher)</code></a>.
<p>
Invoking <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestMatchers--"><code>requestMatchers()</code></a> will not override previous invocations of <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#mvcMatcher-java.lang.String-"><code>mvcMatcher(String)</code></a>},
<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestMatchers--"><code>requestMatchers()</code></a>, <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#antMatcher-java.lang.String-"><code>antMatcher(String)</code></a>,
<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#regexMatcher-java.lang.String-"><code>regexMatcher(String)</code></a>, and <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestMatcher-org.springframework.security.web.util.matcher.RequestMatcher-"><code>requestMatcher(RequestMatcher)</code></a>.
</p>
<h3>Example Configurations</h3>
The following configuration enables the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for URLs that begin
with "/api/" or "/oauth/".
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class RequestMatchersSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http
                        .requestMatchers(requestMatchers ->
                                requestMatchers
                                        .antMatchers(&quot;/api/**&quot;, &quot;/oauth/**&quot;)
                        )
                        .authorizeRequests(authorizeRequests ->
                                authorizeRequests
                                        .antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;)
                        )
                        .httpBasic(withDefaults());
        }
 }
 </pre>
The configuration below is the same as the previous configuration.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class RequestMatchersSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http
                        .requestMatchers(requestMatchers ->
                                requestMatchers
                                        .antMatchers(&quot;/api/**&quot;)
                                        .antMatchers(&quot;/oauth/**&quot;)
                        )
                        .authorizeRequests(authorizeRequests ->
                                authorizeRequests
                                        .antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;)
                        )
                        .httpBasic(withDefaults());
        }
 }
 </pre>
The configuration below is also the same as the above configuration.
<pre> &#064;Configuration
 &#064;EnableWebSecurity
 public class RequestMatchersSecurityConfig extends WebSecurityConfigurerAdapter {

        &#064;Override
        protected void configure(HttpSecurity http) throws Exception {
                http
                        .requestMatchers(requestMatchers ->
                                requestMatchers
                                        .antMatchers(&quot;/api/**&quot;)
                        )
                        .requestMatchers(requestMatchers ->
                        requestMatchers
                                .antMatchers(&quot;/oauth/**&quot;)
                        )
                        .authorizeRequests(authorizeRequests ->
                                authorizeRequests
                                        .antMatchers(&quot;/**&quot;).hasRole(&quot;USER&quot;)
                        )
                        .httpBasic(withDefaults());
        }
 }
 </pre></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>requestMatcherCustomizer</code> - the <a href="../../../../../../../org/springframework/security/config/Customizer.html" title="interface in org.springframework.security.config"><code>Customizer</code></a> to provide more options for
the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.RequestMatcherConfigurer.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity.RequestMatcherConfigurer</code></a></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
</dl>
</li>
</ul>
<a name="requestMatcher-org.springframework.security.web.util.matcher.RequestMatcher-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>requestMatcher</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;requestMatcher(<a href="../../../../../../../org/springframework/security/web/util/matcher/RequestMatcher.html" title="interface in org.springframework.security.web.util.matcher">RequestMatcher</a>&nbsp;requestMatcher)</pre>
<div class="block">Allows configuring the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> to only be invoked when matching the
provided <a href="../../../../../../../org/springframework/security/web/util/matcher/RequestMatcher.html" title="interface in org.springframework.security.web.util.matcher"><code>RequestMatcher</code></a>. If more advanced configuration is necessary,
consider using <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestMatchers--"><code>requestMatchers()</code></a>.
<p>
Invoking <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestMatcher-org.springframework.security.web.util.matcher.RequestMatcher-"><code>requestMatcher(RequestMatcher)</code></a> will override previous invocations
of <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestMatchers--"><code>requestMatchers()</code></a>, <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#mvcMatcher-java.lang.String-"><code>mvcMatcher(String)</code></a>, <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#antMatcher-java.lang.String-"><code>antMatcher(String)</code></a>,
<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#regexMatcher-java.lang.String-"><code>regexMatcher(String)</code></a>, and <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestMatcher-org.springframework.security.web.util.matcher.RequestMatcher-"><code>requestMatcher(RequestMatcher)</code></a>.
</p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>requestMatcher</code> - the <a href="../../../../../../../org/springframework/security/web/util/matcher/RequestMatcher.html" title="interface in org.springframework.security.web.util.matcher"><code>RequestMatcher</code></a> to use (i.e. new
AntPathRequestMatcher("/admin/**","GET") )</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestMatchers--"><code>requestMatchers()</code></a>,
<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#antMatcher-java.lang.String-"><code>antMatcher(String)</code></a>,
<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#regexMatcher-java.lang.String-"><code>regexMatcher(String)</code></a></dd>
</dl>
</li>
</ul>
<a name="antMatcher-java.lang.String-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>antMatcher</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;antMatcher(java.lang.String&nbsp;antPattern)</pre>
<div class="block">Allows configuring the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> to only be invoked when matching the
provided ant pattern. If more advanced configuration is necessary, consider using
<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestMatchers--"><code>requestMatchers()</code></a> or <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestMatcher-org.springframework.security.web.util.matcher.RequestMatcher-"><code>requestMatcher(RequestMatcher)</code></a>.
<p>
Invoking <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#antMatcher-java.lang.String-"><code>antMatcher(String)</code></a> will override previous invocations of <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#mvcMatcher-java.lang.String-"><code>mvcMatcher(String)</code></a>},
<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestMatchers--"><code>requestMatchers()</code></a>, <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#antMatcher-java.lang.String-"><code>antMatcher(String)</code></a>,
<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#regexMatcher-java.lang.String-"><code>regexMatcher(String)</code></a>, and <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestMatcher-org.springframework.security.web.util.matcher.RequestMatcher-"><code>requestMatcher(RequestMatcher)</code></a>.
</p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>antPattern</code> - the Ant Pattern to match on (i.e. "/admin/**")</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../../../../org/springframework/security/web/util/matcher/AntPathRequestMatcher.html" title="class in org.springframework.security.web.util.matcher"><code>AntPathRequestMatcher</code></a></dd>
</dl>
</li>
</ul>
<a name="mvcMatcher-java.lang.String-">

</a>
<ul class="blockList">
<li class="blockList">
<h4>mvcMatcher</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;mvcMatcher(java.lang.String&nbsp;mvcPattern)</pre>
<div class="block">Allows configuring the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> to only be invoked when matching the
provided Spring MVC pattern. If more advanced configuration is necessary, consider using
<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestMatchers--"><code>requestMatchers()</code></a> or <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestMatcher-org.springframework.security.web.util.matcher.RequestMatcher-"><code>requestMatcher(RequestMatcher)</code></a>.
<p>
Invoking <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#mvcMatcher-java.lang.String-"><code>mvcMatcher(String)</code></a> will override previous invocations of <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#mvcMatcher-java.lang.String-"><code>mvcMatcher(String)</code></a>},
<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestMatchers--"><code>requestMatchers()</code></a>, <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#antMatcher-java.lang.String-"><code>antMatcher(String)</code></a>,
<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#regexMatcher-java.lang.String-"><code>regexMatcher(String)</code></a>, and <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestMatcher-org.springframework.security.web.util.matcher.RequestMatcher-"><code>requestMatcher(RequestMatcher)</code></a>.
</p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>mvcPattern</code> - the Spring MVC Pattern to match on (i.e. "/admin/**")</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../../../../org/springframework/security/web/servlet/util/matcher/MvcRequestMatcher.html" title="class in org.springframework.security.web.servlet.util.matcher"><code>MvcRequestMatcher</code></a></dd>
</dl>
</li>
</ul>
<a name="regexMatcher-java.lang.String-">

</a>
<ul class="blockListLast">
<li class="blockList">
<h4>regexMatcher</h4>
<pre>public&nbsp;<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders">HttpSecurity</a>&nbsp;regexMatcher(java.lang.String&nbsp;pattern)</pre>
<div class="block">Allows configuring the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> to only be invoked when matching the
provided regex pattern. If more advanced configuration is necessary, consider using
<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestMatchers--"><code>requestMatchers()</code></a> or <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestMatcher-org.springframework.security.web.util.matcher.RequestMatcher-"><code>requestMatcher(RequestMatcher)</code></a>.
<p>
Invoking <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#regexMatcher-java.lang.String-"><code>regexMatcher(String)</code></a> will override previous invocations of <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#mvcMatcher-java.lang.String-"><code>mvcMatcher(String)</code></a>},
<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestMatchers--"><code>requestMatchers()</code></a>, <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#antMatcher-java.lang.String-"><code>antMatcher(String)</code></a>,
<a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#regexMatcher-java.lang.String-"><code>regexMatcher(String)</code></a>, and <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html#requestMatcher-org.springframework.security.web.util.matcher.RequestMatcher-"><code>requestMatcher(RequestMatcher)</code></a>.
</p></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>pattern</code> - the Regular Expression to match on (i.e. "/admin/.+")</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the <a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.html" title="class in org.springframework.security.config.annotation.web.builders"><code>HttpSecurity</code></a> for further customizations</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../../../../../../org/springframework/security/web/util/matcher/RegexRequestMatcher.html" title="class in org.springframework.security.web.util.matcher"><code>RegexRequestMatcher</code></a></dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>


<div class="bottomNav"><a name="navbar.bottom">

</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">

</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../../../../index-all.html">Index</a></li>
<li><a href="../../../../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev&nbsp;Class</li>
<li><a href="../../../../../../../org/springframework/security/config/annotation/web/builders/HttpSecurity.MvcMatchersRequestMatcherConfigurer.html" title="class in org.springframework.security.config.annotation.web.builders"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../../../../../index.html?org/springframework/security/config/annotation/web/builders/HttpSecurity.html" target="_top">Frames</a></li>
<li><a href="HttpSecurity.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../../../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript">allClassesLink=document.getElementById("allclasses_navbar_bottom");if(window==top){allClassesLink.style.display="block";}else{allClassesLink.style.display="none";}</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">

</a></div>

<script>if(window.parent==window){(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','//www.google-analytics.com/analytics.js','ga');ga('create','UA-2728886-23','auto',{'siteSpeedSampleRate':100});ga('send','pageview');}</script></body>
</html>
